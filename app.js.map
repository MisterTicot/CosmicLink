{"version":3,"sources":["webpack://lib/./src/app.js","webpack://lib/./src/helpers.js","webpack://lib/./src/tamper.js","webpack://lib/./src/signing-ui.js"],"names":["dom","require","Page","copyContent","location","origin","websiteUrl","textContent","pathname","query","search","header","onclick","signingUI","signingPage","add","sign","onSelect","history","replaceState","refresh","init","help","current","select","helpers","exports","html","enableButton","button","value","disabled","disableButton","readWriteBox","box","placeholder","readOnly","undefined","style","cursor","readOnlyBox","disableBox","display","element","type","arguments","length","message","classname","messageNode","create","rewrite","showIf","flag","show","hide","switchPage","from","to","append","body","main","document","activeElement","prevNode","grab","destroy","copiedNode","parentNode","insertBefore","setTimeout","hidden","tamper","src","localStorage","myHash","alphabet","hash","i","charAt","Math","floor","random","cosmicLib","CosmicLink","env","QrCode","timeout","authenticators","the","key","cosmiclink_description","nodes","forEach","entry","authenticator","name","redirect","redirectionCheckbox","checked","qrCode","qrCodeUI","enable","substr","id","passphrase","resolve","networkPassphrase","config","setupNetwork","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","cosmicLink","tdesc","authenticatorUI","redirectionUI","transactionUI","stop","needSource","accountId","needNetwork","customNetwork","horizon","network","source","selectNetwork","saveTransaction","transaction","handle","then","error","status","getAccountId","accountMsgbox","accountUI","disable","networkUI","accountDiv","_callee2","_context2","accountIdBox","sent","abrupt","t0","networkDiv","customNetworkSetup","networkSelector","publicNetwork","scrollLeft","testNetwork","onscroll","customPassphrase","customHorizon","lock","selector","onchange","onExit","textOverflow","networkName","redirection","redirectionForm","textarea","textareaForm","qrForm","redirectionButton","xdrBox","loadingAnim","url","buttonText","href","click","clear","_ref3","_callee3","_context3","isEmbedded","target","open","window","parent","postMessage","replace","redirectionMsgbox","sendTransaction","console","response","_x","apply","this","_callee4","_context4","send","referrer","back","canvas","toCanvas","margin","scale","title","QR","qrButton","className"],"mappings":"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","file":"app.js","sourcesContent":["\"use_strict\"\n/**\n * Cosmic.Link Graphical User Interface\n */\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst Page = require(\"@cosmic-plus/domutils/es5/page\")\n\nconst { copyContent } = require(\"./helpers\")\n\n// Header\nif (location.origin === \"null\") dom.websiteUrl.textContent = location.pathname\nelse dom.websiteUrl.textContent = location.origin + location.pathname\ndom.query.textContent = location.search\ndom.header.onclick = () => copyContent(dom.header)\n\n// Robot tamper\nrequire(\"./tamper\")\n\n// Signing interface\nconst signingUI = require(\"./signing-ui\")\nconst signingPage = Page.add(\"Sign\", dom.sign)\nsigningPage.onSelect = function () {\n  history.replaceState(\"\", null, location.pathname + location.search)\n  signingUI.refresh()\n}\n\nsigningUI.init()\n\n// About page\nPage.add(\"Help\", dom.help)\n\n// Default page\nif (Page.current === signingPage) signingPage.onSelect()\nelse if (!Page.current) Page.select(\"#sign\")\n","\"use_strict\"\n/**\n * Generic helpers\n */\nconst helpers = exports\n\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\n\n/*******************************************************************************\n * Form Elements Helpers\n */\n\nhelpers.enableButton = function (button, value, onclick) {\n  if (typeof value === \"string\") button.value = value\n  button.onclick = onclick\n  button.disabled = false\n}\n\nhelpers.disableButton = function (button, value) {\n  if (typeof value === \"string\") button.value = value\n  button.disabled = true\n}\n\nhelpers.readWriteBox = function (box, placeholder, value) {\n  if (typeof value === \"string\") box.value = value\n  if (typeof placeholder === \"string\") box.placeholder = placeholder\n  box.disabled = false\n  box.readOnly = false\n  box.onclick = undefined\n  box.style.cursor = \"initial\"\n}\n\nhelpers.readOnlyBox = function (box, value) {\n  if (typeof value === \"string\") box.value = value\n  box.disabled = false\n  box.readOnly = true\n  box.onclick = () => helpers.copyContent(box)\n  box.style.cursor = \"pointer\"\n}\n\nhelpers.disableBox = function (box, placeholder) {\n  helpers.readWriteBox(box, placeholder, \"\")\n  box.disabled = true\n}\n\n/*******************************************************************************\n * Other Helpers\n */\n\nhelpers.display = function (element, type = \"\", message = \"\") {\n  const classname = type ? \".\" + type : null\n  const messageNode = classname\n    ? html.create(\"span\", classname, message)\n    : message\n  html.rewrite(element, html.create(\"span\", classname, messageNode))\n}\n\nhelpers.showIf = function (flag, element) {\n  flag ? html.show(element) : html.hide(element)\n}\n\nhelpers.switchPage = function (from, to) {\n  html.append(dom.body, from)\n  html.append(dom.main, to)\n}\n\nhelpers.copyContent = function (element) {\n  if (html.copyContent(element) && document.activeElement.value) {\n    const prevNode = html.grab(\"#copied\")\n    if (prevNode) html.destroy(prevNode)\n    const copiedNode = html.create(\"span\", \"#copied\", \"Copied\")\n    element.parentNode.insertBefore(copiedNode, element)\n    setTimeout(() => {\n      copiedNode.hidden = true\n    }, 3000)\n  }\n}\n","\"use_strict\"\n/**\n * Robot tamper.\n */\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\n\nfunction myHash () {\n  if (localStorage.myHash) return localStorage.myHash\n\n  var alphabet =\n    \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  var size = 32\n\n  var hash = \"\"\n  for (var i = 0; i < size; i++) {\n    hash += alphabet.charAt(Math.floor(Math.random() * alphabet.length))\n  }\n\n  localStorage.myHash = hash\n  return hash\n}\n\ndom.tamper.src = \"https://robohash.org/\" + myHash()\n","\"use_strict\"\nconst main = exports\n\nconst cosmicLib = require(\"cosmic-lib\")\nconst CosmicLink = cosmicLib.CosmicLink\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst env = require(\"@cosmic-plus/jsutils/es5/env\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\nconst QrCode = require(\"qrcode\")\nconst { timeout } = require(\"@cosmic-plus/jsutils/es5/misc\")\n\nconst authenticators = require(\"./authenticators\")\nconst the = require(\"./shared\")\n\nconst {\n  enableButton,\n  disableButton,\n  readWriteBox,\n  readOnlyBox,\n  disableBox,\n  display,\n  showIf\n} = require(\"./helpers\")\n\n// Run once page is fully loaded\nmain.init = function () {\n  // Step 1: Transaction\n  if (!the.query) html.rewrite(dom.cosmiclink_description, \"No transaction\")\n\n  // Step 2: Authenticator\n  authenticators.nodes.forEach(entry => html.append(dom.authenticators, entry))\n  dom.authenticators.value = the.authenticator.name\n\n  // Step 3: Signing\n  if (the.redirect) dom.redirectionCheckbox.checked = true\n  if (the.qrCode) qrCodeUI.enable()\n\n  // CosmicLib network setup\n  for (let key in localStorage) {\n    if (key.substr(0, 8) === \"network:\") {\n      const id = key.substr(8)\n      const passphrase = cosmicLib.resolve.networkPassphrase(id)\n      cosmicLib.config.setupNetwork(id, localStorage[key], passphrase)\n    }\n  }\n}\n\nmain.refresh = async function () {\n  if (the.query) the.cosmicLink = new CosmicLink(the.query)\n  else the.cosmicLink = { tdesc: {} }\n  authenticatorUI.init()\n  redirectionUI.init()\n  if (the.cosmicLink) transactionUI.refresh()\n}\n\n/*******************************************************************************\n * Step 1: Transaction UI\n */\n\nconst transactionUI = {}\n\ntransactionUI.refresh = function () {\n  if (the.authenticator.needSource && !the.accountId) {\n    if (!the.authenticator.getAccountId) {\n      redirectionUI.error(\"Please set a source account\")\n    }\n    return\n  }\n  if (the.authenticator.needNetwork) {\n    if (dom.customNetwork.checked && (!the.horizon || !the.network)) {\n      redirectionUI.error(\"Please fill custom network fields\")\n      return\n    }\n  }\n\n  cosmicLib.config.source = the.accountId\n  cosmicLib.config.network = the.network\n\n  the.cosmicLink.selectNetwork()\n  const saveTransaction = the.transaction = the.authenticator.handle(\n    the.cosmicLink\n  )\n\n  the.transaction\n    .then(function (value) {\n      if (the.transaction === saveTransaction) redirectionUI.refresh(value)\n    })\n    .catch(function () {\n      if (the.transaction === saveTransaction)\n        redirectionUI.error(the.cosmicLink.status)\n    })\n}\n\n/*******************************************************************************\n * Step 2: Authenticator UI\n */\n\nconst authenticatorUI = {}\n\nauthenticatorUI.init = function () {\n  display(dom.accountMsgbox, \"\")\n  the.authenticator = authenticators[dom.authenticators.value]\n  localStorage.authenticator = the.authenticator.name\n\n  if (the.authenticator.needSource) accountUI.init()\n  else accountUI.disable()\n  if (the.authenticator.needNetwork) networkUI.init()\n  else networkUI.disable()\n\n  if (the.authenticator.refresh) the.authenticator.refresh(main.refresh)\n}\n\n/**\n * AccountID box UI\n */\nconst accountUI = {}\n\naccountUI.disable = function () {\n  html.hide(dom.accountDiv)\n  the.accountId = undefined\n}\n\naccountUI.init = async function () {\n  html.show(dom.accountDiv)\n\n  if (!the.authenticator.getAccountId) {\n    if (the.cosmicLink.tdesc.source) {\n      if (the.cosmicLink.tdesc.source.error) {\n        disableBox(dom.accountIdBox, the.cosmicLink.tdesc.source.error.message)\n      } else {\n        the.accountId = true\n        readOnlyBox(dom.accountIdBox, the.cosmicLink.tdesc.source)\n      }\n    } else {\n      the.accountId = localStorage.accountId\n      readWriteBox(\n        dom.accountIdBox,\n        \"Your Account Address or ID\",\n        the.accountId\n      )\n    }\n  } else {\n    the.accountId = undefined\n    disableBox(dom.accountIdBox, \"Connecting...\")\n\n    const authenticator = the.authenticator\n    try {\n      const accountId = await the.authenticator.getAccountId()\n      if (the.authenticator !== authenticator) return\n      the.accountId = accountId\n      readOnlyBox(dom.accountIdBox, accountId)\n      transactionUI.refresh()\n    } catch (error) {\n      if (the.authenticator !== authenticator) return\n      dom.accountIdBox.placeholder = \"Error\"\n      display(dom.accountMsgbox, \"error\", error.message + \".\")\n    }\n  }\n}\n\n/**\n * Network selection UI\n */\nconst networkUI = {}\n\nnetworkUI.disable = function () {\n  html.hide(dom.networkDiv)\n  the.network = \"public\"\n  the.horizon = undefined\n}\n\nnetworkUI.init = function () {\n  html.show(dom.networkDiv)\n  html.hide(dom.customNetworkSetup)\n  the.network =\n    the.cosmicLink.tdesc.network || localStorage.networkSelector || \"public\"\n  the.horizon = undefined\n\n  switch (the.network) {\n  case undefined:\n  case \"public\":\n    dom.publicNetwork.checked = true\n    dom.networkSelector.scrollLeft = 0\n    break\n  case \"test\":\n    dom.testNetwork.checked = true\n    break\n  default:\n    if (dom.networkSelector.onscroll) dom.networkSelector.onscroll()\n    // Doesn't works when called synchronously.\n    timeout(1).then(() => dom.networkSelector.scrollLeft = 999)\n    dom.customNetwork.checked = true\n\n    html.show(dom.customNetworkSetup)\n    if (!the.network) the.network = localStorage.customPassphrase\n    the.horizon =\n        cosmicLib.resolve.horizon(the.network || \"\")\n        || the.cosmicLink.tdesc.horizon\n    dom.customPassphrase.value = the.network || \"\"\n    dom.customHorizon.value = the.horizon || \"\"\n  }\n\n  if (the.cosmicLink.tdesc.network) networkUI.lock()\n}\n\nnetworkUI.lock = function () {\n  readOnlyBox(dom.customPassphrase)\n  dom.publicNetwork.disabled = true\n  dom.testNetwork.disabled = true\n  dom.customNetwork.disabled = true\n}\n\nnetworkUI.switch = function (selector) {\n  localStorage.networkSelector = selector\n  main.refresh()\n}\n\n/**\n * HTML Elements Events\n */\n\ndom.authenticators.onchange = function () {\n  if (the.authenticator && the.authenticator.onExit) the.authenticator.onExit()\n  the.redirect = localStorage.redirect = false\n  dom.redirectionCheckbox.checked = false\n  main.refresh()\n}\n\ndom.accountIdBox.onchange = function () {\n  the.accountId = localStorage.accountId = dom.accountIdBox.value\n  main.refresh()\n}\n\ndom.networkSelector.onscroll = function () {\n  dom.networkSelector.style.textOverflow = \"initial\"\n  dom.networkSelector.onscroll = undefined\n}\n\ndom.publicNetwork.onchange = () => networkUI.switch(\"public\")\ndom.testNetwork.onchange = () => networkUI.switch(\"test\")\ndom.customNetwork.onchange = () => networkUI.switch(\"\")\n\ndom.customPassphrase.onchange = function () {\n  const networkName = cosmicLib.resolve.networkName(dom.customPassphrase.value)\n  localStorage.customPassphrase = networkName\n  networkUI.switch(\"\")\n}\n\ndom.customHorizon.onchange = function () {\n  the.horizon = dom.customHorizon.value\n  if (the.horizon && the.horizon.substr(0, 4) !== \"http\") {\n    the.horizon = \"https://\" + the.horizon\n  }\n  if (the.network && the.horizon) {\n    const passphrase = cosmicLib.resolve.networkPassphrase(the.network)\n    cosmicLib.config.setupNetwork(the.network, the.horizon, passphrase)\n    localStorage[\"network:\" + passphrase] = the.horizon\n  }\n  if (the.network) main.refresh()\n}\n\n/*******************************************************************************\n * Step 3: Signing/Redirection UI\n */\n\nconst redirectionUI = {}\n\nredirectionUI.init = function () {\n  redirectionUI.display(\"\")\n  showIf(the.authenticator.redirection, dom.redirectionForm)\n  showIf(the.authenticator.textarea, dom.textareaForm)\n  showIf(the.query && the.authenticator.qrCode, dom.qrForm)\n\n  if (!the.query) {\n    if (the.authenticator.url) {\n      const onclick = () => location.href = the.authenticator.url\n      enableButton(dom.redirectionButton, the.authenticator.buttonText, onclick)\n    } else {\n      redirectionUI.error(\"No transaction\")\n    }\n  } else {\n    if (the.authenticator.redirection) disableButton(dom.redirectionButton, \"…\")\n    if (the.authenticator.textarea) disableBox(dom.xdrBox, \"Computing...\")\n    if (the.authenticator.qrCode) qrCodeUI.loadingAnim()\n  }\n}\n\nredirectionUI.refresh = function (value) {\n  if (the.authenticator.redirection) {\n    const onclick = () => redirectionUI.click(value)\n    enableButton(dom.redirectionButton, the.authenticator.buttonText, onclick)\n  }\n\n  if (the.redirect) dom.redirectionButton.onclick()\n\n  if (the.authenticator.textarea) readOnlyBox(dom.xdrBox, value)\n  if (the.authenticator.qrCode) qrCodeUI.refresh(value)\n}\n\nredirectionUI.error = function (error) {\n  disableButton(dom.redirectionButton, error)\n  disableBox(dom.xdrBox, error)\n  html.clear(dom.qrCode)\n}\n\nredirectionUI.click = async function (value) {\n  if (typeof value === \"string\") {\n    if (env.isEmbedded && the.authenticator.target === \"new\") {\n      open(value, \"_blank\")\n      window.parent.postMessage(\"close\", \"*\")\n    } else {\n      location.replace(value)\n      if (env.isEmbedded && the.authenticator.target === \"external\") {\n        window.parent.postMessage(\"close\", \"*\")\n      }\n    }\n  } else if (typeof value === \"function\") {\n    display(dom.redirectionMsgbox, \"info\", \"Waiting for confirmation...\")\n    dom.redirectionButton.disabled = true\n\n    try {\n      const transaction = await value()\n      await redirectionUI.sendTransaction(transaction)\n    } catch (error) {\n      console.error(error.response || error)\n      redirectionUI.display(\"error\", error.message.replace(/\\.$/, \"\"))\n      dom.redirectionButton.disabled = false\n    }\n  }\n}\n\nredirectionUI.sendTransaction = async function () {\n  redirectionUI.display(\"info\", \"Sending to the network...\")\n  history.replaceState({}, \"\", the.cosmicLink.query)\n  dom.query.textContent = the.cosmicLink.query\n  networkUI.lock()\n\n  await the.cosmicLink.send()\n  redirectionUI.display(\"info\", \"Transaction validated\")\n  if (env.isEmbedded) parent.postMessage(\"close\", \"*\")\n  if (document.referrer) {\n    enableButton(dom.redirectionButton, \"Close\", () => history.back())\n  } else {\n    dom.redirectionButton.value = \"Done\"\n  }\n}\n\nredirectionUI.display = function (type, message) {\n  display(dom.redirectionMsgbox, type, message)\n}\n\nconst qrCodeUI = {}\n\nqrCodeUI.loadingAnim = function () {\n  html.rewrite(dom.qrCode, html.create(\"canvas\", \".cosmiclib_loadingAnim\"))\n}\n\nqrCodeUI.refresh = function (value) {\n  if (!the.authenticator.qrCode || !value) return\n\n  const canvas = html.create(\"canvas\")\n  QrCode.toCanvas(canvas, value, { margin: 0, scale: 4 })\n  canvas.title = value\n  html.rewrite(dom.qrCode, canvas)\n}\n\nqrCodeUI.switch = function () {\n  the.qrCode = localStorage.QR = !the.qrCode\n  if (the.qrCode) qrCodeUI.enable()\n  else qrCodeUI.disable()\n}\n\nqrCodeUI.enable = function () {\n  dom.qrButton.className = \"enabled\"\n  html.show(dom.qrCode)\n}\n\nqrCodeUI.disable = function () {\n  dom.qrButton.className = undefined\n  html.hide(dom.qrCode)\n}\n\n/**\n * HTML Elements Events\n */\n\ndom.redirectionButton.onclick = redirectionUI.click\ndom.qrButton.onclick = qrCodeUI.switch\n\ndom.redirectionCheckbox.onchange = function () {\n  the.redirect = localStorage.redirect = !the.redirect\n}\n"],"sourceRoot":""}