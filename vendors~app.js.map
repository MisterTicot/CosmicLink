{"version":3,"sources":["webpack://lib/./node_modules/@cosmic-plus/jsutils/es5/env.js","webpack://lib/./node_modules/@cosmic-plus/jsutils/es5/misc.js","webpack://lib/./node_modules/@cosmic-plus/base/es5/stellar-sdk.js","webpack://lib/./node_modules/cosmic-lib/es5/specs.js","webpack://lib/./node_modules/cosmic-lib/es5/resolve.js","webpack://lib/./node_modules/cosmic-lib/es5/status.js","webpack://lib/./node_modules/qrcode/lib/core/utils.js","webpack://lib/./node_modules/qrcode/lib/core/mode.js","webpack://lib/./node_modules/qrcode/lib/utils/typedarray-buffer.js","webpack://lib/./node_modules/@cosmic-plus/domutils/es5/dom.js","webpack://lib/./node_modules/cosmic-lib/es5/decode.js","webpack://lib/./node_modules/cosmic-lib/es5/config.js","webpack://lib/./node_modules/@babel/runtime/helpers/typeof.js","webpack://lib/./node_modules/cosmic-lib/es5/format.js","webpack://lib/./node_modules/cosmic-lib/es5/signers-utils.js","webpack://lib/./node_modules/cosmic-lib/es5/convert.js","webpack://lib/./node_modules/cosmic-lib/es5/check.js","webpack://lib/./node_modules/cosmic-lib/es5/normalize.js","webpack://lib/./node_modules/cosmic-lib/es5/destruct.js","webpack://lib/./node_modules/qrcode/node_modules/isarray/index.js","webpack://lib/./node_modules/qrcode/lib/core/error-correction-level.js","webpack://lib/./node_modules/cosmic-lib/es5/event.js","webpack://lib/./node_modules/cosmic-lib/es5/construct.js","webpack://lib/./node_modules/@cosmic-plus/base/es5/buffer.js","webpack://lib/./node_modules/cosmic-lib/es5/encode.js","webpack://lib/./node_modules/cosmic-lib/es5/expand.js","webpack://lib/./node_modules/qrcode/lib/core/error-correction-code.js","webpack://lib/./node_modules/qrcode/lib/core/version-check.js","webpack://lib/./node_modules/qrcode/lib/core/regex.js","webpack://lib/./node_modules/qrcode/lib/renderer/utils.js","webpack://lib/./node_modules/@cosmic-plus/domutils/es5/page.js","webpack://lib/./node_modules/@cosmic-plus/domutils/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://lib/./node_modules/@cosmic-plus/domutils/node_modules/@babel/runtime/helpers/createClass.js","webpack://lib/./node_modules/cosmic-lib/es5/index.js","webpack://lib/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://lib/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://lib/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://lib/./node_modules/@babel/runtime/helpers/inherits.js","webpack://lib/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://lib/./node_modules/@cosmic-plus/base/es5/aliases.js","webpack://lib/./node_modules/@cosmic-plus/jsutils/es5/nice.js","webpack://lib/./node_modules/cosmic-lib/es5/cosmiclink.js","webpack://lib/./node_modules/cosmic-lib/es5/action.js","webpack://lib/./node_modules/@cosmic-plus/base/es5/axios.js","webpack://lib/./node_modules/cosmic-lib/es5/parse.js","webpack://lib/./node_modules/cosmic-lib/es5/load.js","webpack://lib/./node_modules/@cosmic-plus/domutils/es5/load.js","webpack://lib/./node_modules/@cosmic-plus/domutils/node_modules/@babel/runtime/regenerator/index.js","webpack://lib/./node_modules/@cosmic-plus/domutils/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://lib/./node_modules/qrcode/lib/browser.js","webpack://lib/./node_modules/qrcode/lib/can-promise.js","webpack://lib/./node_modules/qrcode/lib/core/qrcode.js","webpack://lib/./node_modules/qrcode/lib/core/bit-buffer.js","webpack://lib/./node_modules/qrcode/lib/core/bit-matrix.js","webpack://lib/./node_modules/qrcode/lib/core/alignment-pattern.js","webpack://lib/./node_modules/qrcode/lib/core/finder-pattern.js","webpack://lib/./node_modules/qrcode/lib/core/mask-pattern.js","webpack://lib/./node_modules/qrcode/lib/core/reed-solomon-encoder.js","webpack://lib/./node_modules/qrcode/lib/core/polynomial.js","webpack://lib/./node_modules/qrcode/lib/core/galois-field.js","webpack://lib/./node_modules/qrcode/lib/core/version.js","webpack://lib/./node_modules/qrcode/lib/core/format-info.js","webpack://lib/./node_modules/qrcode/lib/core/segments.js","webpack://lib/./node_modules/qrcode/lib/core/numeric-data.js","webpack://lib/./node_modules/qrcode/lib/core/alphanumeric-data.js","webpack://lib/./node_modules/qrcode/lib/core/byte-data.js","webpack://lib/./node_modules/qrcode/lib/core/kanji-data.js","webpack://lib/./node_modules/dijkstrajs/dijkstra.js","webpack://lib/./node_modules/qrcode/lib/renderer/canvas.js","webpack://lib/./node_modules/qrcode/lib/renderer/svg-tag.js"],"names":["process","global","env","exports","isBrowser","window","document","isNode","versions","node","isEmbedded","self","top","nodeRequire","stealth_require","eval","module","misc","delay","thunk","memoized","firstCall","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","setHiddenProperty","object","name","value","Object","defineProperty","enumerable","configurable","deprecated","date","before","after","console","error","concat","useExtra","obj","extraField","isUtf8","match","isBase64","day","time","Date","toISOString","replace","copy","__webpack_require__","undefined","StellarSdk","specs","field","transactionOptionalFields","fieldDesc","network","horizon","callback","memo","source","sequence","minTime","maxTime","fee","isTransactionField","find","operationMandatoryFields","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createPassiveOffer","createPassiveSellOffer","inflation","manageData","manageOffer","manageBuyOffer","manageSellOffer","pathPayment","payment","setOptions","operationOptionalFields","operationFields","isOperationField","operation","fieldType","amount","asset","assetCode","assetIssuer","authorize","bumpTo","buyAmount","buying","clearFlags","destAsset","destAmount","destination","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","medThreshold","memoBinary","memoHash","memoId","memoReturn","memoText","memoType","offerId","price","path","selling","sendAsset","sendMax","setFlags","signer","signerHash","signerKey","signerType","signerTx","signerWeight","startingBalance","trustor","types","_loop","_field","type","entry","push","neutralAccountId","sep7MandatoryFields","tx","pay","sep7OptionalFields","sep7IgnoredFields","_regeneratorRuntime","_asyncToGenerator","status","_addressResolver","mark","_callee5","conf","address","account","accountId","wrap","_context5","prev","next","FederationServer","sent","account_id","Error","memo_type","aliases","alias","abrupt","t0","fail","stop","apply","this","arguments","accountResolver","_x6","_x7","_x8","_accountResolver","_callee6","quietFlag","server","accountResponse","_context6","loadAccount","response","makeAccountResponse","publicKey","Account","cache","id","signers","public_key","weight","key","resolveTxSource","_x14","_x15","_resolveTxSource","_callee7","_context7","signersTableToSignersList","signersTable","array","forEach","current","Server","useNetwork","passphrase","networkPassphrase","log","Network","use","currentNetwork","networkName","index","values","indexOf","keys","promise","_x","_x2","addressResolver","_ref","_callee","_context","_x3","_x4","_x5","isAccountEmpty","then","txSourceAccount","_ref2","_callee2","baseAccount","_context2","sub","_baseAccount","_x9","_x10","_x11","txSources","transaction","extra","operations","a","txSigners","_ref3","_callee3","_context3","t1","done","filter","_x12","_x13","txSignersList","_ref4","_callee4","_context4","_x16","_x17","_cosmicplus","html","errorContinuation","continuation","init","errors","update","_statusNode","grab","textContent","errorStatus","addClass","errorsNode","lineNode","create","append","makeHtmlNode","statusNode","statusLine","errorLine","toSJISFunction","CODEWORDS_COUNT","getSymbolSize","version","getSymbolTotalCodewords","getBCHDigit","data","digit","setToSJISFunction","f","isKanjiModeEnabled","toSJIS","kanji","VersionCheck","Regex","NUMERIC","bit","ccBits","ALPHANUMERIC","BYTE","KANJI","MIXED","getCharCountIndicator","mode","isValid","getBestModeForData","dataStr","testNumeric","testAlphanumeric","testKanji","toString","from","defaultValue","toLowerCase","fromString","e","isArray","Buffer","TYPED_ARRAY_SUPPORT","arr","Uint8Array","__proto__","prototype","foo","typedArraySupport","K_MAX_LENGTH","arg","offset","allocUnsafe","that","TypeError","ArrayBuffer","byteOffset","byteLength","RangeError","buf","fromArrayLike","fromArrayBuffer","createBuffer","actual","write","isBuffer","len","checked","buffer","val","Array","fromObject","size","i","utf8ToBytes","units","codePoint","Infinity","leadSurrogate","bytes","charCodeAt","isView","Symbol","species","writable","isFinite","remaining","src","dst","blitBuffer","utf8Write","start","end","newBuf","subarray","sliceLen","target","targetStart","set","call","fill","code","list","pos","_isBuffer","b","dom","element","querySelectorAll","_element","head","body","header","nav","main","footer","ingest","decode","check","normalize","query","tdesc","command","params","split","param","odesc","decodeURIComponent","assetLower","temp","issuer","assetsArray","assetsList","map","boolean","matched","numerator","denominator","n","d","config","event","page","setupNetwork","Networks","PUBLIC","TESTNET","all","addAliases","definitions","removeAliases","remove","clickHandlers","defaultClickHandlers","setClickHandler","clearClickHandler","_typeof2","iterator","constructor","_typeof","format","nice","signersUtils","parentProperty","property","parentNode","infoNode","trNode","_index","opNode","retNode","sourceNode","addressNode","meaning","msg","operationMeaning","fieldNode","txt","signatures","signersNode","utils","signersList","sources","div","accountSignersNode","title","titleNode","listNode","signerNode","hasSigned","insertBefore","firstChild","makeAccountSignersNode","parentOdesc","parentIndex","parentTdesc","domNode","eventObject","cosmicLink","onclick","callClickHandler","_resolveAddressAndUpdate","animation","destroy","errDesc","errorNode","message","resolveAddressAndUpdate","significant","max","Number","nicified","String","className","assetNode","assetsArrayNode","hash","toLocaleString","flags","valueNode","typeNode","value1","value2","value3","StrKey","decodeSha256Hash","weightNode","_classCallCheck","_createClass","_resolve","SignersUtils","_resolve2","extendFlag","txHash","assign","utilities","hasSigner","keypair","Keypair","fromPublicKey","verify","signature","convert","construct","destruct","encode","uriToQuery","uri","queryToTdesc","tdescToJson","JSON","stringify","tdescToTransaction","transactionToXdr","toEnvelope","toXDR","xdrToSep7","xdr","options","sep7","encodeURIComponent","url","xdrToTransaction","Transaction","stripSignatures","xdrToQuery","transactionToTdesc","jsonToTdesc","json","parse","tdescToQuery","queryToUri","txField","operationType","operationField","number","min","num","isNaN","integer","parseInt","utf8","base64","_boolean","threshold","removeEmptyFields","dateFields","shifted","setMinutes","getMinutes","Asset","XLM","stripSource","stripSequence","_memo","_switch","timeBounds","op","line","assetPath","timestamp","sdkMemo","_arm","_value","sdkSequence","sdkSigner","ed25519PublicKey","sha256Hash","preAuthTx","L","M","Q","H","level","handler","alert","classList","contains","preimage","prompt","sign","copyString","makeTransactionBuilder","_makeTransactionBuilder","_callee9","baseFee","txOpts","sourceAccount","builder","memoValue","_short","_context9","fetchBaseFee","timebounds","TransactionBuilder","TimeoutInfinite","addMemo","Memo","txBuilder","addOperation","build","t2","Operation","_ref5","_ref6","_ref7","constructedAsset","_x18","_ref8","_callee8","_context8","_x19","_x20","encodedValue","expand","ECLevel","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","errorCorrectionLevel","getTotalCodewordsCount","byte","RegExp","BYTE_KANJI","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","str","test","hex2rgba","hex","hexCode","c","hexValue","join","r","g","getOptions","color","margin","width","scale","dark","light","rendererOpts","getScale","qrSize","opts","getImageWidth","Math","floor","qrToImageData","imgData","qr","modules","symbolSize","scaledMargin","palette","j","posDst","pxColor","Page","_this","contentNode","linkNode","select","table","location","hide","isSelected","unselect","history","replaceState","search","show","onSelect","_this2","get","instance","Constructor","_defineProperties","props","descriptor","protoProps","staticProps","_possibleConstructorReturn","_getPrototypeOf","_inherits","exportModule","layer","_len","_key","_config","exposeModule","withConfig","library","_this$module","_class","CosmicLink","load","assertThisInitialized","ReferenceError","o","setPrototypeOf","getPrototypeOf","subClass","superClass","_setPrototypeOf","p","publicKeysprecision","firstNonZero","pointIndex","round","precisionAuto","toFixed","action","initCosmicLink","checkLock","splice","lock","keypairs_or_preimage","send","_query","_tdesc","locker","_json","_transaction","_xdr","_sep7","_htmlDescription","makeHtmlDescription","_htmlLink","makeHtmlLink","htmlDescription","formatsFields","dispatch","clear","_transactionNode","_signersNode","htmlLink","href","axios","applyLock","_applyLock","updateSignersNode","replaceChild","sendToHorizon","_sendToHorizon","submitTransaction","sendToStellarGuard","post","result","_args","allFine","keypairsOrPreimage","_short2","_short3","_args2","signHashX","_args3","STELLARGUARD_PUBKEY","encodeURI","formats","guessType","parseFmt","setTdesc","sep7ToXdr","xdrUri","sep7Request","isIgnoredSep7Field","styles","css","reject","rel","onload","onerror","js","scriptNode","asyncGeneratorStep","gen","_next","_throw","info","fn","args","err","canPromise","QRCode","CanvasRenderer","SvgRenderer","renderCanvas","renderFunc","canvas","text","cb","argsNum","isLastArgCb","getContext","toCanvas","bind","render","toDataURL","renderToDataURL","_","Utils","BitBuffer","BitMatrix","AlignmentPattern","FinderPattern","MaskPattern","ECCode","ReedSolomonEncoder","Version","FormatInfo","Mode","Segments","setupFormatInfo","matrix","maskPattern","mod","bits","getEncodedBits","createData","segments","put","getLength","dataTotalCodewordsBits","getLengthInBits","putBit","remainingByte","bitBuffer","totalCodewords","ecTotalCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","createCodewords","createSymbol","fromArray","estimatedVersion","rawSegments","rawSplit","getBestVersionForData","bestVersion","dataBits","moduleCount","getPositions","row","col","setupFinderPattern","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","inc","bitIndex","byteIndex","isReserved","setupData","getBestMask","applyMask","mask","toSJISFunc","bufIndex","reservedBit","reserved","xor","getRowColCoords","posCount","intervals","ceil","positions","reverse","coords","posLength","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","getMaskAt","getPenaltyN1","points","sameCountCol","sameCountRow","lastCol","lastRow","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","abs","pattern","setupFormatFunc","numPatterns","bestPattern","lowerPenalty","penalty","Polynomial","degree","genPoly","initialize","generateECPolynomial","pad","paddedData","remainder","buff","GF","mul","p1","p2","coeff","divident","divisor","poly","exp","alloc","EXP_TABLE","LOG_TABLE","y","G18_BCH","getReservedBitsCount","getTotalBitsFromDataArray","totalBits","reservedBits","getBitsLength","getCapacity","usableBits","seg","ecl","currentVersion","getBestVersionForMixedData","getBestVersionForDataLength","G15_BCH","NumericData","AlphanumericData","ByteData","KanjiData","dijkstra","getStringByteLength","unescape","getSegments","regex","exec","getSegmentsFromString","byteSegs","kanjiSegs","numSegs","alphaNumSegs","sort","s1","s2","getSegmentBitsLength","buildSingleSegment","modesHint","bestMode","reduce","acc","graph","nodes","prevNodeIds","nodeGroup","currentNodeIds","lastCount","prevNodeId","buildGraph","segs","buildNodes","find_path","optimizedSegs","curr","prevSeg","mergeSegments","group","remainingNum","ALPHA_NUM_CHARS","l","single_source_shortest_paths","s","predecessors","costs","closest","u","v","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","PriorityQueue","make","empty","pop","cost","hasOwnProperty","extract_shortest_path_from_predecessor_list","T","t","queue","sorter","default_sorter","item","shift","qrData","canvasEl","createElement","getCanvasElement","ctx","image","createImageData","clearRect","height","style","clearCanvas","putImageData","quality","getColorAttrib","attrib","alpha","svgCmd","cmd","qrcodesize","bg","moveBy","newRow","lineLength","qrToPath","viewBox","svgTag"],"mappings":"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","file":"vendors~app.js","sourcesContent":["\"use_strict\";\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\n\nvar env = exports;\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\n\nenv.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\n\nenv.isNode = typeof process !== \"undefined\" && process.versions && process.versions.node;\n/**\n * `true` if current page is embedded.\n */\n\nenv.isEmbedded = env.isBrowser && window.self !== window.top;\n/**\n * The window object, or `undefined`.\n */\n\nenv.window = env.isBrowser && window;\n/**\n * The global objet, or `undefined`.\n */\n\nenv.global = env.isNode && global;\n/**\n * A require that only have effect in Node.js and that is invisible for package\n * bundlers.\n */\n\nenv.nodeRequire = function () {};\n\nif (env.isNode) {\n  var stealth_require = eval(\"require\");\n\n  env.nodeRequire = function (module) {\n    return stealth_require(module);\n  };\n}","\"use strict\";\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\n\nvar misc = exports;\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\n\nmisc.delay = function (thunk) {\n  var firstCall = true;\n  var memoized;\n  return function () {\n    if (firstCall) {\n      firstCall = false;\n      memoized = new Promise(function (resolve) {\n        return resolve(thunk());\n      });\n    }\n\n    return memoized;\n  };\n};\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\n\n\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, x);\n  });\n};\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\n\n\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1);\n};\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\n\n\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + \"...\" + string.substr(-5);\n  } else {\n    return string;\n  }\n};\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\n\n\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n};\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\n\n\nmisc.deprecated = function (date, before, after) {\n  console.error(\"Warning: \".concat(before, \" is deprecated and will be removed after \").concat(date, \". Please use \").concat(after, \" instead.\"));\n};\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\n\n\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) misc.setHiddenProperty(obj, extraField, {});\n  return obj[extraField];\n};\n\nvar extraField = \"@cosmic-plus\";\n/**\n * Test if **string** is made of printable UTF8 characters. This is a simplified\n * test that is not robust.\n *\n * @param {String}\n * @return {Boolean}\n */\n\nmisc.isUtf8 = function (string) {\n  // eslint-disable-next-line no-control-regex\n  return !string.match(/[\\0-\\x1F\\x7F-\\x9F\\xAD\\uD7FC-\\uF8FF]/);\n};\n/**\n * Test if **string** is a base64 string.\n *\n * @param  {String} string\n * @return {Boolean}\n */\n\n\nmisc.isBase64 = function (string) {\n  return !!string.match(/^[0-9a-zA-Z+/]*=*$/);\n};\n/**\n * Return the YYYY-MM-DD date for **time** or for today.\n *\n * @param {String|Number} [time] A valid date/timestamp value\n * @return {String} YYYY-MM-DD date\n */\n\n\nmisc.day = function (time) {\n  var date = time ? new Date(time) : new Date();\n  return date.toISOString().replace(/T.*/, \"\");\n};\n/**\n * Deprecated functions\n */\n\n\nmisc.copy = function () {\n  return console.error(\"misc.copy() have been moved to html.copyString()\");\n};","\"use_strict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  if (window.StellarSdk === undefined) console.error(\"Missing dependency: StellarSdk\");else module.exports = window.StellarSdk;\n} else {\n  module.exports = env.nodeRequire(\"stellar-sdk\");\n}","\"use_strict\";\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\n\nvar specs = exports;\n/**\n * Transaction optional fields.\n */\n\nspecs.transactionOptionalFields = [\"network\", \"horizon\", \"callback\", \"memo\", \"source\", \"sequence\", \"minTime\", \"maxTime\", \"fee\"];\n/**\n * Transaction field meaning.\n */\n\nspecs.fieldDesc = {\n  network: \"Network\",\n  horizon: \"Horizon\",\n  callback: \"Callback\",\n  memo: \"Memo\",\n  source: \"Source\",\n  sequence: \"Sequence\",\n  minTime: \"Valid after\",\n  maxTime: \"Valid until\",\n  fee: \"Fees\"\n  /**\n   * @param {string} field\n   * @return {boolean}\n   */\n\n};\n\nspecs.isTransactionField = function (field) {\n  return specs.transactionOptionalFields.find(function (name) {\n    return name === field;\n  });\n};\n/**\n * Operation mandatory fields.\n */\n\n\nspecs.operationMandatoryFields = {\n  accountMerge: [\"destination\"],\n  allowTrust: [\"authorize\", \"assetCode\", \"trustor\"],\n  bumpSequence: [\"bumpTo\"],\n  changeTrust: [\"asset\"],\n  createAccount: [\"destination\", \"startingBalance\"],\n  createPassiveOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  createPassiveSellOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  inflation: [],\n  manageData: [\"name\", \"value\"],\n  manageOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  manageBuyOffer: [\"selling\", \"buying\", \"buyAmount\", \"price\"],\n  manageSellOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  pathPayment: [\"sendAsset\", \"sendMax\", \"destination\", \"destAsset\", \"destAmount\"],\n  payment: [\"asset\", \"destination\", \"amount\"],\n  setOptions: []\n  /**\n   * Operation optionnal fields.\n   */\n\n};\nspecs.operationOptionalFields = {\n  accountMerge: [\"source\"],\n  allowTrust: [\"source\"],\n  bumpSequence: [\"source\"],\n  changeTrust: [\"limit\", \"source\"],\n  createAccount: [\"source\"],\n  createPassiveOffer: [\"source\"],\n  createPassiveSellOffer: [\"source\"],\n  inflation: [\"source\"],\n  manageData: [\"source\"],\n  manageOffer: [\"offerId\", \"source\"],\n  manageBuyOffer: [\"offerId\", \"source\"],\n  manageSellOffer: [\"offerId\", \"source\"],\n  pathPayment: [\"path\", \"source\"],\n  payment: [\"source\"],\n  setOptions: [\"inflationDest\", \"clearFlags\", \"setFlags\", \"masterWeight\", \"lowThreshold\", \"medThreshold\", \"highThreshold\", \"signer\", \"homeDomain\", \"source\"]\n  /**\n   * Operations fields\n   */\n\n};\nspecs.operationFields = {};\n\nfor (var field in specs.operationMandatoryFields) {\n  specs.operationFields[field] = specs.operationMandatoryFields[field].concat(specs.operationOptionalFields[field]);\n}\n/**\n * @param {string} type Operation type\n * @param {string} field\n * @return {boolean}\n */\n\n\nspecs.isOperationField = function (operation, field) {\n  return specs.operationFields[operation].find(function (name) {\n    return name === field;\n  });\n};\n/**\n * Field types.\n */\n\n\nspecs.fieldType = {\n  amount: \"amount\",\n  asset: \"asset\",\n  assetCode: \"string\",\n  assetIssuer: \"address\",\n  authorize: \"boolean\",\n  bumpTo: \"sequence\",\n  buyAmount: \"amount\",\n  buying: \"asset\",\n  callback: \"url\",\n  clearFlags: \"flags\",\n  destAsset: \"asset\",\n  destAmount: \"amount\",\n  destination: \"address\",\n  fee: \"amount\",\n  highThreshold: \"threshold\",\n  homeDomain: \"string\",\n  horizon: \"url\",\n  inflationDest: \"address\",\n  limit: \"amount\",\n  lowThreshold: \"threshold\",\n  masterWeight: \"weight\",\n  maxTime: \"date\",\n  medThreshold: \"threshold\",\n  memo: \"memo\",\n  memoBinary: \"hash\",\n  memoHash: \"hash\",\n  memoId: \"id\",\n  memoReturn: \"hash\",\n  memoText: \"string\",\n  memoType: \"string\",\n  minTime: \"date\",\n  network: \"network\",\n  offerId: \"string\",\n  price: \"price\",\n  name: \"string\",\n  path: \"assetsArray\",\n  selling: \"asset\",\n  sendAsset: \"asset\",\n  sendMax: \"amount\",\n  sequence: \"sequence\",\n  setFlags: \"flags\",\n  signer: \"signer\",\n  signerHash: \"hash\",\n  signerKey: \"address\",\n  signerType: \"string\",\n  signerTx: \"id\",\n  signerWeight: \"weight\",\n  source: \"address\",\n  startingBalance: \"amount\",\n  trustor: \"address\",\n  value: \"buffer\"\n  /**\n   * An array of each valid type for fields.\n   */\n\n};\nspecs.types = [];\n\nvar _loop = function _loop(_field) {\n  var type = specs.fieldType[_field];\n  specs.types.find(function (entry) {\n    return entry === type;\n  }) || specs.types.push(type);\n};\n\nfor (var _field in specs.fieldType) {\n  _loop(_field);\n}\n/**\n * A neutral account ID meant to be replaced before signing & sending the\n * transaction.\n * @static\n */\n\n\nspecs.neutralAccountId = \"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\";\n/**\n * The mandatory fields for each SEP-0007 operation.\n */\n\nspecs.sep7MandatoryFields = {\n  tx: [\"xdr\"],\n  pay: [\"destination\"]\n  /**\n   * The optional fields for each SEP-0007 operation.\n   */\n\n};\nspecs.sep7OptionalFields = {\n  tx: [\"callback\", \"msg\", \"network_passphrase\", \"origin_domain\", \"pubkey\", \"signature\"],\n  pay: [\"amount\", \"asset_code\", \"asset_issuer\", \"callback\", \"memo\", \"memo_type\", \"msg\", \"network_passphrase\", \"origin_domain\", \"signature\"]\n};\nspecs.sep7IgnoredFields = [\"msg\", \"pubkey\", \"origin_domain\", \"signature\"];","\"use strict\";\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar resolve = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Returns the\n * [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * for **horizon**, or for **network**, or for the current network.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @param {string} [horizon] A horizon URL\n * @returns {Server} A StellarSdk Server object\n */\n\n\nresolve.server = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var horizon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : conf.horizon;\n  if (!horizon) horizon = resolve.horizon(conf, network);\n  if (!horizon) throw new Error(\"No horizon node defined for selected network.\");\n  if (!conf.current.server[horizon]) conf.current.server[horizon] = new StellarSdk.Server(horizon);\n  return conf.current.server[horizon];\n};\n/**\n * Switch to the current network, or to **network** if provided.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @returns {Server} A StellarSdk Server object\n */\n\n\nresolve.useNetwork = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var passphrase = resolve.networkPassphrase(conf, network);\n  var currentPassphrase = resolve.networkPassphrase();\n\n  if (passphrase !== currentPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network);\n    StellarSdk.Network.use(new StellarSdk.Network(passphrase));\n  }\n};\n/**\n * Returns the curent Horizon node URL, or the Horizon node URL for **network**\n * if provided.\n *\n * @param {string} [network] A network name or passphrase.\n */\n\n\nresolve.horizon = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n\n  if (conf.horizon) {\n    return conf.horizon;\n  } else {\n    var passphrase = resolve.networkPassphrase(conf, network);\n\n    if (conf.current && conf.current.horizon[passphrase]) {\n      return conf.current.horizon[passphrase];\n    }\n  }\n};\n/**\n * Returns the current network passphrase, or the passphrase for **network** is\n * provided.\n */\n\n\nresolve.networkPassphrase = function () {\n  var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n\n  if (network === undefined) {\n    var currentNetwork = StellarSdk.Network.current();\n    if (currentNetwork) return currentNetwork.networkPassphrase();\n  } else {\n    return conf.current.passphrase[network] || network;\n  }\n};\n/**\n * Returns the network name for **network passphrase**, or `undefined`.\n *\n * @param {string} networkPassphrase\n * @return {string}\n */\n\n\nresolve.networkName = function () {\n  var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var networkPassphrase = arguments.length > 1 ? arguments[1] : undefined;\n  var index = Object.values(conf.current.passphrase).indexOf(networkPassphrase);\n  if (index === -1) return networkPassphrase;else return Object.keys(conf.current.passphrase)[index];\n};\n/**\n * Returns the federation server\n * [Account]{@link https://stellar.github.io/js-stellar-sdk/Account.html}\n * for **address**.\n *\n * @async\n * @param {string} address A Stellar public key or a federated address\n * @return {} Resolve to federation server response\n */\n\n\nresolve.address = function (conf, address) {\n  var cache = conf.cache;\n  if (cache && cache.destination[address]) return cache.destination[address];\n  var promise = addressResolver(conf, address);\n  if (cache) cache.destination[address] = promise;\n  return promise;\n};\n\nfunction addressResolver(_x, _x2) {\n  return _addressResolver.apply(this, arguments);\n}\n/**\n * Returns the\n * [AccountResponse]{@link https://stellar.github.io/js-stellar-sdk/AccountResponse.html}\n * object for **address**.\n *\n * @param {string} address A public key or a federated address\n * @return {Object} The AccountResponse\n */\n\n\nfunction _addressResolver() {\n  _addressResolver = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf, address) {\n    var account, accountId;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return StellarSdk.FederationServer.resolve(address);\n\n          case 3:\n            account = _context5.sent;\n            accountId = account.account_id;\n\n            if (accountId) {\n              _context5.next = 7;\n              break;\n            }\n\n            throw new Error(\"Unknow address\");\n\n          case 7:\n            if (!account.memo_type) delete account.memo;\n            if (address !== accountId) account.address = address;\n\n            if (conf.aliases && conf.aliases[accountId]) {\n              account.alias = conf.aliases[accountId];\n            }\n\n            return _context5.abrupt(\"return\", account);\n\n          case 13:\n            _context5.prev = 13;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error(_context5.t0);\n            status.error(conf, \"Can't resolve: \" + misc.shorter(address));\n            status.fail(conf, \"Unresolved address\", \"throw\");\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 13]]);\n  }));\n  return _addressResolver.apply(this, arguments);\n}\n\nresolve.account =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, address, quietFlag) {\n    var account, accountId, cache, promise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return resolve.address(conf, address);\n\n          case 2:\n            account = _context.sent;\n            accountId = account.account_id;\n            cache = conf.cache;\n\n            if (!(cache && cache.account[accountId])) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", cache.account[accountId]);\n\n          case 7:\n            promise = accountResolver(conf, accountId, quietFlag);\n            if (cache) cache.account[accountId] = promise;\n            return _context.abrupt(\"return\", promise);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction accountResolver(_x6, _x7, _x8) {\n  return _accountResolver.apply(this, arguments);\n}\n/**\n * Returns `true` if **address** account is empty, `false` otherwise.\n *\n * @async\n * @param {string} address Public key or federated address\n * @return {boolean}\n */\n\n\nfunction _accountResolver() {\n  _accountResolver = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf, accountId, quietFlag) {\n    var server, accountResponse;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            server = resolve.server(conf);\n            _context6.prev = 1;\n            _context6.next = 4;\n            return server.loadAccount(accountId);\n\n          case 4:\n            accountResponse = _context6.sent;\n            return _context6.abrupt(\"return\", accountResponse);\n\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](1);\n\n            if (!quietFlag) {\n              _context6.next = 14;\n              break;\n            }\n\n            throw _context6.t0;\n\n          case 14:\n            if (_context6.t0.response) {\n              status.error(conf, \"Empty account: \" + misc.shorter(accountId), \"throw\");\n            } else {\n              status.error(conf, \"Invalid horizon node: \" + resolve.horizon(conf), \"throw\");\n            }\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 8]]);\n  }));\n  return _accountResolver.apply(this, arguments);\n}\n\nresolve.isAccountEmpty = function (conf, address) {\n  return resolve.account(conf, address, true).then(function () {\n    return false;\n  })[\"catch\"](function () {\n    return true;\n  });\n};\n/**\n * Returns the account object for transaction source **address`** with sequence\n * set at **sequence** if provided. If **address** is not provided, returns the\n * neutral account object instead (as in SEP-0007 specifications).\n *\n * @param {string} [address]\n * @param {string|numbre} [sequence]\n * @return {AccountResponse}\n */\n\n\nresolve.txSourceAccount =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, address, sequence) {\n    var destination, account, baseAccount;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (address) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", makeAccountResponse(conf, specs.neutralAccountId, \"-1\"));\n\n          case 4:\n            _context2.next = 6;\n            return resolve.address(conf, address);\n\n          case 6:\n            destination = _context2.sent;\n            if (destination.memo) status.error(conf, \"Invalid transaction source address (requires a memo)\", \"throw\");\n            _context2.next = 10;\n            return resolve.account(conf, destination.account_id);\n\n          case 10:\n            account = _context2.sent;\n\n            if (sequence) {\n              baseAccount = new StellarSdk.Account(account.id, sequence);\n              baseAccount.sequence = baseAccount.sequence.sub(1);\n              account._baseAccount = baseAccount;\n            }\n\n            return _context2.abrupt(\"return\", account);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x9, _x10, _x11) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Creates an AccountResponse object with signers set for an empty account.\n *\n * @param  {string} publicKey\n * @param  {string} sequence [description]\n * @return {AccountResponse}\n */\n\n\nfunction makeAccountResponse(conf, publicKey, sequence) {\n  var account = new StellarSdk.Account(publicKey, sequence);\n  if (conf.cache) conf.cache.account[publicKey] = account;\n  account.id = publicKey;\n  account.signers = [{\n    public_key: publicKey,\n    weight: 1,\n    key: publicKey,\n    type: \"ed25519_public_key\"\n  }];\n  return account;\n}\n/**\n * Returns the array of all source accounts ID involved in **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\n\n\nresolve.txSources = function (conf, transaction) {\n  if (!transaction.source) throw new Error(\"No source for transaction\");\n  var extra = resolve.extra(conf, transaction);\n  if (extra.cache.txSources) return extra.cache.txSources;\n  var array = extra.cache.txSources = [transaction.source];\n\n  var _loop = function _loop(index) {\n    var source = transaction.operations[index].source;\n    if (source && !array.find(function (a) {\n      return a === source;\n    })) array.push(source);\n  };\n\n  for (var index in transaction.operations) {\n    _loop(index);\n  }\n\n  return array;\n};\n/**\n * Returns an object such as:\n *\n * ```js\n * {\n *    $accountId: $accountSigners\n *    ...\n * }\n * ```\n *\n * @param {Transaction} transaction\n * @return {Object}\n */\n\n\nresolve.txSigners =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, transaction) {\n    var extra, txSources, signers, index, source, account;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            extra = resolve.extra(conf, transaction);\n\n            if (!extra.cache.txSigners) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", extra.cache.txSigners);\n\n          case 3:\n            txSources = resolve.txSources(extra, transaction);\n            signers = extra.cache.txSigners = {};\n            _context3.t0 = _regeneratorRuntime.keys(txSources);\n\n          case 6:\n            if ((_context3.t1 = _context3.t0()).done) {\n              _context3.next = 15;\n              break;\n            }\n\n            index = _context3.t1.value;\n            source = txSources[index];\n            _context3.next = 11;\n            return resolveTxSource(extra, source);\n\n          case 11:\n            account = _context3.sent;\n\n            if (!signers[account.id]) {\n              signers[account.id] = account.signers.filter(function (signer) {\n                return signer.type !== \"preauthTx\";\n              });\n            }\n\n            _context3.next = 6;\n            break;\n\n          case 15:\n            return _context3.abrupt(\"return\", signers);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction resolveTxSource(_x14, _x15) {\n  return _resolveTxSource.apply(this, arguments);\n}\n/**\n * Returns an Array containing the keys for all legit signers of **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\n\n\nfunction _resolveTxSource() {\n  _resolveTxSource = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, address) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return resolve.account(conf, address, \"quiet\");\n\n          case 3:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](0);\n            return _context7.abrupt(\"return\", makeAccountResponse(conf, address, \"0\"));\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 6]]);\n  }));\n  return _resolveTxSource.apply(this, arguments);\n}\n\nresolve.txSignersList =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(conf, transaction) {\n    var extra, txSigners;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            extra = resolve.extra(conf, transaction);\n\n            if (extra.cache.txSignersList) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.next = 4;\n            return resolve.txSigners(extra, transaction);\n\n          case 4:\n            txSigners = _context4.sent;\n            extra.cache.txSignersList = signersTableToSignersList(txSigners);\n\n          case 6:\n            return _context4.abrupt(\"return\", extra.cache.txSignersList);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nfunction signersTableToSignersList(signersTable) {\n  var array = [];\n\n  for (var accountId in signersTable) {\n    signersTable[accountId].forEach(function (signer) {\n      if (!array.find(function (key) {\n        return key === signer.key;\n      })) array.push(signer.key);\n    });\n  }\n\n  return array;\n}\n/**\n * Add an extra field to **object** that embed cache and local configuration.\n *\n * @private\n */\n\n\nresolve.extra = function (conf, object) {\n  if (!object._cosmicplus) {\n    misc.setHiddenProperty(object, \"_cosmicplus\", {});\n    if (conf.cache) object._cosmicplus.cache = conf.cache;else object._cosmicplus.cache = {\n      destination: {},\n      account: {}\n    };\n    object._cosmicplus.network = conf.network;\n    object._cosmicplus.current = conf.current;\n  }\n\n  return object._cosmicplus;\n};","\"use strict\";\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * Thoses methods won't have effect unless status reporting is enabled on `conf`\n * object by using `status.init` (wich is done automatically on CosmicLink\n * objects).\n *\n * @private\n * @exports status\n */\n\nvar status = exports;\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar html = env.isBrowser && require(\"@cosmic-plus/domutils/es5/html\");\n/**\n * Initialize `conf.status` & `conf.errors`.\n */\n\n\nstatus.init = function (conf) {\n  conf.status = null;\n  conf.errors = false;\n};\n/**\n * Set `conf` status as `status` and update statusNode. Error status should be\n * recorded using the `status.fail` function bellow. Once a status is set it\n * won't be mutated.\n *\n * @param {string} status\n */\n\n\nstatus.update = function (conf, status) {\n  if (conf.status || conf.status === undefined) return; // eslint-disable-next-line no-console\n\n  console.log(\"Set status: \" + status);\n  conf.status = status;\n\n  if (conf._statusNode) {\n    var title = html.grab(\".cosmiclib_status\", conf._statusNode);\n    title.textContent = status;\n  }\n};\n/**\n * Set `conf` status as error status `status` and update statusNode. This\n * implies that the cosmic link or the underlying transaction is invalid. Then,\n * call `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\n\n\nstatus.fail = function (conf, errorStatus, continuation) {\n  status.update(conf, errorStatus);\n  if (conf._statusNode) html.addClass(conf._statusNode, \"cosmiclib_error\");\n  errorContinuation(errorStatus, continuation);\n};\n/**\n * Append `error` to `conf.errors` and to the HTML display. Then, call\n * `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\n\n\nstatus.error = function (conf, error, continuation) {\n  // eslint-disable-next-line no-console\n  console.log(error);\n\n  if (conf.errors !== undefined) {\n    if (!conf.errors) conf.errors = [];\n    conf.errors.push(error);\n\n    if (conf._statusNode) {\n      var errorsNode = html.grab(\".cosmiclib_errors\", conf._statusNode);\n      var lineNode = html.create(\"li\", null, error);\n      html.append(errorsNode, lineNode);\n    }\n  }\n\n  errorContinuation(error, continuation);\n};\n/**\n * Create & return an HTML element that displays `conf` status and eventual\n * errors.\n *\n * @return {htmlElement}\n */\n\n\nstatus.makeHtmlNode = function (conf) {\n  var statusNode = html.create(\"div\", \".cosmiclib_statusNode\");\n  var statusLine = html.create(\"span\", \".cosmiclib_status\");\n  html.append(statusNode, statusLine);\n  if (conf.status) statusLine.textContent = conf.status;\n  var errorsNode = html.create(\"ul\", \".cosmiclib_errors\");\n  html.append(statusNode, errorsNode);\n\n  if (conf.errors) {\n    conf.errors.forEach(function (error) {\n      var errorLine = html.create(\"li\", null, error);\n      html.append(errorsNode, errorLine);\n    });\n  }\n\n  return statusNode;\n};\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with `error` as message.\n * If `continuation` is undefined, do nothing.\n */\n\n\nfunction errorContinuation(error, continuation) {\n  if (continuation) {\n    if (continuation === \"throw\") throw new Error(error);else continuation(error);\n  }\n}","var toSJISFunction\nvar CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  var digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","var VersionCheck = require('./version-check')\nvar Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar isArray = require('isarray')\n\nfunction typedArraySupport () {\n  // Can typed array instances be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n\nfunction Buffer (arg, offset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, offset, length)\n  }\n\n  if (typeof arg === 'number') {\n    return allocUnsafe(this, arg)\n  }\n\n  return from(this, arg, offset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n\n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    })\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer (that, length) {\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    buf = new Uint8Array(length)\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = that\n    if (buf === null) {\n      buf = new Buffer(length)\n    }\n    buf.length = length\n  }\n\n  return buf\n}\n\nfunction allocUnsafe (that, size) {\n  var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nfunction fromString (that, string) {\n  var length = byteLength(string) | 0\n  var buf = createBuffer(that, length)\n\n  var actual = buf.write(string)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = fromArrayLike(that, buf)\n  }\n\n  return buf\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(that, len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction byteLength (string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  return utf8ToBytes(string).length\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction from (that, value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, offset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, offset)\n  }\n\n  return fromObject(that, value)\n}\n\nBuffer.prototype.write = function write (string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n    } else {\n      length = undefined\n    }\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  return utf8Write(this, string, offset, length)\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    // Return an augmented `Uint8Array` instance\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\nBuffer.prototype.fill = function fill (val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = allocUnsafe(null, length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nBuffer.byteLength = byteLength\n\nBuffer.prototype._isBuffer = true\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nmodule.exports = Buffer\n","\"use_strict\";\n/**\n * A simple module that ease access to HTML DOM nodes. Any HTML element having\n * an `id` at loading time is registered at dom[id]. This is to avoid running\n * `querySelector` multiple times.\n *\n * @exports dom\n */\n\nvar dom = exports;\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar html = require(\"./html\"); /// Prevent node failure when accidentaly loading this file.\n\n\nvar document = env.window ? env.window.document : undefined;\n/**\n * Add to dom all **element** child having an `id=` attribute.\n */\n\nfunction ingest() {\n  var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  if (element.id) dom[element.id] = element;\n  var array = element.querySelectorAll(\"[id]\");\n\n  for (var index in array) {\n    var _element = array[index];\n    if (_element.id) dom[_element.id] = _element;\n  }\n}\n\nObject.defineProperty(dom, \"ingest\", {\n  value: ingest,\n  enumerable: false,\n  writable: false\n});\n/**\n * Main tags.\n */\n\ndom.html = html.grab(\"html\");\ndom.head = html.grab(\"head\");\ndom.body = html.grab(\"body\");\ndom.header = html.grab(\"header\");\ndom.nav = html.grab(\"nav\");\ndom.main = html.grab(\"main\");\ndom.footer = html.grab(\"footer\");\n/**\n * All elements having an ID.\n */\n\ndom.ingest();","\"use strict\";\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `conf` object\n * and HTML nodes are updated accordingly.\n *\n * @private\n * @exports decode\n */\n\nvar decode = exports;\n\nvar check = require(\"./check\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n\ndecode.query = function (conf) {\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"?\";\n  if (query.substr(0, 1) !== \"?\") status.fail(conf, \"Invalid query\", \"throw\");\n  var operations = [];\n  var tdesc = {};\n  var command = query.substr(1).replace(/&.*/, \"\");\n  var params = query.substr(command.length + 2).split(\"&\");\n  if (command && command !== \"transaction\") operations.push({\n    type: command\n  });\n\n  for (var index in params) {\n    var param = params[index].split(\"=\", 2);\n    var field = param[0];\n    if (!field) continue;\n\n    if (field === \"operation\") {\n      operations.push({\n        type: param[1]\n      });\n      command = \"operation\";\n      continue;\n    }\n\n    var value = decode.field(conf, field, param[1]); /// Multi-operation link.\n\n    if (command === \"transaction\") {\n      tdesc[field] = value;\n    } else if (command === \"operation\") {\n      operations[operations.length - 1][field] = value; /// One-operation link.\n    } else {\n      if (specs.isTransactionField(field)) {\n        tdesc[field] = value;\n      } else {\n        operations[0][field] = value;\n      }\n    }\n  }\n\n  tdesc.operations = operations;\n  normalize.tdesc(conf, tdesc);\n  tdesc.operations.forEach(function (odesc) {\n    return normalize.odesc(conf, odesc);\n  });\n  check.tdesc(conf, tdesc);\n  return tdesc;\n};\n/******************************************************************************/\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\n\n\ndecode.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  return type ? decode.type(conf, type, value) : value;\n};\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {string} type\n * @param {string} value\n */\n\n\ndecode.type = function (conf, type, value) {\n  if (value) {\n    value = decodeURIComponent(value);\n    return process[type] ? process[type](conf, value) : value;\n  } else {\n    return \"\";\n  }\n};\n/******************************************************************************/\n\n\nvar process = {};\n\nprocess.asset = function (conf, asset) {\n  var assetLower = asset.toLowerCase();\n\n  if (assetLower === \"xlm\" || assetLower === \"native\") {\n    return {\n      code: \"XLM\"\n    };\n  } else {\n    var temp = asset.split(\":\");\n    var object = {\n      code: temp[0],\n      issuer: temp[1]\n    };\n    return object;\n  }\n};\n\nprocess.assetsArray = function (conf, assetsList) {\n  var strArray = assetsList.split(\",\");\n  return strArray.map(function (entry) {\n    return decode.asset(conf, entry);\n  });\n};\n\nprocess[\"boolean\"] = function (conf, string) {\n  switch (string) {\n    case \"true\":\n      return true;\n\n    case \"false\":\n      return false;\n  }\n};\n\nprocess.buffer = function (conf, string) {\n  var matched = string.match(/(^[^:]*):/);\n  var type = matched && matched[1];\n\n  switch (type) {\n    case \"base64\":\n      return {\n        type: type,\n        value: string.substr(type.length + 1)\n      };\n\n    case \"text\":\n      string = string.substr(type.length + 1);\n    // Fallthrough\n\n    default:\n      return {\n        type: \"text\",\n        value: process.string(conf, string)\n      };\n  }\n};\n\nprocess.date = function (conf, string) {\n  /// now + {minutes} syntactic sugar\n  if (string.match(/^\\+[0-9]+$/)) return string; /// Use UTC timezone by default.\n\n  if (string.match(/T[^+]*[0-9]$/)) string += \"Z\";\n  return new Date(string).toISOString();\n};\n\nprocess.memo = function (conf, string) {\n  var matched = string.match(/(^[^:]*):/);\n  var type = matched && matched[1];\n\n  switch (type) {\n    case \"base64\":\n    case \"id\":\n    case \"hash\":\n    case \"return\":\n      return {\n        type: type,\n        value: string.substr(type.length + 1)\n      };\n\n    case \"text\":\n      string = string.substr(type.length + 1);\n    // Fallthrough\n\n    default:\n      return {\n        type: \"text\",\n        value: process.string(conf, string)\n      };\n  }\n};\n\nprocess.price = function (conf, price) {\n  var numerator = price.replace(/:.*/, \"\");\n  var denominator = price.replace(/^[^:]*:/, \"\");\n  if (numerator === denominator) return price;else return {\n    n: +numerator,\n    d: +denominator\n  };\n};\n\nprocess.signer = function (conf, signer) {\n  var temp = signer.split(\":\");\n  var object = {\n    weight: temp[0],\n    type: temp[1],\n    value: temp[2]\n  };\n  return object;\n};\n\nprocess.string = function (conf, string) {\n  return string.replace(/\\+/g, \" \");\n};\n\nprocess.network = process.string;\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\nspecs.types.forEach(function (type) {\n  exports[type] = function (conf, value) {\n    return decode.type(conf, type, value);\n  };\n});","\"use_strict\";\n/**\n * Library-wide configuration.\n *\n * @borrows module:aliases.all as aliases\n * @borrows module:aliases.set as addAliases\n * @borrows module:aliases.remove as removeAliases\n *\n * @borrows module:event.defaultClickHandlers as clickHandlers\n * @borrows module:event.setClickHandler as setClickHandler\n * @borrows module:event.clearClickHandler as clearClickHandler\n *\n * @exports config\n */\n\nvar config = exports;\n\nvar aliases = require(\"@cosmic-plus/base/es5/aliases\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar event = env.isBrowser && require(\"./event\");\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\n\n\nconfig.page = \"https://cosmic.link/\";\n/**\n * The default fallback network.\n * @default 'public'\n */\n\nconfig.network = \"public\";\n/**\n * The default fallback source address.\n * @default undefined\n */\n\nconfig.source = undefined;\n/**\n * Networks setup.\n *\n * @private\n */\n\nconfig.current = {\n  passphrase: {},\n  horizon: {},\n  server: {}\n  /**\n   * Set default **passphrase** and **horizon** URL for network **name**.\n   *\n   * Adding custom network this way will enable the use of their name in cosmic\n   * queries (as in `&network=name`). However, please remind that this feature\n   * will works only on your side and could break compatibility with other\n   * services.\n   *\n   * @example\n   * cosmicLib.config.setupNetwork('public', 'https://my-own-horizon-instance.example.org')\n   * cosmicLib.config.setupNetwork('custom', 'https://custom-horizon.example.org', 'My Custom Passphrase')\n   *\n   * @param {string} name Network name (like 'public', 'test')\n   * @param {string} horizon Horizon URL\n   * @param {string} [passphrase] Network passphrase\n   */\n\n};\n\nconfig.setupNetwork = function (name, horizon, passphrase) {\n  if (passphrase) config.current.passphrase[name] = passphrase;else passphrase = config.current.passphrase[name];\n  config.current.horizon[passphrase] = horizon;\n};\n\nconfig.setupNetwork(\"public\", \"https://horizon.stellar.org\", StellarSdk.Networks.PUBLIC);\nconfig.setupNetwork(\"test\", \"https://horizon-testnet.stellar.org\", StellarSdk.Networks.TESTNET);\nconfig.aliases = aliases.all;\n\nconfig.addAliases = function (definitions) {\n  return aliases.set(config, definitions);\n};\n\nconfig.removeAliases = function (array) {\n  return aliases.remove(config, array);\n};\n\nconfig.clickHandlers = event.defaultClickHandlers;\n\nconfig.setClickHandler = function (fieldType, callback) {\n  return event.setClickHandler(config, fieldType, callback);\n};\n\nconfig.clearClickHandler = function (fieldType) {\n  return event.clearClickHandler(config, fieldType);\n};","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","\"use strict\";\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @private\n * @exports format\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar format = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar nice = require(\"@cosmic-plus/jsutils/es5/nice\");\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar config = require(\"./config\");\n\nvar event = require(\"./event\");\n\nvar resolve = require(\"./resolve\");\n\nvar signersUtils = require(\"./signers-utils\");\n\nvar specs = require(\"./specs\");\n/**\n * Returns an HTML div describing `tdesc`.\n *\n * @param {Object} tdesc Transaction descriptor.\n * @return {HTMLElement} Transaction HTML description.\n */\n\n\nformat.tdesc = function (conf, tdesc) {\n  var trNode = html.create(\"div\", \".cosmiclib_transactionNode\");\n  if (!tdesc) return trNode;\n  var infoNode;\n\n  for (var index in specs.transactionOptionalFields) {\n    var entry = specs.transactionOptionalFields[index];\n    if (entry === \"horizon\" && resolve.horizon(config, conf.network)) continue;\n\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = html.create(\"ul\", \".cosmiclib_sideInfo\");\n      var lineNode = html.create(\"li\", {}, specs.fieldDesc[entry] + \": \", format.field(conf, entry, tdesc[entry]));\n      html.append(infoNode, lineNode);\n    }\n  }\n\n  if (infoNode) html.append(trNode, infoNode);\n\n  try {\n    for (var _index in tdesc.operations) {\n      var operation = tdesc.operations[_index];\n      var opNode = format.odesc(conf, operation);\n      opNode.index = _index;\n      html.append(trNode, opNode);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  if (!tdesc.operations.length) {\n    if (Object.keys(tdesc).length === 1) {\n      html.append(trNode, html.create(\"div\", null, \"No transaction\"));\n    } else {\n      html.append(trNode, html.create(\"div\", \".cosmiclib_operation\", \"No operation\"));\n    }\n  }\n\n  trNode.tdesc = tdesc;\n  return trNode;\n};\n/**\n * Returns an HTML div describing `odesc`.\n *\n * @param {Object} odesc Operation in cosmic link JSON format.\n * @return {HTMLElement} Operation HTML description.\n */\n\n\nformat.odesc = function (conf, odesc) {\n  var opNode = html.create(\"div\", \".cosmiclib_operation\");\n  opNode.odesc = odesc;\n  var retNode = opNode;\n\n  if (odesc.source) {\n    retNode = html.create(\"div\", \".cosmiclib_sourcedOperation\");\n    var sourceNode = html.create(\"div\", \".cosmiclib_sideInfo\", \"Source: \");\n    var addressNode = format.address(conf, odesc.source);\n    html.append(sourceNode, addressNode);\n    html.append(retNode, sourceNode, opNode);\n  }\n\n  var meaning = operationMeaning(odesc);\n\n  while (meaning) {\n    if (meaning.substr(0, 1) === \"{\") {\n      var query = meaning.substr(1).replace(/}.*/, \"\");\n      meaning = meaning.replace(/^[^}]*}/, \"\");\n\n      if (query === \"newline\") {\n        if (meaning === \"\") break;\n        html.append(opNode, html.create(\"br\"));\n      } else {\n        var fieldNode = format.field(conf, query, odesc[query]);\n        html.append(opNode, fieldNode);\n      }\n    } else {\n      var txt = meaning.replace(/{.*/, \"\");\n      meaning = meaning.replace(/^[^{]*/, \"\");\n      html.append(opNode, txt);\n    }\n  }\n\n  return retNode;\n};\n/**\n * Returns a string describing `odesc`.\n *\n * @private\n */\n\n\nfunction operationMeaning(odesc) {\n  var msg = \"\";\n\n  switch (odesc.type) {\n    case \"accountMerge\":\n      return \"Merge account inside {destination}\";\n\n    case \"allowTrust\":\n      if (odesc.authorize) {\n        return \"Allow usage of your asset {assetCode} to {trustor}\";\n      } else {\n        return \"Deny usage of your asset {assetCode} to {trustor}\";\n      }\n\n    case \"bumpSequence\":\n      return \"Set account sequence number to {bumpTo}\";\n\n    case \"changeTrust\":\n      if (odesc.limit === \"0\") {\n        return \"Refuse asset {asset}\";\n      } else if (odesc.limit) {\n        return \"Set holding limit as {limit} for asset {asset}\";\n      } else {\n        return \"Accept asset {asset}\";\n      }\n\n    case \"createAccount\":\n      return \"Create account {destination} and send {startingBalance} XLM to it\";\n\n    case \"createPassiveOffer\":\n    case \"createPassiveSellOffer\":\n      return \"Offer to passively sell {amount} {selling} for {price} {buying} / unit\";\n\n    case \"inflation\":\n      return \"Run inflation\";\n\n    case \"manageData\":\n      if (odesc.value) {\n        if (odesc.value.type === \"text\") {\n          return \"Set data entry '{name}' to: '{value}'\";\n        } else {\n          return \"Set data entry '{name}' to base64: '{value}'\";\n        }\n      } else {\n        return \"Delete data entry '{name}'\";\n      }\n\n    case \"manageOffer\":\n    case \"manageBuyOffer\":\n    case \"manageSellOffer\":\n      if (odesc.amount === \"0\" || odesc.buyAmount === \"0\") {\n        return \"Delete offer '{offerId}'\";\n      } else {\n        if (odesc.offerId) {\n          msg += \"Change offer '{offerId}' into:{newline}\";\n        }\n\n        if (odesc.type === \"manageBuyOffer\") {\n          msg += \"Offer to buy {buyAmount} {buying} for {price} {selling} / unit\";\n        } else {\n          msg += \"Offer to sell {amount} {selling} for {price} {buying} / unit\";\n        }\n\n        return msg;\n      }\n\n    case \"pathPayment\":\n      msg = \"Send {destAmount} {destAsset} to {destination} for a maximum \" + \"of {sendMax} {sendAsset}\";\n      if (odesc.path) msg += \" using conversion path: {path}\";\n      return msg;\n\n    case \"payment\":\n      return \"Send {amount} {asset} to {destination}\";\n\n    case \"setOptions\":\n      if (odesc.inflationDest) {\n        msg += \"Set inflation destination to: {inflationDest}{newline}\";\n      }\n\n      if (odesc.clearFlags) msg += \"Clear flag(s): {clearFlags}{newline}\";\n      if (odesc.setFlags) msg += \"Set flag(s): {setFlags}{newline}\";\n\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === \"0\") {\n          msg += \"Delete master key{newline}\";\n        } else {\n          msg += \"Set master key weight at: {masterWeight}{newline}\";\n        }\n      }\n\n      [\"lowThreshold\", \"medThreshold\", \"highThreshold\"].forEach(function (field) {\n        if (odesc[field]) msg += \"Set \" + field + \" at: {\" + field + \"}{newline}\";\n      });\n\n      if (odesc.signer) {\n        if (odesc.signer.type === \"tx\") {\n          if (odesc.signer.weight === \"0\") msg += \"Remove pre-signed {signer}{newline}\";else msg += \"Pre-sign {signer}{newline}\";\n        } else {\n          if (odesc.signer.weight === \"0\") msg += \"Remove signer: {signer}{newline}\";else msg += \"Set signer: {signer}{newline}\";\n        }\n      }\n\n      if (odesc.homeDomain) msg += \"Set home domain: {homeDomain}{newline}\";\n      if (odesc.homeDomain === \"\") msg += \"Unset home domain\";\n      if (!msg) msg = \"Do nothing\";\n      return msg;\n\n    default:\n      throw new Error(\"Unknow operation: \" + odesc.type);\n  }\n}\n/**\n * Returns an HTML div describing `signers`.\n *\n * @param {Object} signers Signers object as returned by @see{resolve.signers}.\n * @return {HTMLElement} Signers HTML description\n */\n\n\nformat.signatures = function (conf, transaction) {\n  var signersNode = html.create(\"div\", \".cosmiclib_signersNode\");\n  signersUtils[\"for\"](conf, transaction).then(function (utils) {\n    if (utils.signersList.length < 2 && !utils.signatures.length) return;\n    utils.sources.forEach(function (accountId) {\n      if (accountId !== specs.neutralAccountId) {\n        var div = makeAccountSignersNode(conf, utils, accountId);\n        html.append(signersNode, div);\n      }\n    });\n  });\n  return signersNode;\n};\n\nfunction makeAccountSignersNode(conf, utils, accountId) {\n  var accountSignersNode = html.create(\"div\");\n  var title = \"Signers for \" + misc.shorter(accountId);\n  var titleNode = html.create(\"span\", \".cosmiclib_threshold\", title);\n  var listNode = html.create(\"ul\", \".cosmiclib_signers\");\n  html.append(accountSignersNode, titleNode, listNode);\n  utils.signers[accountId].forEach(function (signer) {\n    var signerNode = format.signer(conf, signer);\n    var lineNode = html.create(\"li\", null, signerNode);\n\n    if (utils.hasSigned(signer.key)) {\n      html.addClass(lineNode, \"cosmiclib_signed\");\n      listNode.insertBefore(lineNode, listNode.firstChild);\n    } else {\n      html.append(listNode, lineNode);\n    }\n  });\n  return accountSignersNode;\n}\n/**\n * Retrieves the parent odesc (*Operation Descriptor*) of an HTML element, or\n * returns `undefined` if **element** is not the child of an HTML formatted\n * operation.\n *\n * @param {HTMLElement} element\n * @return {Object} odesc\n */\n\n\nformat.parentOdesc = function (conf, element) {\n  return parentProperty(element, \"odesc\");\n};\n/**\n * Retrieves the parent operation index of an HTML element, or returns\n * `undefined` if **element** is not the child of an HTML formatted operation.\n *\n * @param {HTMLElement} element\n * @return {Number} operation index\n */\n\n\nformat.parentIndex = function (conf, element) {\n  return parentProperty(element, \"index\");\n};\n/**\n * Retrieves the parent tdesc of an HTML element, or returns `undefined`\n * if **element** is not the child of an HTML formatted transaction.\n *\n * @param {HTMLElement} element\n * @return {Object} tdesc\n */\n\n\nformat.parentTdesc = function (conf, element) {\n  return parentProperty(element, \"tdesc\");\n};\n\nfunction parentProperty(element, property) {\n  while (element.parentNode) {\n    if (element.parentNode[property]) return element.parentNode[property];else element = element.parentNode;\n  }\n}\n/******************************************************************************/\n\n/**\n * Returns an HTML div describing `field` `value`.\n *\n * @param {string} field The field name of `value` as defined in `spec.js`.\n * @param {*} value The value of `field`.\n * @return {HTLMElement} `field` `value` HTML description\n */\n\n\nformat.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (!type) throw new Error(\"Unknow field: \" + field);\n  var domNode = format.type(conf, type, value);\n  domNode.field = field;\n  if (field !== type) html.addClass(domNode, \"cosmiclib_\" + field);\n  return domNode;\n};\n\nformat.type = function (conf, type, value) {\n  if (_typeof(value) === \"object\" && value.error) type = \"error\";\n  var formatter = process[type] || process.string;\n  var domNode = formatter(conf, value);\n  html.addClass(domNode, \"cosmiclib_\" + type);\n  var eventObject = {\n    conf: conf,\n    type: type,\n    value: value,\n    domNode: domNode\n  };\n  if (conf.constructor.name === \"CosmicLink\") eventObject.cosmicLink = conf;\n\n  if (event.defaultClickHandlers[type]) {\n    domNode.onclick = function () {\n      return event.callClickHandler(conf, type, eventObject);\n    };\n\n    html.addClass(domNode, \"cosmiclib_clickable\");\n  }\n\n  return domNode;\n}; /// Provide a format method for each data type.\n\n\nspecs.types.forEach(function (type) {\n  format[type] = function (conf, value) {\n    return format.type(conf, type, value);\n  };\n});\n/******************************************************************************/\n\nvar process = {};\n\nprocess.string = function (conf, string) {\n  if (typeof string !== \"string\") string = string + \"\";\n  return html.create(\"span\", null, string);\n};\n\nprocess.error = function (conf, errDesc) {\n  var errorNode = html.create(\"span\", \".cosmiclib_error\");\n  errorNode.textContent = errDesc.value === \"\" ? \"(undefined)\" : errDesc.value.value || errDesc.value;\n  errorNode.title = errDesc.error.message;\n  return errorNode;\n};\n\nprocess.address = function (conf, address) {\n  var addressNode = html.create(\"span\", {\n    title: \"Resolving...\"\n  }, misc.shorter(address), html.create(\"span\", \".cosmiclib_loadingAnim\"));\n  resolveAddressAndUpdate(conf, address, addressNode);\n  return addressNode;\n};\n\nfunction resolveAddressAndUpdate(_x, _x2, _x3) {\n  return _resolveAddressAndUpdate.apply(this, arguments);\n}\n\nfunction _resolveAddressAndUpdate() {\n  _resolveAddressAndUpdate = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, address, addressNode) {\n    var account, animation;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return resolve.address(conf, address);\n\n          case 3:\n            account = _context.sent;\n            addressNode.title = account.account_id;\n\n            if (account.memo) {\n              addressNode.title += \"\\nMemo (\".concat(account.memo_type, \"): \").concat(account.memo);\n            }\n\n            if (account.address) addressNode.textContent = account.address;else if (account.alias) addressNode.textContent = account.alias;\n            addressNode.extra = account;\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            addressNode.title = \"Can't resolve address\";\n            html.addClass(addressNode, \"cosmiclib_error\");\n\n          case 14:\n            animation = html.grab(\".cosmiclib_loadingAnim\", addressNode);\n            if (animation) html.destroy(animation);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _resolveAddressAndUpdate.apply(this, arguments);\n}\n\nprocess.amount = function (conf, amount) {\n  var significant = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  var max = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7;\n  // Hide non-significant numbers\n  if (typeof amount !== \"number\") amount = Number(amount);\n  var nicified = nice(amount, {\n    significant: significant,\n    max: max\n  });\n\n  if (String(amount).length <= nicified.length) {\n    return html.create(\"span\", null, nicified);\n  } else {\n    return html.create(\"span\", {\n      className: \"cosmiclib_clickable\",\n      title: amount\n    }, html.create(\"span\", \".cosmiclib_tilde\", \"~\"), nicified);\n  }\n};\n\nprocess.asset = function (conf, asset) {\n  var assetNode = html.create(\"span\", null, format.field(conf, \"assetCode\", asset.code));\n\n  if (asset.issuer) {\n    html.append(assetNode, \" (\", format.field(conf, \"assetIssuer\", asset.issuer), \")\");\n  }\n\n  return assetNode;\n};\n\nprocess.assetsArray = function (conf, assetsArray) {\n  var assetsArrayNode = html.create(\"span\");\n\n  for (var i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) html.append(assetsArrayNode, \", \");\n    html.append(assetsArrayNode, format.asset(conf, assetsArray[i]));\n  }\n\n  return assetsArrayNode;\n};\n\nprocess.buffer = function (conf, object) {\n  if (object.type === \"base64\") return format.hash(conf, object.value);else return format.string(conf, object.value);\n};\n\nprocess.date = function (conf, date) {\n  return html.create(\"span\", {}, new Date(date).toLocaleString());\n};\n\nprocess.hash = function (conf, hash) {\n  return html.create(\"span\", {\n    title: hash\n  }, misc.shorter(hash));\n};\n\nprocess.id = process.hash;\n\nprocess.flags = function (conf, flags) {\n  var string = \"\";\n\n  if (flags >= 4) {\n    string = \"immutable\";\n    flags = flags - 4;\n  }\n\n  if (flags >= 2) {\n    if (string) string = \", \" + string;\n    string = \"revocable\" + string;\n    flags = flags - 2;\n  }\n\n  if (+flags === 1) {\n    if (string) string = \", \" + string;\n    string = \"required\" + string;\n  }\n\n  return html.create(\"span\", {}, string);\n};\n\nprocess.memo = function (conf, memo) {\n  var typeNode = format.field(conf, \"memoType\", memo.type);\n  var valueNode;\n\n  switch (memo.type) {\n    case \"text\":\n      valueNode = format.field(conf, \"memoText\", memo.value);\n      break;\n\n    case \"base64\":\n      valueNode = format.field(conf, \"memoBinary\", memo.value);\n      break;\n\n    case \"id\":\n      valueNode = format.field(conf, \"memoId\", memo.value);\n      break;\n\n    case \"hash\":\n      valueNode = format.field(conf, \"memoHash\", memo.value);\n      break;\n\n    case \"return\":\n      valueNode = format.field(conf, \"memoReturn\", memo.value);\n  }\n\n  return html.create(\"span\", {}, valueNode, \" (\", typeNode, \")\");\n};\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return process.amount(conf, price, 3, null);else return process.amount(conf, price.n / price.d, 3, null);\n};\n\nprocess.signer = function (conf, signer) {\n  var signerNode = html.create(\"span\");\n\n  switch (signer.type) {\n    case \"key\":\n    case \"ed25519_public_key\":\n      {\n        var value1 = signer.value || signer.key;\n        html.append(signerNode, \"Account \", format.field(conf, \"signerKey\", value1));\n        break;\n      }\n\n    case \"tx\":\n      {\n        var value2 = signer.value || signer.key;\n        html.append(signerNode, \"transaction \", format.field(conf, \"signerTx\", value2));\n        break;\n      }\n\n    case \"hash\":\n    case \"sha256hash\":\n      {\n        var value3 = signer.value || StellarSdk.StrKey.decodeSha256Hash(signer.key).toString(\"hex\");\n        html.append(signerNode, \"key whose hash is \", format.field(conf, \"signerHash\", value3));\n        break;\n      }\n  }\n\n  if (signer.weight > 1) {\n    var weightNode = format.weight(conf, signer.weight);\n    html.append(signerNode, \" (weight: \", weightNode, \")\");\n  }\n\n  return signerNode;\n};","\"use_strict\";\n/**\n * This module provides two ways to generate {@link SignersUtils} for a\n * Transaction object. The first one extends the object and is the intended way\n * to use those utilities. However, as extending objects can sometimes prove\n * inconvenient or intrusive, a second method allows to create a stand-alone\n * {@link SignersUtils} tied to a given transaction.\n *\n * @exports signersUtils\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar signersUtils = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar _resolve = require(\"./resolve\");\n/**\n * **SignersUtils** is a toolbox that aims to ease the handling of\n * multisignature transactions. The idea behind it is to fetch all required\n * data once and to cache the responses into the transaction. Then, all\n * the utilities can function in a synchronous (immediate) manner.\n *\n * Those are automatically available in `cosmicLink.transaction` after\n * `await cosmicLink.lock()` is ran. Alternatively, you can extend a transaction\n * or generate its SignersUtils by using {@link module:signersUtils}. There's no\n * `cosmicLib.SignersUtils` constructor.\n *\n * An instance of SignersUtils is always tied to a given transaction. This is\n * why none of the provided methods take a transaction as parameter.\n *\n * >\n * | Members                                                                     | Methods\n * |-----------------------------------------------------------------------------|-------------\n * | [sources]{@link SignersUtils#sources}: Array of transaction sources         | [hasSigner]{@link SignersUtils#hasSigner}: Test if a key is a legit signer for transaction\n * | [signers]{@link SignersUtils#signers}: Table of transaction signers         | [hasSigned]{@link SignersUtils#hasSigned}: Test if a key has signed transaction\n * | [signersList]{@link SignersUtils#signersList}: Array of transaction signers |\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Donation', maxDate: 2019 })\n *  .addOperation('payment', { destination: 'tips*cosmic.link', amount: 10 })\n *\n * await cosmicLink.lock({ network: 'test', source: 'myaddress*example.org' })\n *\n * console.log(cosmicLink.transaction.signers)\n * console.log(cosmicLink.transaction.hasSigner(GB...DXEZ))\n *\n * @alias SignersUtils\n * @namespace\n */\n\n\nvar SignersUtils =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  _createClass(SignersUtils, null, [{\n    key: \"resolve\",\n    value: function () {\n      var _resolve2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(conf, transaction, extendFlag) {\n        var extra, utils;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                extra = _resolve.extra(conf, transaction);\n\n                if (extra.cache.signersUtils) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _resolve.useNetwork(extra);\n\n                extra.cache.txHash = transaction.hash();\n                utils = new SignersUtils(extra, transaction);\n                /**\n                 * A list of the sources involved in the transaction.\n                 * @alias SignersUtils#sources\n                 * @type {Array}\n                 */\n\n                _context.next = 7;\n                return _resolve.txSources(extra, transaction);\n\n              case 7:\n                utils.sources = _context.sent;\n                _context.next = 10;\n                return _resolve.txSigners(extra, transaction);\n\n              case 10:\n                utils.signers = _context.sent;\n                _context.next = 13;\n                return _resolve.txSignersList(extra, transaction);\n\n              case 13:\n                utils.signersList = _context.sent;\n                Object.assign(utils, utilities);\n                extra.cache.signersUtils = utils;\n\n              case 16:\n                if (!extendFlag) {\n                  _context.next = 21;\n                  break;\n                }\n\n                if (!transaction.hasSigner) Object.assign(transaction, extra.cache.signersUtils);\n                return _context.abrupt(\"return\", transaction);\n\n              case 21:\n                return _context.abrupt(\"return\", extra.cache.signersUtils);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function resolve(_x, _x2, _x3) {\n        return _resolve2.apply(this, arguments);\n      }\n\n      return resolve;\n    }()\n  }]);\n\n  function SignersUtils(conf, transaction) {\n    _classCallCheck(this, SignersUtils);\n\n    this.signatures = transaction.signatures;\n    misc.setHiddenProperty(this, \"_cosmicplus\", transaction._cosmicplus);\n  }\n\n  return SignersUtils;\n}();\n/******************************************************************************/\n\n\nvar utilities = {};\n/**\n * Tests if **accountId** is a legit signer for the transaction.\n *\n * @example\n * if (transaction.hasSigner(GB...DEZX)) console.log('Legit signer')\n *\n * @alias SignersUtils#hasSigner\n * @param {string} accountId\n * @return {boolean}\n */\n\nutilities.hasSigner = function (accountId) {\n  return this.signersList.find(function (key) {\n    return key === accountId;\n  });\n};\n/**\n * Tests if **accountId** has signed the transaction.\n *\n * @example\n * if (transaction.hasSigned(GB...DEZX)) console.log('Has signed')\n *\n * @alias SignersUtils#hasSigned\n * @param {string} accountId\n * @return {boolean}\n */\n\n\nutilities.hasSigned = function (accountId) {\n  if (accountId.substr(0, 1) === \"G\") {\n    var keypair = StellarSdk.Keypair.fromPublicKey(accountId);\n    var txHash = this._cosmicplus.cache.txHash;\n    return !!this.signatures.find(function (entry) {\n      return keypair.verify(txHash, entry.signature());\n    });\n  }\n};\n/******************************************************************************/\n\n/**\n * Returns SignersUtils for **transaction**.\n *\n * @async\n * @param {Transaction} transaction\n * @return {SignersUtils}\n */\n\n\nsignersUtils[\"for\"] = function (conf, transaction) {\n  return SignersUtils.resolve(conf, transaction);\n};\n/**\n * Extends **transaction** with SignersUtils.\n *\n * @async\n * @param {Transaction} transaction\n * @return {Transaction}\n */\n\n\nsignersUtils[\"extends\"] = function (conf, transaction) {\n  return SignersUtils.resolve(conf, transaction, true);\n};","\"use strict\";\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @private\n * @exports convert\n */\n\nvar convert = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar construct = require(\"./construct\");\n\nvar decode = require(\"./decode\");\n\nvar destruct = require(\"./destruct\");\n\nvar encode = require(\"./encode\");\n\nvar resolve = require(\"./resolve\");\n/** ****************************    URI -> XDR    ******************************/\n\n\nconvert.uriToQuery = function (conf, uri) {\n  if (!uri.match(/\\?/)) return null;\n  var query = uri.replace(/^[^?]*/, \"\");\n  return query;\n};\n\nconvert.queryToTdesc = decode.query;\n\nconvert.tdescToJson = function (conf, tdesc) {\n  return JSON.stringify(tdesc, null, 2);\n};\n\nconvert.tdescToTransaction = construct.transaction;\n\nconvert.transactionToXdr = function (conf, transaction) {\n  return transaction.toEnvelope().toXDR(\"base64\");\n};\n\nconvert.xdrToSep7 = function (conf, xdr, options) {\n  var sep7 = \"web+stellar:tx?xdr=\";\n  sep7 += encodeURIComponent(xdr);\n\n  if (options.network && options.network !== \"public\") {\n    var passphrase = resolve.networkPassphrase(conf, options.network);\n    sep7 += \"&network_passphrase=\" + encodeURIComponent(passphrase);\n  }\n\n  if (options.callback) sep7 += \"&callback=url:\" + encode.url(conf, options.callback); // Not part of the standard.\n  // if (options.horizon) sep7 +=\"&horizon=\" + encode.url(conf, options.horizon)\n\n  return sep7;\n};\n/** ****************************    XDR -> URI    ******************************/\n\n\nconvert.xdrToTransaction = function (conf, xdr) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transaction = new StellarSdk.Transaction(xdr);\n  if (options.stripSignatures) transaction.signatures = [];\n  return transaction;\n};\n\nconvert.xdrToQuery = function (conf, xdr) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var query = \"?xdr=\" + xdr;\n  if (options.network) query += \"&network=\" + encodeURIComponent(options.network);\n  if (options.horizon) query += \"&horizon=\" + encode.url(conf, options.horizon);\n  if (options.callback) query += \"&callback=\" + encode.url(conf, options.callback);\n  return query;\n};\n\nconvert.transactionToTdesc = destruct.transaction;\n\nconvert.jsonToTdesc = function (conf, json) {\n  return JSON.parse(json);\n};\n\nconvert.tdescToQuery = encode.query;\n\nconvert.queryToUri = function (conf, query) {\n  var page = conf.page || \"https://cosmic.link\";\n  return page + query;\n};","\"use strict\";\n/**\n * Exposes some of the check routines used by cosmic-lib. Individual type-checks\n * are also available for:\n *\n * > address, amount, asset, assetsArray, boolean, buffer, date, flags, hash,\n * id, memo, network, price, sequence, signer, string, threshold, url, weight\n *\n * All checks are meant to be used on tdesc formatted values. Form example, in\n * tdesc buffer values are not encoded as actual Buffer object but as something\n * like: `{ type: \"text\", value: \"Hello World!\"}`.\n *\n * @example\n * check.field(\"minTime\", \"2018-11\")\n * check.date(\"2018-11\")\n *\n * @private\n * @exports check\n */\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar check = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Check that **tdesc** is valid.\n *\n * @example\n * check.tdesc({\n *   memo: { type: \"text\", value: \"Hello, World!\" },\n *   network: \"public\",\n *   source: \"tips*cosmic.link\",\n *   operations: [{ type: \"setOptions\", homeDomain: \"cosmic.link\" }]\n * })\n *\n * @param  {Object} tdesc\n */\n\n\ncheck.tdesc = function (conf, tdesc) {\n  var isValid = true;\n\n  for (var field in tdesc) {\n    try {\n      check.txField(conf, field, tdesc[field]);\n    } catch (error) {\n      isValid = false;\n      tdesc[field] = errDesc(error, tdesc[field]);\n    }\n  }\n\n  if (tdesc.operations.length > 100) {\n    isValid = false;\n    status.error(conf, \"Too much operations (max 100)\");\n  }\n\n  tdesc.operations.forEach(function (odesc) {\n    try {\n      check.odesc(conf, odesc);\n    } catch (e) {\n      isValid = false;\n    }\n  });\n\n  if (!isValid) {\n    var error = new Error(\"Invalid tdesc\"); // TODO: check if this is really useful\n\n    error.tdesc = tdesc;\n    throw error;\n  }\n};\n/**\n * Check that tdesc operation is valid (referred as **odesc**).\n *\n * @example\n * check.odesc({ type: \"payment\", destination: \"tips*cosmic.link\", amount: \"20\" })\n *\n * @param  {Object} odesc [description]\n */\n\n\ncheck.odesc = function (conf, odesc) {\n  var isValid = true;\n\n  try {\n    check.operationType(conf, odesc.type);\n  } catch (error) {\n    isValid = false;\n    odesc.type = errDesc(error, odesc.type);\n  }\n\n  for (var field in odesc) {\n    try {\n      check.operationField(conf, odesc.type, field, odesc[field]);\n    } catch (error) {\n      isValid = false;\n      odesc[field] = errDesc(error, odesc[field]);\n    }\n  }\n\n  specs.operationMandatoryFields[odesc.type].forEach(function (field) {\n    if (odesc[field] === undefined) {\n      isValid = false;\n      var error = new Error(\"Missing mandatory field: \" + field);\n      odesc[field] = errDesc(error);\n      status.error(conf, error.message);\n    }\n  });\n  if (!isValid) throw new Error(\"Invalid odesc\");\n};\n/**\n * Check that **field** is a valid transaction field and that its **value** is\n * valid.\n *\n * @param  {string} field\n * @param  {*} value\n */\n\n\ncheck.txField = function (conf, field, value) {\n  if (field === \"operations\") return;\n\n  if (!specs.transactionOptionalFields.find(function (name) {\n    return name === field;\n  })) {\n    status.error(conf, \"Invalid transaction field: \" + field, \"throw\");\n  }\n\n  check.field(conf, field, value);\n};\n/**\n * Check that **type** is a valid Stellar Operation type.\n *\n * @param  {String}\n */\n\n\ncheck.operationType = function (conf, type) {\n  if (!specs.operationMandatoryFields[type]) {\n    status.error(conf, \"Invalid operation: \" + type, \"throw\");\n  }\n};\n/**\n * Check that **field** is a valid **operation** field and that its **value** is\n * valid.\n *\n * @param {String} operation\n * @param {String} field\n * @param {*} value\n */\n\n\ncheck.operationField = function (conf, operation, field, value) {\n  if (field === \"type\") return;\n\n  if (!specs.isOperationField(operation, field)) {\n    status.error(conf, \"Invalid field for \".concat(operation, \": \").concat(field), \"throw\");\n  }\n\n  check.field(conf, field, value);\n};\n\nfunction errDesc(error) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return {\n    error: error,\n    value: value\n  };\n}\n/******************************************************************************/\n\n/**\n * Check that **field** **value** is a valid.\n *\n * @example\n * check.field(\"memo\", { type: \"text\", value: \"Hello, World!\" })\n *\n * @param {string} field The name of a Stellar Transaction parameter\n * @param {*} value\n */\n\n\ncheck.field = function (conf, field, value) {\n  if (value === \"\" && field !== \"homeDomain\" && field !== \"value\") {\n    status.error(conf, \"Missing value for field: \".concat(field), \"throw\");\n  }\n\n  var type = specs.fieldType[field];\n  if (!type) status.error(conf, \"Unknow field: \" + field, \"throw\");\n  if (value) check.type(conf, type, value);\n};\n/**\n * Check that **value** is of type **type**.\n *\n * @example\n * check.type(\"date\", \"2018-11-28\")\n *\n * @param {string} type\n * @param {string} value\n */\n\n\ncheck.type = function (conf, type, value) {\n  if (!specs.types.find(function (entry) {\n    return entry === type;\n  })) {\n    throw new Error(\"Invalid type: \" + type);\n  }\n\n  return check[type](conf, value);\n};\n/**\n * Generic check for numbers. Check that **value** is a number or a string\n * representing a number. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction\n * for `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\n\n\ncheck.number = function (conf, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"number\";\n  var min = arguments.length > 3 ? arguments[3] : undefined;\n  var max = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"unlimited\";\n  var num = +value;\n\n  if (isNaN(num)) {\n    status.error(conf, \"Invalid \".concat(type, \" (should be a number): \").concat(value), \"throw\");\n  } else if (min && num < min || max && num > max) {\n    status.error(conf, \"Invalid \".concat(type, \" (should be between \").concat(min, \" and \").concat(max, \" ): \").concat(value), \"throw\");\n  }\n};\n/**\n * Generic check for integers. Check that **value** is an integer or a string\n * representing an integer. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction for\n * **value**.\n *\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\n\n\ncheck.integer = function (conf, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"integer\";\n  var min = arguments.length > 3 ? arguments[3] : undefined;\n  var max = arguments.length > 4 ? arguments[4] : undefined;\n  check.number(conf, value, type, min, max);\n\n  if (parseInt(value) + \"\" !== value + \"\") {\n    status.error(conf, \"Not an integer: \".concat(value), \"throw\");\n  }\n};\n/**\n * Check that **value** is an UTF-8 string.\n *\n * *Note:* This use a weak (simplified) test that may not be accurate for small\n * strings.\n *\n * @param  {String} value\n */\n\n\ncheck.utf8 = function (conf, value) {\n  if (typeof value !== \"string\" || !misc.isUtf8(value)) {\n    status.error(conf, \"Invalid UTF8 string: \".concat(value), \"throw\");\n  }\n};\n/**\n * Check that **value** is a base64 string.\n *\n * @param  {String} value\n */\n\n\ncheck.base64 = function (conf, value) {\n  if (typeof value !== \"string\" || !misc.isBase64(value)) {\n    status.error(conf, \"Invalid base64 string: \".concat(value), \"throw\");\n  }\n};\n/******************************************************************************/\n\n\ncheck.amount = function (conf, amount) {\n  check.number(conf, amount, \"amount\");\n};\n\ncheck.address = function (conf, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.error(conf, \"Invalid address: \" + misc.shorter(address), \"throw\");\n  }\n};\n\ncheck.asset = function (conf, asset) {\n  var code = asset.code.toLowerCase();\n\n  if (!asset.issuer && code !== \"xlm\" && code !== \"native\") {\n    status.error(conf, \"Missing issuer for asset: \" + code, \"throw\");\n  }\n};\n\ncheck.assetsArray = function (conf, assetsArray) {\n  var isValid = true;\n\n  for (var index in assetsArray) {\n    try {\n      check.asset(conf, assetsArray[index]);\n    } catch (error) {\n      console.error(error);\n      isValid = false;\n    }\n  }\n\n  if (!isValid) throw new Error(\"Invalid assets array\");\n};\n\ncheck[\"boolean\"] = function (conf, _boolean) {\n  if (typeof _boolean !== \"boolean\") {\n    status.error(conf, \"Invalid boolean: \" + _boolean, \"throw\");\n  }\n};\n\ncheck.buffer = function (conf, buffer) {\n  switch (buffer.type) {\n    case \"text\":\n      check.utf8(conf, buffer.value);\n      break;\n\n    case \"base64\":\n      check.base64(conf, buffer.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid buffer type: \" + buffer.type, \"throw\");\n  }\n};\n\ncheck.date = function (conf, date) {\n  if (isNaN(Date.parse(date))) {\n    status.error(conf, \"Invalid date: \" + date, \"throw\");\n  }\n};\n\ncheck.flags = function (conf, flags) {\n  check.integer(conf, flags, \"flags\", 0, 7);\n};\n\ncheck.hash = function (conf, hash) {\n  if (hash.length !== 64 || !hash.match(/^[0-9a-f]*$/)) {\n    status.error(conf, \"Invalid hash: \" + hash, \"throw\");\n  }\n};\n\ncheck.id = function (conf, id) {\n  if (!id.match(/^[0-9]*$/)) status.error(conf, \"Invalid id: \" + id, \"throw\");\n};\n\ncheck.memo = function (conf, memo) {\n  switch (memo.type) {\n    case \"text\":\n      check.utf8(conf, memo.value);\n      break;\n\n    case \"base64\":\n      check.base64(conf, memo.value);\n      break;\n\n    case \"hash\":\n    case \"return\":\n      check.hash(conf, memo.value);\n      break;\n\n    case \"id\":\n      check.id(conf, memo.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid memo type: \" + memo.type, \"throw\");\n  }\n};\n\ncheck.price = function (conf, price) {\n  if (_typeof(price) === \"object\") {\n    try {\n      check.price(null, price.n);\n      check.price(null, price.d);\n    } catch (error) {\n      status.error(conf, \"Invalid price: \" + price, \"throw\");\n    }\n  } else {\n    check.number(conf, price, \"price\", 0);\n  }\n};\n\ncheck.signer = function (conf, signer) {\n  check.weight(conf, signer.weight);\n\n  switch (signer.type) {\n    case \"key\":\n      check.address(conf, signer.value);\n      break;\n\n    case \"hash\":\n    case \"tx\":\n      check.hash(conf, signer.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid signer type: \" + signer.type, \"throw\");\n  }\n};\n\ncheck.sequence = function (conf, sequence) {\n  check.number(conf, sequence, \"sequence\", 0);\n};\n\ncheck.threshold = function (conf, threshold) {\n  check.integer(conf, threshold, \"threshold\", 0, 255);\n};\n\ncheck.weight = function (conf, weight) {\n  check.integer(conf, weight, \"weight\", 0, 255);\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use_strict\";\n/**\n * Methods to set tdesc/odesc defaults values and strip out useless data.\n *\n * @exports normalize\n * @private\n */\n\nvar normalize = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar config = require(\"./config\");\n\nvar resolve = require(\"./resolve\");\n\nvar specs = require(\"./specs\");\n/**\n * Setup the default values for `tdesc`.\n */\n\n\nnormalize.tdesc = function (conf, tdesc) {\n  removeEmptyFields(tdesc);\n  if (!tdesc.operations) tdesc.operations = [];\n  if (tdesc.fee === 100 * tdesc.operations.length) delete tdesc.fee;\n  dateFields.forEach(function (field) {\n    if (tdesc[field]) {\n      tdesc[field] = normalize.date(conf, tdesc[field]);\n      if (tdesc[field] === \"1970\") delete tdesc[field];\n    }\n  });\n  if (tdesc.network) tdesc.network = normalize.network(conf, tdesc.network); // When network is neither test nor public, we want to provide a fallback\n  // Horizon URL; else we don't need it.\n\n  if (tdesc.network && tdesc.network !== \"public\" && tdesc.network !== \"test\") {\n    var url = resolve.horizon(config, tdesc.network) || tdesc.horizon;\n    tdesc.horizon = normalize.url(conf, url);\n  } else {\n    delete tdesc.horizon;\n  }\n\n  if (tdesc.callback) tdesc.callback = normalize.url(conf, tdesc.callback);\n};\n\nvar dateFields = [\"minTime\", \"maxTime\"];\n\nnormalize.date = function (conf, date) {\n  if (date.match(/^\\+[0-9]+$/)) {\n    var shifted = new Date();\n    shifted.setMinutes(shifted.getMinutes() + +date.substr(1));\n    date = shifted.toISOString().replace(/\\.[0-9]{3}/, \"\");\n  }\n\n  return date.replace(/:00\\.000/, \"\").replace(/\\.000/, \"\").replace(/T00:00Z/, \"\").replace(/-01$/, \"\").replace(/-01$/, \"\");\n};\n\nnormalize.network = function (conf, network) {\n  var networkName = resolve.networkName(conf, network);\n\n  if (networkName === \"public\" || networkName === \"test\") {\n    return networkName; // In network is neither test nor public, we want to use the network\n    // passphrase as parameter to ensure cross-wallet compatibility.\n  } else {\n    return resolve.networkPassphrase(conf, network);\n  }\n};\n\nnormalize.url = function (conf, url) {\n  if (url) return url.substr(0, 4) === \"http\" ? url : \"https://\" + url;\n};\n/**\n * Add the implicit values for fields made optional in the CosmicLink protocol\n * but required by StellarSdk.\n */\n\n\nnormalize.odesc = function (conf, odesc) {\n  removeEmptyFields(odesc); /// No limit = maximum limit.\n\n  if (odesc.limit === \"922337203685.4775807\") delete odesc.limit; /// New offer.\n\n  if (odesc.offerId === \"0\") delete odesc.offerId; /// Empty asset conversion path.\n\n  if (odesc.path && !odesc.path.length) delete odesc.path; /// Useless denominator.\n\n  if (odesc.price && odesc.price.d === 1) odesc.price = odesc.price.n + \"\";\n\n  switch (odesc.type) {\n    case \"allowTrust\":\n      /// Allow trust by default.\n      if (odesc.authorize === undefined) odesc.authorize = true;\n      break;\n\n    case \"createPassiveOffer\":\n    case \"manageOffer\":\n      /// Protocol 11 update renamed those operations.\n      if (odesc.type === \"manageOffer\") odesc.type = \"manageSellOffer\";else odesc.type = \"createPassiveSellOffer\";\n    // Fall Through\n\n    case \"createPassiveSellOffer\":\n    case \"manageBuyOffer\":\n    case \"manageSellOffer\":\n      /// Syntactic sugar for offer deletion\n      if (odesc.offerId && (odesc.amount === \"0\" || odesc.buyAmount === \"0\")) {\n        if (!odesc.buying && !odesc.selling) {\n          odesc.buying = new StellarSdk.Asset(\"XLM\", specs.neutralAccountId);\n        }\n\n        if (!odesc.price) odesc.price = \"1\";\n      } /// XLM as default asset.\n\n\n      if (odesc.buying && !odesc.selling) odesc.selling = XLM;\n      if (odesc.selling && !odesc.buying) odesc.buying = XLM;\n      break;\n\n    case \"manageData\":\n      /// Delete data entry.\n      if (!odesc.value) odesc.value = \"\";\n      break;\n\n    case \"pathPayment\":\n      /// XLM as default asset.\n      if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = XLM;\n      if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = XLM;\n      break;\n\n    case \"payment\":\n      /// XLM as default asset.\n      if (!odesc.asset) odesc.asset = XLM;\n      break;\n  }\n};\n\nvar XLM = StellarSdk.Asset[\"native\"]();\n\nfunction removeEmptyFields(object) {\n  for (var field in object) {\n    if (object[field] === null || object[field] === undefined) delete object[field];\n  }\n}","\"use strict\";\n/**\n * Contains the methods to convert data from *{@see Transaction}* format to\n * *Tdesc* format.\n *\n * @private\n * @exports destruct\n */\n\nvar destruct = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n/**\n * Convert `tx` into *Tdesc*.\n *\n * @param {Transaction} tx\n * @param {Object} options\n * @return {Object} A tdesc\n */\n\n\ndestruct.transaction = function (conf, tx) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var tdesc = {};\n  if (tx.source === specs.neutralAccountId) options.stripSource = true;\n  if (tx.sequence === \"0\") options.stripSequence = true;\n  tdesc.network = options.network;\n  tdesc.horizon = options.horizon;\n  tdesc.callback = options.callback;\n  if (!options.stripSource) tdesc.source = tx.source;\n\n  if (!options.stripSource && !options.stripSequence) {\n    tdesc.sequence = destruct.sequence(conf, tx.sequence);\n  }\n\n  if (tx._memo._switch.name !== \"memoNone\") tdesc.memo = destruct.memo(conf, tx._memo);\n\n  if (tx.timeBounds) {\n    if (tx.timeBounds.minTime) tdesc.minTime = destruct.date(conf, tx.timeBounds.minTime);\n    if (tx.timeBounds.maxTime) tdesc.maxTime = destruct.date(conf, tx.timeBounds.maxTime);\n  }\n\n  tdesc.fee = tx.fee;\n  tdesc.operations = tx.operations.map(function (op) {\n    return destruct.operation(conf, op);\n  });\n  normalize.tdesc(conf, tdesc);\n  return tdesc;\n};\n/**\n * Convert `op` into odesc format.\n *\n * @param {Object} op A StellarSdk Operation\n * @return {Object} An odesc\n */\n\n\ndestruct.operation = function (conf, op) {\n  var odesc = {};\n\n  for (var field in op) {\n    if (field === \"type\") odesc.type = op.type;else if (field === \"line\") odesc.asset = op.line;else odesc[field] = destruct.field(conf, field, op[field]);\n  }\n\n  normalize.odesc(conf, odesc);\n  return odesc;\n};\n/******************************************************************************/\n\n/**\n * Destruct `value` according to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\n\n\ndestruct.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (type) return destruct.type(conf, type, value);else throw new Error(\"Invalid field: \".concat(field));\n};\n/**\n * Destruct `value` using the destructuring function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\n\n\ndestruct.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value;else return destruct[type](conf, value);\n};\n/******************************************************************************/\n\n\ndestruct.asset = function (conf, asset) {\n  return Object.assign({}, asset);\n};\n\ndestruct.assetPath = function (conf, assetPath) {\n  return assetPath.map(function (asset) {\n    return destruct.asset(asset);\n  });\n};\n\ndestruct.amount = function (conf, amount) {\n  return amount.replace(/\\.?0+$/, \"\");\n};\n\ndestruct.buffer = function (conf, buffer) {\n  if (!buffer) return null;\n  var string = buffer.toString();\n\n  if (misc.isUtf8(string)) {\n    return {\n      type: \"text\",\n      value: string\n    };\n  } else {\n    var value = buffer.toString(\"base64\").replace(/=*$/, \"\");\n    return {\n      type: \"base64\",\n      value: value\n    };\n  }\n};\n\ndestruct.date = function (conf, timestamp) {\n  return new Date(timestamp * 1000).toISOString();\n};\n\ndestruct.memo = function (conf, sdkMemo) {\n  var memo = {};\n\n  if (sdkMemo._switch.name !== \"memoNone\") {\n    memo.type = sdkMemo._arm;\n\n    if (memo.type === \"hash\" || memo.type === \"retHash\") {\n      memo.value = sdkMemo._value.toString(\"hex\");\n      if (memo.type === \"retHash\") memo.type = \"return\";\n    } else if (memo.type === \"text\") {\n      return destruct.buffer(conf, sdkMemo._value);\n    } else {\n      memo.value = sdkMemo._value.toString();\n    }\n  }\n\n  return memo;\n};\n\ndestruct.sequence = function (conf, sdkSequence) {\n  return sdkSequence.toString();\n};\n\ndestruct.signer = function (conf, sdkSigner) {\n  var signer = {\n    weight: sdkSigner.weight\n  };\n\n  if (sdkSigner.ed25519PublicKey) {\n    signer.type = \"key\";\n    signer.value = sdkSigner.ed25519PublicKey;\n  } else if (sdkSigner.sha256Hash) {\n    signer.type = \"hash\";\n    signer.value = sdkSigner.sha256Hash.toString(\"hex\");\n  } else if (sdkSigner.preAuthTx) {\n    signer.type = \"tx\";\n    signer.value = sdkSigner.preAuthTx.toString(\"hex\");\n  }\n\n  return signer;\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","\"use strict\";\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n * @exports event\n */\n\nvar event = exports;\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar format = require(\"./format\");\n/** *** Click events *****/\n\n/**\n * Set the click handler for **type** HTML elements as **callback**.\n *\n * @example\n * cosmicLib.config.setClickHandler('address', showAddressPopup)\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\n\n\nevent.setClickHandler = function (conf, type, callback) {\n  conf.clickHandlers[type] = callback;\n};\n/**\n * Remove the current click handler for **type**.\n *\n * @example\n * cosmicLib.config.clearClickHandler('address')\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\n\n\nevent.clearClickHandler = function (conf, type) {\n  conf.clickHandlers[type] = undefined;\n};\n\nevent.callClickHandler = function (conf, type, event) {\n  var handler = conf.clickHandlers[type];\n  event.extra = event.domNode.extra;\n  event.field = event.domNode.field;\n  event.tdesc = format.parentTdesc(conf, event.domNode);\n  event.odesc = format.parentOdesc(conf, event.domNode);\n  event.index = format.parentIndex(conf, event.domNode);\n  if (handler) handler(event);\n};\n/**\n * The active click handlers. Takes the form:\n *\n * ```\n * cosmicLib.config.clickHandlers = {\n *   type1: callback1,\n *   ...\n *   typeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * * **address**: A prompt that shows the address details\n * * **id**: A function that copy the id into the clipboard\n * * **hash**: A function that copy the hash into the clipboard or show a prompt\n *   for preimage signature when relevant\n * ```\n */\n\n\nevent.defaultClickHandlers = {\n  address: function address(event) {\n    if (!event.extra) return;\n    var message = \"\";\n\n    for (var field in event.extra) {\n      message += \"\".concat(field, \":\\n\") + \"\".concat(event.extra[field], \"\\n\\n\");\n    }\n\n    window.alert(message);\n  },\n  hash: function hash(event) {\n    var grandma = event.domNode.parentNode.parentNode.parentNode;\n\n    if (grandma.classList.contains(\"cosmiclib_signers\")) {\n      var preimage = prompt(\"Please enter preimage:\");\n      if (preimage) event.cosmicLink.sign(preimage);\n    } else {\n      html.copyString(event.value);\n    }\n  },\n  id: function id(event) {\n    return html.copyString(event.value);\n  }\n};","\"use strict\";\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @private\n * @exports construct\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar construct = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar resolve = require(\"./resolve\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Returns the StellarSdk Transaction built from tdesc.\n *\n * @param {Object} tdesc\n * @return {Transaction}\n */\n\n\nconstruct.transaction =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, tdesc) {\n    var txBuilder, index, odesc, operation;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!conf.status) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error(conf.status);\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return makeTransactionBuilder(conf, tdesc);\n\n          case 5:\n            txBuilder = _context.sent;\n            _context.t0 = _regeneratorRuntime.keys(tdesc.operations);\n\n          case 7:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 16;\n              break;\n            }\n\n            index = _context.t1.value;\n            odesc = tdesc.operations[index];\n            _context.next = 12;\n            return construct.operation(conf, odesc);\n\n          case 12:\n            operation = _context.sent;\n            txBuilder.addOperation(operation);\n            _context.next = 7;\n            break;\n\n          case 16:\n            return _context.abrupt(\"return\", txBuilder.build());\n\n          case 19:\n            _context.prev = 19;\n            _context.t2 = _context[\"catch\"](2);\n\n            if (!conf.errors) {\n              console.error(_context.t2);\n              status.error(conf, _context.t2.message);\n            }\n\n            if (conf.status) {\n              _context.next = 26;\n              break;\n            }\n\n            status.fail(conf, \"Transaction build failed\", \"throw\");\n            _context.next = 27;\n            break;\n\n          case 26:\n            throw _context.t2;\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 19]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Returns the StellarSdk Operation built from `odesc`.\n *\n * @param {Object} odesc\n * @return {Operation}\n */\n\n\nconstruct.operation =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, odesc) {\n    var operation, field;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            operation = odesc.type;\n            delete odesc.type;\n            _context2.t0 = _regeneratorRuntime.keys(odesc);\n\n          case 3:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 10;\n              break;\n            }\n\n            field = _context2.t1.value;\n            _context2.next = 7;\n            return construct.field(conf, field, odesc[field]);\n\n          case 7:\n            odesc[field] = _context2.sent;\n            _context2.next = 3;\n            break;\n\n          case 10:\n            return _context2.abrupt(\"return\", StellarSdk.Operation[operation](odesc));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Returns the TransactionBuilder for `tdesc`.\n */\n\n\nfunction makeTransactionBuilder(_x5, _x6) {\n  return _makeTransactionBuilder.apply(this, arguments);\n}\n/******************************************************************************/\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\n\n\nfunction _makeTransactionBuilder() {\n  _makeTransactionBuilder = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(conf, tdesc) {\n    var server, baseFee, txOpts, sourceAccount, builder, index, operation, destination, memoType, memoValue, _short;\n\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            server = resolve.server(conf);\n            _context9.next = 3;\n            return server.fetchBaseFee();\n\n          case 3:\n            baseFee = _context9.sent;\n            txOpts = {};\n            if (tdesc.fee) txOpts.fee = tdesc.fee;else txOpts.fee = tdesc.operations.length * baseFee;\n            if (tdesc.memo) txOpts.memo = construct.memo(conf, tdesc.memo);\n\n            if (tdesc.minTime || tdesc.maxTime) {\n              txOpts.timebounds = {\n                minTime: 0,\n                maxTime: 0\n              };\n              if (tdesc.minTime) txOpts.timebounds.minTime = construct.date(conf, tdesc.minTime);\n              if (tdesc.maxTime) txOpts.timebounds.maxTime = construct.date(conf, tdesc.maxTime);\n            }\n\n            _context9.next = 10;\n            return resolve.txSourceAccount(conf, tdesc.source, tdesc.sequence);\n\n          case 10:\n            sourceAccount = _context9.sent;\n            builder = new StellarSdk.TransactionBuilder(sourceAccount, txOpts);\n            if (!tdesc.maxTime) builder.setTimeout(StellarSdk.TimeoutInfinite); /// Check if memo is needed for destination account.\n\n            _context9.t0 = _regeneratorRuntime.keys(tdesc.operations);\n\n          case 14:\n            if ((_context9.t1 = _context9.t0()).done) {\n              _context9.next = 24;\n              break;\n            }\n\n            index = _context9.t1.value;\n            operation = tdesc.operations[index];\n\n            if (!operation.destination) {\n              _context9.next = 22;\n              break;\n            }\n\n            _context9.next = 20;\n            return resolve.address(conf, operation.destination);\n\n          case 20:\n            destination = _context9.sent;\n\n            if (destination.memo) {\n              memoType = destination.memo_type;\n              memoValue = destination.memo;\n\n              if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n                _short = misc.shorter(operation.destination);\n                status.error(conf, \"Memo conflict: \".concat(_short, \" requires to set a memo\"), \"throw\");\n              } else {\n                tdesc.memo = {\n                  type: memoType,\n                  value: memoValue\n                };\n                builder.addMemo(new StellarSdk.Memo(memoType, memoValue));\n              }\n            }\n\n          case 22:\n            _context9.next = 14;\n            break;\n\n          case 24:\n            return _context9.abrupt(\"return\", builder);\n\n          case 25:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _makeTransactionBuilder.apply(this, arguments);\n}\n\nconstruct.field =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, field, value) {\n    var type;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            type = specs.fieldType[field];\n\n            if (!type) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", construct.type(conf, type, value));\n\n          case 5:\n            throw new Error(\"Invalid field: \".concat(field));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\n\n\nconstruct.type =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(conf, type, value) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", construct[type](conf, value));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x10, _x11, _x12) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/******************************************************************************/\n\n\nconstruct.address =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf, address) {\n    var account;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return resolve.address(conf, address);\n\n          case 2:\n            account = _context5.sent;\n            return _context5.abrupt(\"return\", account.account_id);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nconstruct.asset =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf, asset) {\n    var publicKey;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!asset.issuer) {\n              _context6.next = 7;\n              break;\n            }\n\n            _context6.next = 3;\n            return construct.address(conf, asset.issuer);\n\n          case 3:\n            publicKey = _context6.sent;\n            return _context6.abrupt(\"return\", new StellarSdk.Asset(asset.code, publicKey));\n\n          case 7:\n            return _context6.abrupt(\"return\", StellarSdk.Asset[\"native\"]());\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nconstruct.assetsArray =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, assetsArray) {\n    var path, index, string, constructedAsset;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            path = [];\n            _context7.t0 = _regeneratorRuntime.keys(assetsArray);\n\n          case 2:\n            if ((_context7.t1 = _context7.t0()).done) {\n              _context7.next = 11;\n              break;\n            }\n\n            index = _context7.t1.value;\n            string = assetsArray[index];\n            _context7.next = 7;\n            return construct.asset(conf, string);\n\n          case 7:\n            constructedAsset = _context7.sent;\n            path.push(constructedAsset);\n            _context7.next = 2;\n            break;\n\n          case 11:\n            return _context7.abrupt(\"return\", path);\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nconstruct.buffer = function (conf, object) {\n  if (object.type === \"base64\") {\n    return Buffer.from(object.value, \"base64\");\n  } else {\n    return object.value || null;\n  }\n};\n\nconstruct.date = function (conf, string) {\n  return Date.parse(string) / 1000;\n};\n\nconstruct.memo = function (conf, memo) {\n  if (memo.type === \"base64\") {\n    return new StellarSdk.Memo(\"text\", Buffer.from(memo.value, \"base64\"));\n  } else {\n    return new StellarSdk.Memo(memo.type, memo.value);\n  }\n};\n\nconstruct.signer =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(conf, signer) {\n    var sdkSigner, publicKey;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            sdkSigner = {\n              weight: +signer.weight\n            };\n\n            if (!(signer.type === \"tx\")) {\n              _context8.next = 5;\n              break;\n            }\n\n            sdkSigner.preAuthTx = signer.value;\n            _context8.next = 14;\n            break;\n\n          case 5:\n            if (!(signer.type === \"hash\")) {\n              _context8.next = 9;\n              break;\n            }\n\n            sdkSigner.sha256Hash = signer.value;\n            _context8.next = 14;\n            break;\n\n          case 9:\n            if (!(signer.type === \"key\")) {\n              _context8.next = 14;\n              break;\n            }\n\n            _context8.next = 12;\n            return construct.address(conf, signer.value);\n\n          case 12:\n            publicKey = _context8.sent;\n            sdkSigner.ed25519PublicKey = publicKey;\n\n          case 14:\n            return _context8.abrupt(\"return\", sdkSigner);\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use_strict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  var StellarSdk = require(\"./stellar-sdk\");\n\n  var hash = \"0000000000000000000000000000000000000000000000000000000000000000\";\n  var memo = new StellarSdk.Memo(\"hash\", hash);\n  module.exports = memo.value.__proto__.constructor;\n} else {\n  module.exports = env.nodeRequire(\"safe-buffer\").Buffer;\n}","\"use strict\";\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @private\n * @exports encode\n */\n\nvar encode = exports;\n\nvar decode = require(\"./decode\");\n\nvar specs = require(\"./specs\");\n\nencode.query = function (conf, tdesc) {\n  if (conf.errors) return undefined;\n  var command;\n\n  if (!tdesc.operations.length || tdesc.operations.length > 1 || tdesc.operations[0].source) {\n    command = \"transaction\";\n  } else {\n    command = tdesc.operations[0].type;\n  }\n\n  var query = \"?\" + command;\n  specs.transactionOptionalFields.forEach(function (field) {\n    if (tdesc[field] !== undefined) query += encode.field(conf, field, tdesc[field]);\n  });\n  tdesc.operations.forEach(function (odesc) {\n    if (command === \"transaction\") query += \"&operation=\" + odesc.type;\n\n    for (var field in odesc) {\n      if (field === \"type\") continue; // Syntactic sugar for offer deletion.\n\n      if (odesc.type === \"manageOffer\" && odesc.amount == \"0\" && odesc.offerId) {\n        if (field === \"price\" && odesc.price === \"1\") continue;\n\n        if (field === \"buying\" && odesc.buying.code === \"XLM\" && odesc.buying.issuer === specs.neutralAccountId) {\n          continue;\n        }\n      }\n\n      query += encode.field(conf, field, odesc[field]);\n    }\n  });\n  return query;\n};\n/******************************************************************************/\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\n\n\nencode.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (!type) throw new Error(\"Invalid field: \".concat(field));\n  var encodedValue = encode.type(conf, type, value);\n  if (encodedValue === \"\" && field !== \"homeDomain\") return \"\";else return \"&\".concat(field, \"=\").concat(encodedValue);\n};\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\n\n\nencode.type = function (conf, type, value) {\n  if (value === undefined) return \"\";\n  var encodedValue = process[type] ? process[type](conf, value) : value;\n  if (encodedValue === undefined) return \"\";else return encodedValue;\n};\n/******************************************************************************/\n\n\nvar process = {};\n\nprocess.asset = function (conf, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + \":\" + encodeURIComponent(asset.issuer);\n};\n\nprocess.assetsArray = function (conf, assetsArray) {\n  return assetsArray.map(function (asset) {\n    return encode.asset(conf, asset);\n  }).toString();\n};\n\nprocess[\"boolean\"] = function (conf, _boolean) {\n  if (_boolean === false) return \"false\";\n};\n\nprocess.buffer = function (conf, buffer) {\n  if (buffer.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    var decoded = decode.buffer(conf, buffer.value);\n    if (decoded.type === \"text\") return encodeURIComponent(buffer.value);\n  } else if (buffer) {\n    return buffer.type + \":\" + encodeURIComponent(buffer.value);\n  }\n};\n\nprocess.date = function (conf, date) {\n  return date.replace(/Z$/, \"\");\n};\n\nprocess.memo = function (conf, memo) {\n  if (memo.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    var decoded = decode.memo(conf, memo.value);\n    if (decoded.type === \"text\") return encodeURIComponent(memo.value);\n  }\n\n  return memo.type + \":\" + encodeURIComponent(memo.value);\n};\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return price;else return price.n + \":\" + price.d;\n};\n\nprocess.signer = function (conf, signer) {\n  return signer.weight + \":\" + signer.type + \":\" + signer.value;\n};\n\nprocess.string = encode.buffer;\n\nprocess.url = function (conf, url) {\n  if (url.substr(0, 8) === \"https://\") url = url.substr(8);\n  return encodeURIComponent(url);\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  exports[type] = function (conf, value) {\n    return encode.type(conf, type, value);\n  };\n});","\"use_strict\";\n/**\n * Methods that expand tdesc paramaters from their query/StellarSdk format into\n * their tdesc equivalent. This allows user to pass value in the format they\n * feel the most confortable with when creating CosmicLinks.\n *\n * @private\n * @exports expand\n */\n\nvar expand = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar decode = require(\"./decode\");\n\nvar destruct = require(\"./destruct\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n/**\n * Replace each tdesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `tdesc` passed in\n * parameter.\n *\n * @param {Object} tdesc\n * @return tdesc\n */\n\n\nexpand.tdesc = function (conf, tdesc) {\n  for (var field in tdesc) {\n    if (field === \"operations\") continue;else tdesc[field] = expand.field(conf, field, tdesc[field]);\n  }\n\n  if (tdesc.operations) tdesc.operations.forEach(function (odesc) {\n    return expand.odesc(conf, odesc);\n  });\n  normalize.tdesc(conf, tdesc);\n  return tdesc;\n};\n/**\n * Replace each odesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `odesc` passed in\n * parameter.\n *\n * @param {Object} odesc\n * @return tdesc\n */\n\n\nexpand.odesc = function (conf, odesc) {\n  for (var field in odesc) {\n    if (field === \"type\") continue;else odesc[field] = expand.field(conf, field, odesc[field]);\n  }\n\n  normalize.odesc(conf, odesc);\n  return odesc;\n};\n/******************************************************************************/\n\n/**\n * Expands `value` to its tdesc format according to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\n\n\nexpand.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (type) return expand.type(conf, type, value);else throw new Error(\"Invalid field: \".concat(field));\n};\n/**\n * Expands `value` to its tdesc format according to `type`.\n *\n * @param {string} type\n * @param {string} value\n */\n\n\nexpand.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value;\n  if (typeof value === \"number\") value = value + \"\";\n  return expand[type] ? expand[type](conf, value) : value + \"\";\n};\n/******************************************************************************/\n\n\nexpand.asset = function (conf, asset) {\n  if (asset instanceof StellarSdk.Asset) return destruct.asset(conf, asset);else if (typeof asset === \"string\") return decode.asset(conf, asset);else return asset;\n};\n\nexpand.assetPath = function (conf, assetPath) {\n  if (Array.isArray(assetPath)) return assetPath.map(function (asset) {\n    return expand.asset(conf, asset);\n  });else if (typeof assetPath === \"string\") return decode.assetPath(conf, assetPath);\n};\n\nexpand.buffer = function (conf, buffer) {\n  if (!buffer) return \"\";\n  if (buffer instanceof Buffer) return destruct.buffer(conf, buffer);else if (typeof buffer === \"string\") return decode.buffer(conf, buffer);else return buffer;\n};\n\nexpand.date = function (conf, date) {\n  if (typeof date === \"number\") date = date + \"\";\n  if (!date.match(/^[0-9]*$/) || date.length < 5) return decode.date(conf, date);else return destruct.date(conf, date);\n};\n\nexpand.memo = function (conf, memo) {\n  if (memo instanceof StellarSdk.Memo) return destruct.memo(conf, memo);else if (typeof memo === \"string\") return decode.memo(conf, memo);else return memo;\n};\n\nexpand.price = function (conf, price) {\n  if (typeof price === \"string\" && price.match(/:/)) {\n    return decode.price(conf, price);\n  } else {\n    return price;\n  }\n};\n\nexpand.signer = function (conf, signer) {\n  if (signer.key) return destruct.signer(conf, signer);else if (typeof signer === \"string\") return decode.signer(conf, signer);else return signer;\n};\n\nexpand.string = function (conf, string) {\n  if (typeof string === \"number\") return string + \"\";else return string;\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) {\n    exports[type] = function (conf, value) {\n      if (typeof value === \"number\") return value + \"\";else return value;\n    };\n  }\n});","var ECLevel = require('./error-correction-level')\r\n\r\nvar EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nvar EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","var numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","function hex2rgba (hex) {\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  var hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  var margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0 ? 4 : options.margin\n\n  var width = options.width && options.width >= 21 ? options.width : undefined\n  var scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  var size = qr.modules.size\n  var data = qr.modules.data\n  var scale = exports.getScale(size, opts)\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  var scaledMargin = opts.margin * scale\n  var palette = [opts.color.light, opts.color.dark]\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4\n      var pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale)\n        var jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","\"use_strict\";\n/**\n * Web application pages are embeded into URL hash.\n *\n * @exports pages\n */\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar dom = require(\"./dom\");\n\nvar html = require(\"./html\");\n\nvar Page = module.exports =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  _createClass(Page, null, [{\n    key: \"resolve\",\n    value: function resolve(hash) {\n      return Page.table[hash];\n    }\n  }, {\n    key: \"add\",\n    value: function add(title, domNode) {\n      var page = new Page(title, domNode);\n      Page.table[page.hash] = page;\n      html.append(dom.main, page.contentNode);\n      if (dom.nav) html.append(dom.nav, page.linkNode);\n      if (location.hash === page.hash) page.select();else html.hide(page.contentNode);\n      return page;\n    }\n  }, {\n    key: \"select\",\n    value: function select(hash) {\n      var page = Page.resolve(hash);\n      if (page) page.select();else throw new Error(\"Can't find page: \".concat(hash));\n    }\n  }, {\n    key: \"list\",\n    value: function list() {\n      return Object.values(Page.table);\n    }\n  }]);\n\n  function Page(title, domNode) {\n    var _this = this;\n\n    _classCallCheck(this, Page);\n\n    this.title = title;\n    if (!domNode.id) domNode.id = title.toLowerCase();\n    this.hash = \"#\".concat(domNode.id);\n    if (!domNode.parentNode) dom.ingest(domNode);\n    html.addClass(domNode, \"page\");\n    this.contentNode = domNode;\n    this.linkNode = html.create(\"a\", null, title);\n\n    this.linkNode.onclick = function () {\n      return _this.select();\n    };\n  }\n\n  _createClass(Page, [{\n    key: \"select\",\n    value: function select() {\n      if (this.isSelected) return;else if (Page.current) Page.current.unselect();\n      history.replaceState(\"\", null, location.search + this.hash);\n      html.show(this.contentNode);\n      this.linkNode.className = \"selected\";\n      this.linkNode.onclick = undefined;\n      Page.current = this;\n      if (this.onSelect) this.onSelect(this);\n    }\n  }, {\n    key: \"unselect\",\n    value: function unselect() {\n      var _this2 = this;\n\n      if (Page.current === this) {\n        history.replaceState(\"\", null, location.search);\n        html.hide(this.contentNode);\n        this.linkNode.className = null;\n\n        this.linkNode.onclick = function () {\n          return _this2.select();\n        };\n\n        Page.current = undefined;\n      }\n    }\n  }, {\n    key: \"isSelected\",\n    get: function get() {\n      return Page.current === this;\n    }\n  }]);\n\n  return Page;\n}();\n\nPage.table = {};\nPage.current = undefined;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nif (env.isBrowser) require(\"@cosmic-plus/domutils/es5/polyfill\");\n/**\n * Automatically pass `config` to `module` functions as first argument.\n *\n * @param {Object} module A cosmic-lib module whose functions takes config as\n *   the first argument.\n * @param {Object} config A configuration object similar than config.js module.\n * @private\n */\n\nfunction exposeModule(module) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var layer = Object.assign({}, module);\n  misc.setHiddenProperty(layer, \"_config\", config);\n\n  var _loop = function _loop(name) {\n    if (typeof module[name] === \"function\") {\n      layer[name] = function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return module[name].apply(module, [this._config].concat(params));\n      };\n    } else {\n      layer[name] = module[name];\n    }\n  };\n\n  for (var name in module) {\n    _loop(name);\n  }\n\n  return layer;\n}\n/**\n * Create a clone of the library with an alternative config object derived from\n * **params**. Fields which are not defined in **params** stay in sync with parent\n * configuration.\n *\n * @example\n * const testnet = cosmicLib.withConfig({ network: 'test' })\n * const account = await testnet.resolve.account('tips*cosmic.link')\n *\n * @params {Object} params Alternative configuration\n * @return {Object} A clone of cosmicLib\n */\n\n\nexports.withConfig = function (params) {\n  var library = Object.create(this);\n  library.config = Object.assign({}, this.config, params);\n\n  for (var module in this) {\n    if (this[module].prototype && this[module].prototype.__proto__ === this.config) {\n      library[module] =\n      /*#__PURE__*/\n      function (_this$module) {\n        _inherits(_class, _this$module);\n\n        function _class() {\n          _classCallCheck(this, _class);\n\n          return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n        }\n\n        return _class;\n      }(this[module]);\n\n      Object.assign(library[module].prototype, this[module].prototype);\n      library[module].prototype.__proto__ = library.config;\n    } else if (this[module]._config) {\n      library[module] = Object.create(this[module]);\n      misc.setHiddenProperty(library[module], \"_config\", library.config);\n    }\n  }\n\n  return library;\n};\n/**\n * Export modules **names** after linking them to `config`.\n *\n * @param  {...String} names Module names\n */\n\n\nfunction exportModule(name, module) {\n  exports[name] = exposeModule(module, config);\n} // Export modules.\n\n\nvar config = exports.config = require(\"./config\");\n\nexports.CosmicLink = require(\"./cosmiclink\");\nif (env.isBrowser) exports.load = require(\"./load\");\nexportModule(\"resolve\", require(\"./resolve\"));\nexportModule(\"signersUtils\", require(\"./signers-utils\"));\nexports.specs = require(\"./specs\"); // Export helpers (not documented in the manual - please check the code).\n\nexportModule(\"check\", require(\"./check\"));\nexportModule(\"expand\", require(\"./expand\"));\nexportModule(\"construct\", require(\"./construct\"));\nexportModule(\"destruct\", require(\"./destruct\"));\nexportModule(\"encode\", require(\"./encode\"));\nexportModule(\"decode\", require(\"./decode\"));","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use_strict\";\n/**\n * Aliases handlers & most known Stellar addresses.\n *\n * @private\n * @exports aliases\n */\n\nvar aliases = exports;\n/**\n * Add new **aliases** or replace existing ones.\n *\n * @example\n * cosmicLib.config.addAliases({\n *   'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n *   'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io'\n * })\n *\n * @param {Object} aliases An object such as `{ publicKey1: name1, ..., publicKeyN: nameN }`\n */\n\naliases.set = function (conf, aliases) {\n  conf.aliases = Object.assign(conf.aliases, aliases);\n};\n/**\n * Remove **publicKeys** from aliases list.\n *\n * @example\n * cosmicLib.config.removeAliases([\n *  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP',\n *  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5',\n * ])\n *\n * @param {Array} publicKeys An array of public keys\n */\n\n\naliases.remove = function (conf, publicKeys) {\n  publicKeys.forEach(function (entry) {\n    return delete conf.aliases[entry];\n  });\n};\n/**\n * Aliases handlers & most known Stellar addresses. Aliases takes the form:\n *\n * ```js\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n */\n\n\naliases.all = {\n  GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2: \"aex.com\",\n  GASWJWFRYE55KC7MGANZMMRBK5NPXT3HMPDQ6SEXZN6ZPWYXVVYBFRTE: \"anchorusd.com\",\n  GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX: \"anchorusd.com\",\n  GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4: \"apay.io\",\n  GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF: \"apay.io\",\n  GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR: \"apay.io\",\n  GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP: \"apay.io\",\n  GCYKQ2627BPKMSUZJK64GPYVKD4TRNACP45X6B754PR6TCYJXCHGUTWB: \"apiscapitalfunds.com\",\n  GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC: \"astral9.io\",\n  GDZURZR6RZKIQVOWZFWPVAUBMLLBQGXP2K5E5G7PEOV75IYPDFA36WK4: \"atlantisblue.org\",\n  GABQBEZCNQRUHURCG6E2UZC6QXXEPLALHBVA6J6IQNKNJL66VPY7FO7G: \"auskunft.de\",\n  GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A: \"binance.com\",\n  GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC: \"binance.com\",\n  GBOXNWGBB7SG3NVIA7O25M7JIRSXQ4KKU3GYARJEFMQXSR3APF3KRI6S: \"bitbox.one\",\n  GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL: \"bitfinex.com\",\n  GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3: \"bittrex.com\",\n  GATTH3VPK4PMXLE7JSEJ3OC72OYOGJYINLHSCJX365BP6SAV6GKSHJAV: \"bostravel.online\",\n  GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM: \"btc38.com\",\n  GB3RMPTL47E4ULVANHBNCXSXM2ZA5JFY5ISDRERPCXNJUDEO73QFZUNK: \"cex.io\",\n  GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7: \"changelly.com\",\n  GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP: \"charnatoken.top\",\n  GBOAYBE3NJKS4WPIVM2H5DVFIDYLAHHD2DAWYL5LLUVYF77M3JIVGCTR: \"citron.cash\",\n  GCJGYOH2EYW6FFISLBA3L3R3PUYCQ6DQ47GXVAMG7JLLIKPAPV3RLBSV: \"citron.cash\",\n  GBDUXW4E5WRM5EM6UXBLE7Y5XGSXJX472BSSBPKFPQ3PJCJHRIA6SH4C: \"coinbase.com\",\n  GDQP2KPQGKIHYJGXNUIYOMHARUARCA7DJT5FO2FFOOKY3B2WSQHG4W37: \"coinbase.com\",\n  GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP: \"coins.asia\",\n  GAWODAROMJ33V5YDFY3NPYTHVYQG7MJXVJ2ND3AOGIHYRWINES6ACCPD: \"cowrie.exchange\",\n  GDMXNQBJMS3FYI4PFSYCCB4XODQMNMTKPQ5HIKOUWBOWJ2P3CF6WASBE: \"cryptomkt.com\",\n  GA4BYMUO5D7OLGVJWZ2D5FCWU7SB63FNZ4QUU574SMNA6ELK5TZD3SO3: \"cryptomover.com\",\n  GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ: \"cryptomover.com\",\n  GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3: \"cryptomover.com\",\n  GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG: \"cryptomover.com\",\n  GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI: \"cryptomover.com\",\n  GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2: \"cryptomover.com\",\n  GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7: \"cryptotari.io\",\n  GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN: \"equid.co\",\n  GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH: \"exrates.me\",\n  GAZEX2USUBMMWFRZFS77VDJYXUFLXI4ZGFPWX6TBNZCSTEQWNLFZMXFF: \"fchain.io\",\n  GBETHKBL5TCUTQ3JPDIYOZ5RDARTMHMEKIO2QZQ7IOZ4YC5XV3C2IKYU: \"fchain.io\",\n  GCNY5OXYSY4FKHOPT2SPOQZAOEIGXB5LBYW3HVU3OWSTQITS65M5RCNY: \"fchain.io\",\n  GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW: \"flutterwave.com\",\n  GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M: \"frasindo.com\",\n  GBUAVXCI7JKH6D2ZHZ6KZ7Z5MHHCXHI4DSUUC4KOISDMRPVY3MRBF3OY: \"freight-coin.com\",\n  GDGDECMFS34OVTQJKTCHORPE7LOYDH2XYNRMUHLGCJFP56VUN6AW5LCF: \"freight-coin.com\",\n  GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S: \"gate.io\",\n  GARFMAHQM4JDI55SK2FGEPLOZU7BTEODS3Y5QNT3VMQQIU3WV2HTBA46: \"glitzkoin.com\",\n  GDYNTGXBDWARLJ34GRQ4ON4EGBXSTPR5LEDTD5LLOOHPS6EZU6QXIIYO: \"goodx.network\",\n  GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO: \"gopax.co.kr\",\n  GA6KR5DMGJ6OPPG4OONB65JPU3TZE2CWCLKTBV4DHXFA2Z4XKWQSVCTC: \"heir.io\",\n  GB2X6RCO2VAXOD7GXE5VJWXOUTYDKPHIAHJSM2CGZJXKZSIHREEP4654: \"heir.io\",\n  GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S: \"indodax.com\",\n  GCNSGHUCG5VMGLT5RIYYZSO7VQULQKAJ62QA33DBC5PPBSO57LFWVV6P: \"interstellar.exchange\",\n  GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL: \"irene.energy\",\n  GANZBUS4726LBT2CBJ3BGF3TP4NJT5MHZMI423NHMXFRWGO2DCBQEXYZ: \"jetmint.org\",\n  GD4T35DMXYDE7BJWYPUWK43VFJO5IBUQYG2YGMICPTWP4JTNWQELKAVA: \"kava.world\",\n  GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP: \"koinex.in\",\n  GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM: \"kraken.com\",\n  GC3L2FLR2QMUSOJ6QMQHKIWUKEXGOXSIN2KY72SDUHPC2KO6HOSQIXIF: \"levelg.net\",\n  GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX: \"liquido.cc\",\n  GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT: \"lumenaut.net\",\n  GBVB43NLVIP2USHXSKI7QQCZKZU2Z6U6A5PAHMIW7LLNVMQJTOX2BZI5: \"luxpayband.io\",\n  GDTEQF6YGCKLIBD37RJZE5GTL3ZY6CBQIKH7COAW654SYEBE6XJJOLOW: \"luxpayband.io\",\n  GD2YURFWC5LIRLM4CCVZZHCFV6WXO46VOSBBPTJG6MPQN6ANYZZOLQJL: \"martialartscoin.io\",\n  GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH: \"mobius.network\",\n  GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK: \"moni.com\",\n  GB56YLTH5SDOYTUGPWY5MXJ7VQTY7BEM2YVJZTN5O555VA6DJYCTY2MP: \"moonpool.space\",\n  GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH: \"naobtc.com\",\n  GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS: \"naobtc.com\",\n  GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES: \"naobtc.com\",\n  GD6RMKTCHQGEOGYWIKSY5G7QWXPZOAEZIKPKEVZUAXOQCZRVBRRFGLJM: \"nydro.energy\",\n  GDNXSZSF7HIGVRL2LG6VWXN5PWV3KHI77DQTHLLPKNPLUZFKRRDQJBXP: \"nydro.energy\",\n  GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB: \"okex.com\",\n  GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6: \"old.repocoin.io\",\n  GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN: \"old.sureremit.co\",\n  GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW: \"papayabot.com\",\n  GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L: \"papayabot.com\",\n  GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY: \"pedity.com\",\n  GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW: \"piiko.co\",\n  GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2: \"poloniex.com\",\n  GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5: \"pr.network\",\n  GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B: \"repocoin.io\",\n  GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX: \"ripplefox.com\",\n  GCLDH6L6FBLTD3H3B23D6TIFVVTFBLZMNBC3ZOI6FGI5GPQROL4FOXIN: \"ripplefox.com\",\n  GB2WB73G5IWRXEUTJANAIF52JFTDXOXORAP4S5HZRW23TZG2ONDVZMVA: \"scopuly.com\",\n  GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z: \"six.network\",\n  GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP: \"smartlands.io\",\n  GAIGG2ICK2ATV7VUQC6MZHOSMRMFJK3T65IVNUZ7EJEEAU5UJQPPDIST: \"steemanchor.com\",\n  GB3KBOFUCVTWEZ7YIZ7PAKLQMKPCTGWU3LOMANMCT7V6I3AAK4USTEEM: \"steemanchor.com\",\n  GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD: \"stellarguard.me\",\n  GA6D2S6XDBT7WZIZNDGUBLXUGDAGLZGZ2SYT2JLXD4BB2W76XS66FZ2S: \"stellar.org\",\n  GAENIE5LBJIXLMJIAJ7225IUPA6CX7EGHUXRX5FLCZFFAQSG2ZUYSWFK: \"stellar.org\",\n  GANOI26P6VAUL4NFVA4FAIOIBOR46NORONBIWUPRIGAMP7T5W5MOY4O6: \"stellar.org\",\n  GAX3BRBNB5WTJ2GNEFFH7A4CZKT2FORYABDDBZR5FIIT3P7FLS2EFOZZ: \"stellar.org\",\n  GAYOCVRRNXGQWREOZBDP4UEW475NKZKLA4EIEIBKBSJN2PQQWUQ5KGUH: \"stellar.org\",\n  GB6NVEN5HSUBKMYCE5ZOWSK5K23TBWRUQLZY3KNMXUZ3AQ2ESC4MY4AQ: \"stellar.org\",\n  GBEZOC5U4TVH7ZY5N3FLYHTCZSI6VFGTULG7PBITLF5ZEBPJXFT46YZM: \"stellar.org\",\n  GBVVWWN4YP76FKGO7RB42FSZDYD2PBXY2PJY3F6JJWLYU74TKUG775UP: \"stellar.org\",\n  GCO4EFT6KUOQKVZO2O4GR5CJKMARBORXRE7KAKH36ZFAX662ZHINQ6UA: \"stellar.org\",\n  GDKIJJIKXLOM2NRMPNQZUUYK24ZPVFC6426GZAEP3KUK6KEJLACCWNMX: \"stellar.org\",\n  GDTNE54IWDB3UQLMIUSBKIDTMUW7FNKBU4VB2GVW4OL65BZN7W5VRNVY: \"stellar.org\",\n  GDUY7J7A33TQWOSOQGDO776GGLM3UQERL4J3SPT56F6YS4ID7MLDERI4: \"stellar.org\",\n  GDWNY2POLGK65VVKIH5KQSH7VWLKRTQ5M6ADLJAYC2UEHEBEARCZJWWI: \"stellar.org\",\n  GA5Z7QOQFSNIFFRZ3CDHLOWRPBWHPX5EGCTKT5KXU2CGJD7EIK2ZMALP: \"stellarpay.org\",\n  GAMA33LC7FK5RF4XE5HOVX456GX4VHDZUCJ7APY4TZ4IHG65ZWVXD333: \"stellarpay.org\",\n  GAYYPNEDENPNDNVPQD7U54JXMZZYTZAHWJLRRWBLP5PU6PBRSLH7LKNA: \"stellarpay.org\",\n  GBNWX7R4WVOWEYVKWN7KJ773X6C7OKNIGMVVDQI4B7XXMR6Y4OCUTBX2: \"stellarpay.org\",\n  GCAIDZBFE3WEIZSXQONQKUUTG6VLVKG2BBJYGWKEHQ2FZZ76VR326WYW: \"stellarpay.org\",\n  GCE3XS3D2F2W5LQWZHLG25ANAFIQOVMORH46JHVXOMW3FN27IPVJEGGG: \"stellarpay.org\",\n  GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5: \"stellarport.io\",\n  GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW: \"stellarterm.com\",\n  GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M: \"stemchain.io\",\n  GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG: \"stronghold.co\",\n  GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK: \"stronghold.co\",\n  GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI: \"superlumen.org\",\n  GCZYLNGU4CA5NAWBAVTHMZH4JXWKP2OUJ6OK3I7XXZCNA5622WUJVLTG: \"sureremit.co\",\n  GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N: \"sureremit.co\",\n  GCTXRQIYWEDP6G7OXZI6IXUSIXHHSN5NKYRB3NI5J4Z7G5JMIBHLLBTC: \"tamm.fund\",\n  GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S: \"tempo.eu.com\",\n  GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C: \"ternio.io\",\n  GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3: \"thefutbolcoin.io\",\n  GDSVWEA7XV6M5XNLODVTPCGMAJTNBLZBXOFNQD3BNPNYALEYBNT6CE2V: \"thewwallet.com\",\n  GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON: \"tontinetrust.com\",\n  GAKRDXBHA2TTOYJZQIAQ7ZDS555P24RAYRUUZWU3KHSLIOZMVV4IITXT: \"traxalt.com\",\n  GAW4E6NGM4NPNX2LO2BKDPCCTUX3FJLKWHPU4VQPGBIBQGD6JTVF5C7C: \"upbit.com\",\n  GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN: \"winsome.gift\",\n  GBOFQCVZF2DSFLJPJMKH7CIECCN7TYVAT2CSD73IVEBJJQU2VW6JNFHT: \"wirexapp.com\",\n  GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM: \"ximcoin.com\",\n  GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5: \"xirkle.com\",\n  GA3FUYFOPWZ25YXTCA73RK2UGONHCO27OHQRSGV3VCE67UEPEFEDCOPA: \"xlmpool.com\",\n  GDSRCV5VTM3U7Y3L6DFRP3PEGBNQMGOWSRTGSBWX6Z3H6C7JHRI4XFJP: \"x.token.io\"\n};","\"use_strict\";\n/**\n * Nice formating of numbers.\n *\n * @example\n * nice(35)                     // => 35.00\n * nice(35, 4)                  // => 35.0000\n * nice(35, { significant: 2})  // => 35\n * nice(35, { min: 3 })         // => 35.000\n * nice(35, { max: 1 })         // => 35.0\n *\n * @param  {String|Number} value The value to format\n * @param  {Number} [precision] Short form for `options.precision`\n * @param  {Object} [options]\n * @param  {Number} [options.precision=null] How much digit after the dot.\n *     Override options.significant.\n * @param  {Number} [options.significant=4] How much significant numbers (+/-\n *     one).\n * @param  {Number} [options.min=null] Minimum number of digits after the dot.\n * @param  {Number} [options.max=null] Maximum number of digits after the dot.\n * @return {String} The formatted value\n */\n\nmodule.exports = function (value) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof opts === \"number\") opts = {\n    precision: opts\n  };\n  if (value === undefined || isNaN(value)) return \"...\";else if (value == 0) return 0;\n  var precision = opts.precision || precisionAuto(Number(value), opts);\n  if (opts.min) precision = Math.max(opts.min, precision);\n  if (opts.max) precision = Math.min(opts.max, precision);\n  return Number(value).toFixed(precision);\n};\n\nfunction precisionAuto(value, opts) {\n  if (!opts.significant) opts.significant = 4;\n  var precision = 0;\n  var str = String(value);\n  var firstNonZero = str.search(/[^0.]/);\n\n  if (firstNonZero) {\n    precision = firstNonZero + opts.significant - 2;\n  } else {\n    var pointIndex = str.indexOf(\".\");\n\n    if (pointIndex === -1) {\n      precision = opts.significant - str.length;\n    } else if (pointIndex < opts.significant) {\n      precision = opts.significant - pointIndex;\n    }\n  }\n\n  if (precision) precision = Math.round(precision / 2) * 2;\n  return precision > 0 ? precision : 0;\n}","\"use_strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar html = env.isBrowser && require(\"@cosmic-plus/domutils/es5/html\");\n\nvar action = require(\"./action\");\n\nvar config = require(\"./config\");\n\nvar convert = require(\"./convert\");\n\nvar format = env.isBrowser && require(\"./format\");\n\nvar parse = require(\"./parse\");\n\nvar resolve = require(\"./resolve\");\n\nvar status = require(\"./status\");\n/**\n * | Formats                                     | Data                                | Actions                                        | Editor                                       | HTML elements\n * |---------------------------------------------|-------------------------------------|------------------------------------------------|----------------------------------------------|----------------------------------------\n * |-----------------------|-----------------------|-----------------------|-----------------------|-----------------------\n * | [uri]{@link CosmicLink#uri}                 |[page]{@link CosmicLink#page}        |[selectNetwork]{@link CosmicLink#selectNetwork} |[parse]{@link CosmicLink#parse}               |[htmlDescription]{@link CosmicLink#htmlDescription}\n * | [query]{@link CosmicLink#query}             |[network]{@link CosmicLink#network}  |await [lock]{@link CosmicLink#lock}             |[setTxFields]{@link CosmicLink#setTxFields}   |[htmlLink]{@link CosmicLink#htmlLink}\n * | [tdesc]{@link CosmicLink#tdesc}             |[horizon]{@link CosmicLink#horizon}  |[sign]{@link CosmicLink#sign}                   |[addOperation]{@link CosmicLink#addOperation} |\n * | [json]{@link CosmicLink#json}               |[callback]{@link CosmicLink#callback}|await [send]{@link CosmicLink#send}             |[setOperation]{@link CosmicLink#setOperation}\n * | [transaction]{@link CosmicLink#transaction} |[source]{@link CosmicLink#source}    |\n * | [xdr]{@link CosmicLink#xdr}                 |[status]{@link CosmicLink#status}    |\n * | [sep7]{@link CosmicLink#sep7}               |[errors]{@link CosmicLink#errors}    |\n * |                                             |[locker]{@link CosmicLink#locker}\n * |                                             |[cache]{@link CosmicLink#cache}\n * -----\n *\n * The **CosmicLink** class represents Stellar\n * [transactions]{@link https://stellar.org/developers/guides/concepts/transactions.html}\n * encoded in various formats. It allows to convert between those formats, to\n * edit the underlying transaction, to build it, to sign it and to send it to\n * the blockchain.\n *\n * There are 3 main formats from which the other are derived:\n *\n * * The StellarSdk [Transaction]{@link {@link https://stellar.github.io/js-stellar-sdk/Transaction.html}} object. (**transaction**)\n * * The CosmicLink, which is a transaction encoded as a query. (**query**)\n * * The Tdesc, which is an internal JSON-compatible format in-between those two.\n *   It is the easier format to work with. (**tdesc**)\n *\n * Those formats can be derived into other related formats:\n *\n * * The XDR, which's a base64 representation of StellarSdk Transaction. (**xdr**)\n * * The Sep-0007 link, in its XDR form. (**sep7**)\n * * The CosmicLink URL/URI, which is a page plus the query. (**uri**)\n * * The Tdesc JSON, which is its stringified version. (**json**)\n *\n * A CosmicLink object can be created from any of those formats. Some of the\n * other formats are immediately available, while others may need an\n * `await cosmicLink.lock()` operation to become computable:\n *\n * * If you create a CosmicLink from an **uri**, a **query**, a **tdesc** or a\n *   **json**, only those 4 formats are available at first. Transaction, xdr &\n *   sep7 will become available after a `cosmicLink.lock()`. (**free formats**)\n * * If you create a CosmicLink from a **transaction**, an **xdr** or a **sep7**,\n *   all formats will immediately be available. (**locked formats**)\n *\n * For a better efficiency, formats are lazy-evaluated. This means that they are\n * computed once only if/when you call them:\n *\n * ```js\n * const cosmicLink = new CosmicLink(xdr, { network: 'test' })\n * console.log(cosmicLink.query)\n * ```\n *\n * The role of `cosmicLink.lock()` is centric to this class. In practice, the\n * free formats don't have to be tied to a **network**, a **source** or a\n * **sequence number**. For example, the CosmicQuery `?inflation` is a valid\n * generic transaction that can be locked to any network/source/sequence\n * combination.\n *\n * On the other hand, locked formats are always tied to a particular combination\n * of those, hence the need for a **lock** command:\n *\n * ```js\n * const cosmicLib = require('cosmic-lib')\n * cosmicLib.network = 'test'\n * cosmicLib.source = 'tips*cosmic.link'\n *\n * const cosmicLink = new cosmicLib.CosmicLink('?inflation')\n *\n * console.log(cosmicLink.tdesc.source)    // => undefined\n * console.log(cosmicLink.tdesc.network)   // => undefined\n * console.log(cosmicLink.tdesc.sequence)  // => undefined\n * console.log(cosmicLink.xdr)             // => undefined\n *\n * await cosmicLink.lock({)\n *\n * console.log(cosmicLink.tdesc.source)    // => 'GC6Z...2JVW'\n * console.log(cosmicLink.tdesc.network)   // => 'test'\n * console.log(cosmicLink.tdesc.sequence)  // => 29...3903\n * console.log(cosmicLink.xdr)             // => 'AAAA....AA=='\n * ```\n *\n * The **lock** command is asynchronous because free formats accept\n * [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html},\n * but locked formats don't. The library automatically resolve\n * those and this is an asynchronous operation. At the same time, it downloads\n * the required data from the blockchain to handle multi-signers transactions.\n *\n * After the lock operation, all free formats are updated according to the new\n * state of the transaction. It is now possible to `cosmicLink.sign(keypair)`\n * it, and to `cosmicLink.send()` it to the blockchain.\n */\n\n\nvar CosmicLink =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   * Create a new CosmicLink object. **transaction** can be one of the accepted\n   * format: uri, query, json, tdesc, transaction, xdr or sep7.\n   *\n   * @constructor\n   * @param {string|Object|Transaction} transaction A transaction in one of\n   *  thoses formats: uri, query, json, tdesc, transaction, xdr, sep7\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format.\n   * @param {string} options.network For Transaction/XDR formats, the network for\n   *     which it have been created\n   * @param {boolean} options.stripSignatures If set, will strip out signatures\n   *     from XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set, will strip out signatures\n   *     and sequence number from XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set, will strip out signatures,\n   *     sequence number and transaction primary source account from\n   *     XDR/Transaction formats.\n   * @return {CosmicLink}\n   */\n  function CosmicLink(transaction, options) {\n    _classCallCheck(this, CosmicLink);\n\n    initCosmicLink(this, transaction, options);\n  }\n  /**\n   * Refer to the underlying global configuration\n   * @private\n   */\n\n\n  _createClass(CosmicLink, [{\n    key: \"parse\",\n\n    /**\n     * Re-parse this CosmicLink. Useful in implementing transaction editors. The\n     * parameters are the same than [Constructor]{@link CosmicLink#Constructor},\n     * and the result is similar except that no new CosmicLink object is created.\n     */\n    value: function parse(transaction, options) {\n      initCosmicLink(this, transaction, options);\n    } /// Formats\n\n    /**\n     * A CosmicLink is a URI that embed a Cosmic [Query]{@link CosmicLink#query}.\n     * This format is simply the `cosmicLink.query` appended to the\n     * `cosmicLink.page`\n     */\n\n  }, {\n    key: \"setTxFields\",\n    /// Editor\n\n    /**\n     * Add/remove transaction fields and reparse the CosmicLink. **object** should\n     * follow the Tdesc format, but fields values can be written using query or\n     * StellarSdk format as well.\n     *\n     * @example\n     * cosmicLink.setTxFields({ minTime: '2018-10', maxTime: '2019-01' })\n     *\n     * @example\n     * cosmicLink.setTxFields({ minTime: null, maxTime: null })\n     *\n     * @example\n     * cosmicLink.setTxFields({ memo: 'Bonjour!' })\n     *\n     * @param {Object} object Transaction fields definition. Fields can be either\n     *   written using the JSON format or the query format\n     * @return {CosmicLink}\n     */\n    value: function setTxFields(object) {\n      checkLock(this);\n      this.parse(Object.assign(this.tdesc, object));\n      return this;\n    }\n    /**\n     * Add a new operation to CosmicLink. **params** should follow the Tdesc format,\n     * but fields values can be written using query or StellarSdk format as well.\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: 'CNY:admin*ripplefox' })\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: { code: 'CNY', issuer: 'admin*ripplefox } })\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: new StellarSdk.Asset('CNY', ...) })\n     *\n     * @param {string} type The operation type.\n     * @param {Object} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"addOperation\",\n    value: function addOperation(type, params) {\n      checkLock(this);\n      var odesc = Object.assign({\n        type: type\n      }, params);\n      this.tdesc.operations.push(odesc);\n      this.parse(this.tdesc);\n      return this;\n    }\n    /**\n     * Set/remove one of the CosmicLink operations. **params** should follow the\n     * Tdesc format, but fields can be written using query or StellarSdk format\n     * as well. If **type** is set to `null`, the operation at **index**\n     * is deleted.\n     *\n     * @example\n     * cosmicLink.setOperation(1, 'setOptions', { homeDomain: 'example.org' })\n     *\n     * @example\n     * cosmicLink.setOperation(2, null)\n     *\n     * @param {integer} index The operation index.\n     * @param {type} type  The operation type.\n     * @param {params} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"setOperation\",\n    value: function setOperation(index, type, params) {\n      checkLock(this);\n\n      if (!this.tdesc.operations[index]) {\n        throw new Error(\"Operation \".concat(index, \" doesn't exists\"));\n      }\n\n      if (type === null) {\n        this.tdesc.operations.splice(index, 1);\n      } else {\n        this.tdesc.operations[index] = Object.assign({\n          type: type\n        }, params);\n        this.parse(this.tdesc);\n      }\n\n      return this;\n    } /// Actions\n\n    /**\n     * Select the network that this CosmicLink uses.\n     */\n\n  }, {\n    key: \"selectNetwork\",\n    value: function selectNetwork() {\n      return resolve.useNetwork(this);\n    }\n  }, {\n    key: \"lock\",\n    value: function lock(options) {\n      return action.lock(this, options);\n    }\n  }, {\n    key: \"sign\",\n    value: function sign() {\n      for (var _len = arguments.length, keypairs_or_preimage = new Array(_len), _key = 0; _key < _len; _key++) {\n        keypairs_or_preimage[_key] = arguments[_key];\n      }\n\n      return action.sign.apply(action, [this].concat(keypairs_or_preimage));\n    }\n  }, {\n    key: \"send\",\n    value: function send(horizon) {\n      return action.send(this, horizon);\n    }\n    /**\n     * The HTML DOM node that displays a description of the current transaction.\n     * This is a browser-only property.\n     *\n     * If your HTML page contains an element with `id=\"cosmiclink_description\"`,\n     * it will automatically get populated with the description of the last\n     * CosmicLink created.\n     */\n\n  }, {\n    key: \"hasSigned\",\n    value: function hasSigned(accountId) {\n      misc.deprecated(\"2019-03\", \"cosmicLink.hasSigned\", \"cosmicLink.transaction.hasSigned\");\n      return this.transaction.hasSigned(accountId);\n    }\n  }, {\n    key: \"hasSigner\",\n    value: function hasSigner(accountId) {\n      misc.deprecated(\"2019-03\", \"cosmicLink.hasSigner\", \"cosmicLink.transaction.hasSigner\");\n      return this.transaction.hasSigner(accountId);\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      return this.__proto__.__proto__;\n    }\n  }, {\n    key: \"uri\",\n    get: function get() {\n      if (this.query) return this.page + this.query;else return undefined;\n    }\n    /**\n     * CosmicLink's transaction encoded in the Cosmic\n     * [Query]{@link tutorial:specs_query} format. This format allows to\n     * conveniently pass around Stellar transactions over any URI.\n     */\n\n  }, {\n    key: \"query\",\n    get: function get() {\n      if (!this._query) {\n        if (this.xdr) this._query = convert.xdrToQuery(this, this.xdr, this.tdesc);else if (this.tdesc) this._query = convert.tdescToQuery(this, this.tdesc);else return undefined;\n      }\n\n      return this._query;\n    }\n    /**\n     * CosmicLink's transaction in Tdesc format. This is in-between an objectified\n     * query representation and a simplified StellarSdk Transaction object. It has\n     * been created to be convenient to understand, use and manipulate.\n     *\n     * If you need to read the transaction parameters, this is the format of\n     * choice:\n     *\n     * ```js\n     * console.log(cosmicLink.tdesc.network) // Does the transaction enforce a network?\n     * console.log(cosmicLink.tdesc.source)  // Does the transaction enforce a source?\n     * console.log(cosmicLink.tdesc.memo)    // A simplified memo object or undefined\n     * console.log(cosmicLink.operations)    // Transaction operations in simplified format\n     * ```\n     *\n     * This formats authorize [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html}\n     * everywhere StellarSdk Transaction accept public keys. Those addresses are\n     * resolved when running the [lock]{@link CosmicLink#lock} method, and the\n     * tdesc is replaced by a resolved one.\n     *\n     * Tdesc is also very convenient to edit. To keep the CosmicLink in sync, you\n     * either need to [parse]{@link CosmicLink#parse} the edited tdesc, or to edit\n     * it using the dedicated methods:\n     *\n     * * [setTxFields]{@link CosmicLink#setTxFields}: set/clear transaction fields\n     * * [addOperation]{@link CosmicLink#addOperation}: add a new operation\n     * * [setOperation]{@link CosmicLink#setOperation}: edit/clear an operation\n     */\n\n  }, {\n    key: \"tdesc\",\n    get: function get() {\n      if (!this._tdesc) {\n        if (this.transaction) this._tdesc = convert.transactionToTdesc(this, this.transaction, this.locker);else return undefined;\n      }\n\n      return this._tdesc;\n    }\n    /**\n     * CosmicLink's transaction in JSON format. This is a stringified version of\n     * [Tdesc]{@link CosmicLink#tdesc} format.\n     */\n\n  }, {\n    key: \"json\",\n    get: function get() {\n      if (!this._json) this._json = convert.tdescToJson(this, this.tdesc);\n      return this._json;\n    }\n    /**\n     * CosmicLink's transaction in StellarSdk\n     * [Transaction]{@link https://stellar.github.io/js-stellar-sdk/Transaction.html}\n     * format.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"transaction\",\n    get: function get() {\n      return this._transaction;\n    }\n    /**\n     * CosmicLink's transaction in\n     * [XDR]{@link https://stellar.org/developers/guides/concepts/xdr.html}\n     * format.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"xdr\",\n    get: function get() {\n      if (!this._xdr) {\n        if (!this.transaction) return undefined;\n        this._xdr = convert.transactionToXdr(this, this.transaction);\n      }\n\n      return this._xdr;\n    }\n    /**\n     * CosmicLink transaction in\n     * [SEP-0007]{@link https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md}\n     * link format. Only the XDR part of this protocol is currently supported by\n     * CosmicLink, minus the signature verification.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"sep7\",\n    get: function get() {\n      if (!this._sep7) {\n        if (!this.xdr) return undefined;\n        this._sep7 = convert.xdrToSep7(this, this.xdr, this.tdesc);\n      }\n\n      return this._sep7;\n    } /// Data\n\n    /**\n     * The page this CosmicLink uses to construct its [URI]{@link CosmicLink#uri}.\n     *\n     * @var CosmicLink#page\n     */\n\n    /**\n     * The source for this transaction. This can be defined either locally\n     * (`cosmicLink.tdesc.source`) or globally (`cosmicLib.config.source`). The\n     * local configuration takes precedence, or, in other words, the global source\n     * is a fallback value in case the transaction emitter doesn't set one.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"source\",\n    get: function get() {\n      return this.tdesc && this.tdesc.source || this.config.source;\n    }\n    /**\n     * The network for this transaction. This can be defined either locally\n     * (`cosmicLink.tdesc.network`) or globally (`cosmicLib.config.network`). The\n     * local configuration takes precedence, or, in other words, the global\n     * network is a fallback value in case the transaction emitter doesn't set\n     * one.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"network\",\n    get: function get() {\n      return this.tdesc && this.tdesc.network || this.config.network;\n    }\n    /**\n     * The URL of the horizon node from which ledger data will be retrieved, and\n     * to which the signed transaction will be posted if there's no\n     * [callback]{@link CosmicLink#callback}.\n     *\n     * This can be defined either locally (`cosmicLink.tdesc.horizon`) or globally\n     * (using [setupNetwork]{@link module:config.setupNetwork}). This parameter is\n     * special in the sense that it's the only one for which the global\n     * configuration takes precedence.\n     *\n     * The rationale for this behavior is that we want transaction emitter to\n     * provide a fallback Horizon URL in the special case none is known for a\n     * custom network, but generally speaking it won't be right to allow the\n     * transaction emitter to force us to use a particular Horizon node.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"horizon\",\n    get: function get() {\n      return resolve.horizon(this.config, this.network) || this.tdesc && this.tdesc.horizon;\n    }\n    /**\n     * The URL at which the signed transaction will be posted. This can be defined\n     * either locally (`cosmicLink.tdesc.callback`) or globally\n     * (`cosmicLib.config.callback`). The local configuration takes precedence.\n     *\n     * When no callback is defined, the signed transaction is posted to\n     * [Horizon]{@link CosmicLink#horizon}. This is the default behavior.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"callback\",\n    get: function get() {\n      return this.tdesc && this.tdesc.callback || this.config.callback;\n    }\n  }, {\n    key: \"htmlDescription\",\n    get: function get() {\n      if (!this._htmlDescription) makeHtmlDescription(this);\n      return this._htmlDescription;\n    }\n    /**\n     * A link HTML Element that points to `cosmicLink.uri`\n     */\n\n  }, {\n    key: \"htmlLink\",\n    get: function get() {\n      if (!this._htmlLink) makeHtmlLink(this);\n      return this._htmlLink;\n    } /// Backward compatibility (2018-09 -> 2019-03).\n\n  }, {\n    key: \"server\",\n    get: function get() {\n      return resolve.server(this);\n    }\n  }, {\n    key: \"htmlNode\",\n    get: function get() {\n      misc.deprecated(\"2019-03\", \"cosmicLink.htmlNode\", \"cosmicLink.htmlDescription\");\n      return this.htmlDescription;\n    }\n  }, {\n    key: \"transactionNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_transactionNode\", this.htmlDescription);\n    }\n  }, {\n    key: \"statusNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_statusNode\", this.htmlDescription);\n    }\n  }, {\n    key: \"signersNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_signersNode\", this.htmlDescription);\n    }\n  }]);\n\n  return CosmicLink;\n}();\n/**\n * Initialize or reset a CosmicLink.\n *\n * @private\n */\n\n\nfunction initCosmicLink(cosmicLink, transaction) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  checkLock(cosmicLink); /// Reset object in case of reparse.\n\n  formatsFields.forEach(function (type) {\n    return delete cosmicLink[type];\n  });\n  cosmicLink.page = cosmicLink.page || options.page || config.page;\n  /**\n   * The status of a CosmicLink. It becomes non-null in case of failure.\n   * @var CosmicLink#status\n   */\n\n  /**\n   * By default `false`, or an *Array* of errors.\n   * @var CosmicLink#errors\n   */\n\n  status.init(cosmicLink);\n  /**\n   * The CosmicLink cache contains the resolved federations addresses and the\n   * accounts object. Using the same set of data for all the CosmicLink related\n   * computations ensure consistent results.\n   *\n   * @var CosmicLink#cache\n   */\n\n  cosmicLink.cache = {\n    destination: {},\n    account: {}\n  };\n  parse.dispatch(cosmicLink, transaction, options);\n\n  if (env.isBrowser) {\n    makeHtmlLink(cosmicLink);\n\n    if (!cosmicLink._htmlDescription) {\n      /// #cosmiclib_htmlNode: Backward compatibility (2018-09 -> 2019-03).\n      cosmicLink._htmlDescription = html.grab(\"#cosmiclink_description\") || html.grab(\"#CL_htmlNode\");\n    }\n\n    if (cosmicLink._htmlDescription) {\n      if (cosmicLink.htmlDescription.id === \"#CL_htmlNode\") {\n        misc.deprecated(\"2019-03\", \"id=\\\"#CL_htmlNode\\\"\", \"id=\\\"cosmiclink_description\\\"\");\n      }\n\n      makeHtmlDescription(cosmicLink);\n    }\n  }\n}\n\nvar formatsFields = [\"_query\", \"_tdesc\", \"_json\", \"_transaction\", \"_xdr\"];\n/**\n * Initialize CosmicLink html nodes.\n *\n * @private\n */\n\nfunction makeHtmlDescription(cosmicLink) {\n  if (env.isNode) return;\n  var htmlDescription = cosmicLink._htmlDescription;\n\n  if (htmlDescription) {\n    html.clear(htmlDescription);\n    htmlDescription.className = \"cosmiclink_description\";\n  } else {\n    htmlDescription = html.create(\"div\", \".cosmiclink_description\");\n    cosmicLink._htmlDescription = htmlDescription;\n  }\n\n  cosmicLink._transactionNode = format.tdesc(cosmicLink, cosmicLink.tdesc);\n  cosmicLink._statusNode = status.makeHtmlNode(cosmicLink);\n  cosmicLink._signersNode = html.create(\"div\", \".cosmiclib_signersNode\");\n  html.append(htmlDescription, cosmicLink._transactionNode, cosmicLink._statusNode, cosmicLink._signersNode);\n}\n/**\n * Make the HTML link.\n * @private\n */\n\n\nfunction makeHtmlLink(cosmicLink) {\n  if (env.isNode) return;\n  var htmlLink = html.grab(\"#cosmiclink\") || html.create(\"a\");\n  htmlLink.className = \".cosmiclink\";\n  htmlLink.href = cosmicLink.page;\n\n  htmlLink.onclick = function () {\n    return htmlLink.href = cosmicLink.uri;\n  };\n\n  if (!htmlLink.title) htmlLink.title = \"Sign transaction\";\n  if (!htmlLink.textContent) htmlLink.textContent = \"CosmicLink\";\n  cosmicLink._htmlLink = htmlLink;\n  return htmlLink;\n}\n/**\n * Throw an error if CosmicLink is locked.\n * @private\n */\n\n\nfunction checkLock(cosmicLink) {\n  if (cosmicLink.locker) throw new Error(\"Cosmic link is locked.\");\n}\n\nCosmicLink.prototype.__proto__ = config;\nmodule.exports = CosmicLink;","\"use strict\";\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n * @exports action\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar action = exports;\n\nvar axios = require(\"@cosmic-plus/base/es5/axios\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar convert = require(\"./convert\");\n\nvar format = env.isBrowser && require(\"./format\");\n\nvar resolve = require(\"./resolve\");\n\nvar signersUtils = require(\"./signers-utils\");\n\nvar status = require(\"./status\");\n/**\n * Lock a CosmicLink to a network/source pair. If the cosmicLink was created\n * from a query/uri/tdesc/json, it will create the corresponding\n * transaction/xdr/sep7 formats.\n *\n * This operation must be performed by the wallet before signing & sending the\n * transaction.\n *\n * @example\n * cosmicLib.config.network = \"test\"\n * const cosmicLink = new CosmicLink(\"?setOptions\")\n * console.log(cosmicLink.network) // => undefined\n * console.log(cosmicLink.xdr)     // => undefined\n * await cosmicLink.lock()\n * console.log(cosmicLink.network) // => \"test\"\n * console.log(cosmicLink.xdr)     // => \"AAAA...AA==\"\n *\n *\n * @alias CosmicLink#lock\n * @async\n * @param {Object} [options]\n * @param {string} options.network Local fallback network\n * @param {string} options.horizon Local fallback horizon (overwrited by global configuration)\n * @param {string} options.callback Local fallback callback\n * @param {string} options.source Local fallback source\n */\n\n\naction.lock =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(cosmicLink) {\n    var options,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            if (!cosmicLink.status) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(cosmicLink.status);\n\n          case 3:\n            if (!cosmicLink.locker) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"CosmicLink is already locked.\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return applyLock(cosmicLink, options);\n\n          case 8:\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](5);\n\n            if (!cosmicLink.errors) {\n              console.error(_context.t0);\n              status.error(cosmicLink, _context.t0.message);\n            }\n\n            status.fail(cosmicLink, \"Transaction build failed\", \"throw\");\n\n          case 14:\n            updateSignersNode(cosmicLink);\n            return _context.abrupt(\"return\", cosmicLink);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 10]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction applyLock(_x2, _x3) {\n  return _applyLock.apply(this, arguments);\n}\n/**\n * Sign CosmicLink's Transaction with **keypairs_or_preimage** and update the\n * other formats accordingly. Only legit signers are allowed to sign, and a\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before signing.\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|Buffer|string} ...keypairs_or_preimage\n */\n\n\nfunction _applyLock() {\n  _applyLock = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(cosmicLink, options) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            /**\n             * The locker property tells that a CosmicLink have been locked, and exposes\n             * the network & source values to which it have been locked.\n             *\n             * @alias CosmicLink#locker\n             */\n            cosmicLink.locker = {\n              source: cosmicLink.tdesc.source || options.source || cosmicLink.config.source,\n              network: cosmicLink.tdesc.network || options.network || cosmicLink.config.network,\n              horizon: options.horizon || cosmicLink.horizon,\n              callback: cosmicLink.tdesc.callback || options.callback || cosmicLink.config.callback /// Preserve the underlying tdesc object.\n\n            };\n            cosmicLink._tdesc = Object.assign({}, cosmicLink.tdesc, cosmicLink.locker);\n            delete cosmicLink._query;\n            delete cosmicLink._json;\n\n            if (cosmicLink._transaction) {\n              _context4.next = 9;\n              break;\n            }\n\n            _context4.next = 7;\n            return convert.tdescToTransaction(cosmicLink, cosmicLink.tdesc);\n\n          case 7:\n            cosmicLink._transaction = _context4.sent;\n            delete cosmicLink._tdesc;\n\n          case 9:\n            delete cosmicLink._transaction._cosmicplus;\n            _context4.next = 12;\n            return signersUtils[\"extends\"](cosmicLink, cosmicLink._transaction);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _applyLock.apply(this, arguments);\n}\n\naction.sign =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(cosmicLink) {\n    var transaction,\n        allFine,\n        _len,\n        keypairsOrPreimage,\n        _key,\n        index,\n        keypair,\n        publicKey,\n        _short,\n        _short2,\n        _short3,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (cosmicLink.locker) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new Error(\"cosmicLink is not locked.\");\n\n          case 2:\n            resolve.useNetwork(cosmicLink);\n            transaction = cosmicLink.transaction;\n            allFine = true;\n\n            for (_len = _args2.length, keypairsOrPreimage = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              keypairsOrPreimage[_key - 1] = _args2[_key];\n            }\n\n            if (!(typeof keypairsOrPreimage[0] !== \"string\")) {\n              _context2.next = 34;\n              break;\n            }\n\n            _context2.t0 = _regeneratorRuntime.keys(keypairsOrPreimage);\n\n          case 8:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 32;\n              break;\n            }\n\n            index = _context2.t1.value;\n            keypair = keypairsOrPreimage[index];\n            publicKey = keypair.publicKey();\n\n            if (cosmicLink.transaction.hasSigner(publicKey)) {\n              _context2.next = 17;\n              break;\n            }\n\n            _short = misc.shorter(publicKey);\n            status.error(cosmicLink, \"Not a legit signer: \" + _short);\n            allFine = false;\n            return _context2.abrupt(\"continue\", 8);\n\n          case 17:\n            if (!cosmicLink.transaction.hasSigned(publicKey)) {\n              _context2.next = 19;\n              break;\n            }\n\n            return _context2.abrupt(\"continue\", 8);\n\n          case 19:\n            _context2.prev = 19;\n            transaction.sign(keypair);\n            _context2.next = 30;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t2 = _context2[\"catch\"](19);\n            console.error(_context2.t2);\n            _short2 = misc.shorter(publicKey);\n            status.error(cosmicLink, \"Failed to sign with key: \" + _short2);\n            allFine = false;\n            return _context2.abrupt(\"continue\", 8);\n\n          case 30:\n            _context2.next = 8;\n            break;\n\n          case 32:\n            _context2.next = 35;\n            break;\n\n          case 34:\n            try {\n              transaction.signHashX(keypairsOrPreimage[0]);\n            } catch (error) {\n              console.error(error);\n              _short3 = misc.shorter(keypairsOrPreimage[0]);\n              status.error(cosmicLink, \"Failed to sign with preimage: \" + _short3, \"throw\");\n            }\n\n          case 35:\n            /// Update other formats.\n            [\"_query\", \"_xdr\", \"_sep7\"].forEach(function (format) {\n              return delete cosmicLink[format];\n            });\n            updateSignersNode(cosmicLink);\n\n            if (allFine) {\n              _context2.next = 41;\n              break;\n            }\n\n            throw new Error(\"Some signers where invalid\");\n\n          case 41:\n            return _context2.abrupt(\"return\", transaction);\n\n          case 42:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[19, 23]]);\n  }));\n\n  return function (_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction updateSignersNode(cosmicLink) {\n  if (cosmicLink._signersNode) {\n    var signersNode = format.signatures(cosmicLink, cosmicLink._transaction);\n    cosmicLink.htmlDescription.replaceChild(signersNode, cosmicLink._signersNode);\n    cosmicLink._signersNode = signersNode;\n  }\n}\n/**\n * Send CosmicLink's transaction to a blockchain validator, or to\n * [StellarGuard]{@link https://stellarguard.me} when relevant. A\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before sending.\n *\n * Returns a promise that resolve/reject to the horizon server response.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {horizon} [horizon] An horizon node URL\n * @return {Object} The server response\n */\n\n\naction.send =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(cosmicLink) {\n    var horizon,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            horizon = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : cosmicLink.horizon;\n\n            if (cosmicLink.locker) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new Error(\"cosmicLink is not locked.\");\n\n          case 3:\n            _context3.prev = 3;\n\n            if (!cosmicLink.transaction.hasSigner(STELLARGUARD_PUBKEY)) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 7;\n            return sendToStellarGuard(cosmicLink);\n\n          case 7:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 10:\n            if (!cosmicLink.callback) {\n              _context3.next = 16;\n              break;\n            }\n\n            _context3.next = 13;\n            return axios.post(cosmicLink.callback, {\n              xdr: cosmicLink.xdr\n            });\n\n          case 13:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 16:\n            _context3.next = 18;\n            return sendToHorizon(cosmicLink, horizon);\n\n          case 18:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 19:\n            _context3.next = 25;\n            break;\n\n          case 21:\n            _context3.prev = 21;\n            _context3.t0 = _context3[\"catch\"](3);\n            if (_context3.t0.response) console.error(_context3.t0.message, _context3.t0.response);\n            throw _context3.t0;\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 21]]);\n  }));\n\n  return function (_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction sendToHorizon(_x6, _x7) {\n  return _sendToHorizon.apply(this, arguments);\n}\n\nfunction _sendToHorizon() {\n  _sendToHorizon = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(cosmicLink, horizon) {\n    var server;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            server = resolve.server(cosmicLink, horizon); // Keep connection alive until transaction gets validated or a non-504 error\n            // is returned. 504 error means the transaction is still following the\n            // validation process.\n            // eslint-disable-next-line no-constant-condition\n\n          case 1:\n            if (!true) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.prev = 2;\n            _context5.next = 5;\n            return server.submitTransaction(cosmicLink.transaction);\n\n          case 5:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](2);\n\n            if (!(_context5.t0.response.status !== 504)) {\n              _context5.next = 12;\n              break;\n            }\n\n            throw _context5.t0;\n\n          case 12:\n            _context5.next = 1;\n            break;\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 8]]);\n  }));\n  return _sendToHorizon.apply(this, arguments);\n}\n\nfunction sendToStellarGuard(cosmicLink) {\n  var url = cosmicLink.network === \"test\" ? \"https://test.stellarguard.me/api/transactions\" : \"https://stellarguard.me/api/transactions\";\n  return axios.post(url, {\n    xdr: cosmicLink.xdr,\n    callback: cosmicLink.callback\n  }).then(function (result) {\n    return result.data;\n  });\n}\n\nvar STELLARGUARD_PUBKEY = \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\";","\"use_stict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  module.exports = require(\"./stellar-sdk\").axios;\n} else {\n  module.exports = env.nodeRequire(\"axios\");\n}","\"use strict\";\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\n\nvar parse = exports;\n\nvar check = require(\"./check\");\n\nvar convert = require(\"./convert\");\n\nvar decode = require(\"./decode\");\n\nvar expand = require(\"./expand\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Sets cosmicLink page as the base path of `uri`.\n *\n * @param {string} page URI basename\n */\n\n\nparse.page = function (cosmicLink, uri) {\n  var page = uri.split(\"?\")[0];\n  if (page) cosmicLink.page = encodeURI(page);\n};\n/**\n * Call the right functions to setup cosmicLink depending on `options` and\n * `value` type.\n *\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\n\n\nparse.dispatch = function (cosmicLink) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"?\";\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  formats.forEach(function (format) {\n    return delete cosmicLink[format];\n  });\n  var type = guessType(value); // Strip out URL hash\n\n  switch (type) {\n    case \"uri\":\n    case \"query\":\n    case \"xdrUri\":\n    case \"sep7\":\n    case \"sep7Request\":\n      value = value.replace(/#.*$/, \"\");\n  } // Parse transaction\n\n\n  try {\n    if (parseFmt[type]) parseFmt[type](cosmicLink, value, options);else setTdesc(cosmicLink, type, value, options);\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error);\n      status.error(cosmicLink, error.message);\n    }\n\n    status.fail(cosmicLink, \"Invalid \" + type);\n    if (error.tdesc) cosmicLink._tdesc = error.tdesc;\n  }\n\n  if (options.page) parse.page(cosmicLink, options.page);\n};\n\nvar formats = [\"_query\", \"_json\", \"_tdesc\", \"_transaction\", \"_xdr\", \"_sep7\"];\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n */\n\nfunction guessType(value) {\n  var type;\n\n  if (typeof value === \"string\") {\n    var query = convert.uriToQuery(\"\", value);\n    if (value.substr(0, 12) === \"web+stellar:\") type = \"sep7\";else if (query && query.substr(0, 5) === \"?req=\") type = \"sep7Request\";else if (query && query.substr(0, 5) === \"?xdr=\") type = \"xdrUri\";else if (value.substr(0, 1) === \"?\") type = \"query\";else if (value.substr(0, 1) === \"{\") type = \"json\";else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = \"xdr\";else type = \"uri\";\n  } else {\n    if (value.tx) type = \"transaction\";else type = \"tdesc\";\n  }\n\n  return type;\n}\n/******************************************************************************/\n\n\nvar parseFmt = {};\n/**\n * Initialize cosmicLink using `xdrUri`.\n */\n\nparseFmt.xdrUri = function (cosmicLink, xdrUri, options) {\n  parse.page(cosmicLink, xdrUri);\n  var query = convert.uriToQuery(cosmicLink, xdrUri);\n  var temp = query.split(\"&\");\n  var xdr = temp[0].substr(5);\n  temp.slice(1).forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"stripSignatures\":\n        options.stripSignatures = true;\n        break;\n\n      case \"stripSequence\":\n        options.stripSequence = true;\n        break;\n\n      case \"stripSource\":\n        options.stripSource = true;\n        break;\n\n      case \"network\":\n        options.network = decode.network(cosmicLink, value);\n        break;\n\n      case \"horizon\":\n      case \"callback\":\n        options[field] = decode.url(cosmicLink, value);\n        break;\n\n      default:\n        status.error(cosmicLink, \"Unknow option: \" + entry);\n        status.fail(cosmicLink, \"Invalid query\");\n    }\n  });\n  setTdesc(cosmicLink, \"xdr\", xdr, options);\n};\n/**\n * Initialize cosmicLink using `sep7Request`.\n */\n\n\nparseFmt.sep7Request = function (cosmicLink, sep7Request, options) {\n  parse.page(cosmicLink, sep7Request);\n  var query = convert.uriToQuery(cosmicLink, sep7Request);\n  var sep7 = decodeURIComponent(query.substr(5));\n  parseFmt.sep7(cosmicLink, sep7, options);\n};\n/**\n * Initialize cosmicLink using `sep7`.\n */\n\n\nparseFmt.sep7 = function (cosmicLink, sep7) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (sep7.substr(12, 4) === \"pay?\") {\n    throw new Error(\"SEP-0007 'pay' operation is not currently supported.\");\n  } else if (sep7.substr(12, 3) !== \"tx?\") {\n    throw new Error(\"Invalid SEP-0007 link.\");\n  }\n\n  var query = convert.uriToQuery(cosmicLink, sep7);\n  var params = query.substr(1).split(\"&\");\n  if (!options.network) options.network = \"public\";\n  var xdr;\n  params.forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"xdr\":\n        xdr = decodeURIComponent(value);\n        break;\n\n      case \"network_passphrase\":\n        options.network = decode.network(cosmicLink, value);\n        break;\n\n      case \"callback\":\n        if (value.substr(0, 4) !== \"url:\") throw new Error(\"Invalid callback: \" + value);\n        options.callback = decode.url(cosmicLink, value.substr(4));\n        break;\n\n      default:\n        if (isIgnoredSep7Field(field)) {\n          // eslint-disable-next-line no-console\n          console.log(\"Ignored SEP-0007 field: \" + field);\n        } else {\n          throw new Error(\"Invalid SEP-0007 field: \" + field);\n        }\n\n    }\n  });\n  if (!xdr) throw new Error(\"Missing XDR parameter\");\n  setTdesc(cosmicLink, \"xdr\", xdr, options);\n};\n\nfunction isIgnoredSep7Field(field) {\n  return specs.sep7IgnoredFields.find(function (name) {\n    return name === field;\n  });\n}\n/******************************************************************************/\n\n/**\n * Set cosmicLink_tdesc from format `type`. From there, the CosmicLink methods\n * can lazy-evaluate any requested format.\n */\n\n\nfunction setTdesc(cosmicLink, type, value, options) {\n  if (type !== \"uri\") cosmicLink[\"_\" + type] = value;\n\n  switch (type) {\n    case \"uri\":\n      parse.page(cosmicLink, value);\n      cosmicLink._query = convert.uriToQuery(cosmicLink, value, options);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"query\":\n      cosmicLink._tdesc = convert.queryToTdesc(cosmicLink, cosmicLink.query, options);\n      delete cosmicLink._query;\n      break;\n\n    case \"json\":\n      value = convert.jsonToTdesc(cosmicLink, value);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"tdesc\":\n      cosmicLink._tdesc = expand.tdesc(cosmicLink, value);\n      delete cosmicLink._json;\n      check.tdesc(cosmicLink, cosmicLink.tdesc);\n      break;\n\n    case \"sep7\":\n      cosmicLink._xdr = convert.sep7ToXdr(cosmicLink, cosmicLink.sep7);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"xdr\":\n      cosmicLink._transaction = convert.xdrToTransaction(cosmicLink, cosmicLink.xdr, options);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"transaction\":\n      cosmicLink._tdesc = convert.transactionToTdesc(cosmicLink, cosmicLink.transaction, options);\n      delete cosmicLink._sep7;\n\n      if (options.stripSource || options.stripSequence) {\n        delete cosmicLink._xdr;\n        delete cosmicLink._transaction;\n      } else if (options.stripSignatures) {\n        cosmicLink.transaction.signatures = [];\n        delete cosmicLink._xdr;\n      }\n\n  }\n}","\"use_strict\";\n/**\n * Asynchronously load external ressources.\n */\n\n/**/\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar load = require(\"@cosmic-plus/domutils/es5/load\");\n\nmodule.exports = load;\n/**\n *\n * Load cosmic-lib CSS from **href** or from default origin. All subsequent\n * calls will refer to the original request.\n *\n * @example\n * /// Preload at the start of your script:\n * cosmicLib.load.styles('css/cosmic-lib.css')\n *\n * /// Then wait for the request to resolve before you display CosmicLink HTML\n * /// description:\n * await cosmicLib.load.styles()\n *\n * @alias module:load#styles\n * @async\n * @param {string} [href='cosmic-lib.css']\n */\n\nload.styles =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var href,\n      promise,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          href = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"https://cosmic.plus/cosmic-lib/cosmic-lib.css\";\n          promise = load.css(href);\n\n          load.styles = function () {\n            return promise;\n          };\n\n          return _context.abrupt(\"return\", promise);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));","\"use_strict\";\n/**\n * Asynchronously load external ressources.\n *\n * @exports load\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar load = exports;\n\nvar html = require(\"./html\");\n/**\n * Asynchronously load a stylesheet from **href**.\n *\n * @example\n * // Load:\n * await load.css(\"my-styles.css\")\n *\n * @example\n * // Preload:\n * const preloader = load.css(\"my-styles.css\")\n *\n * // Then wait for loading to finish:\n * await cssLoader\n *\n * @async\n * @param {String} href\n */\n\n\nload.css =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(href) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var linkNode = html.create(\"link\", {\n                rel: \"stylesheet\",\n                type: \"text/css\",\n                href: href,\n                onload: resolve,\n                onerror: reject\n              });\n              html.append(document.head, linkNode);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Asynchronously load a script from **href**.\n *\n * @example\n * // Load:\n * await load.js(\"my-script.js\")\n *\n * @example\n * // Preload:\n * const preloader = load.js(\"my-script.js\")\n *\n * // Then wait for loading to finish:\n * await preloader\n *\n * @async\n * @param {String} href\n */\n\n\nload.js =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(href) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var scriptNode = html.create(\"script\", {\n                src: href,\n                onload: resolve,\n                onerror: reject\n              });\n              html.append(document.head, scriptNode);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","\nvar canPromise = require('./can-promise')\n\nvar QRCode = require('./core/qrcode')\nvar CanvasRenderer = require('./renderer/canvas')\nvar SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  var args = [].slice.call(arguments, 1)\n  var argsNum = args.length\n  var isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    var data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","var Buffer = require('../utils/buffer')\nvar Utils = require('./utils')\nvar ECLevel = require('./error-correction-level')\nvar BitBuffer = require('./bit-buffer')\nvar BitMatrix = require('./bit-matrix')\nvar AlignmentPattern = require('./alignment-pattern')\nvar FinderPattern = require('./finder-pattern')\nvar MaskPattern = require('./mask-pattern')\nvar ECCode = require('./error-correction-code')\nvar ReedSolomonEncoder = require('./reed-solomon-encoder')\nvar Version = require('./version')\nvar FormatInfo = require('./format-info')\nvar Mode = require('./mode')\nvar Segments = require('./segments')\nvar isArray = require('isarray')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  var size = matrix.size\n  var pos = FinderPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  var size = matrix.size\n\n  for (var r = 8; r < size - 8; r++) {\n    var value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  var pos = AlignmentPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -2; r <= 2; r++) {\n      for (var c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  var size = matrix.size\n  var bits = Version.getEncodedBits(version)\n  var row, col, mod\n\n  for (var i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  var size = matrix.size\n  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  var i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData (matrix, data) {\n  var size = matrix.size\n  var inc = -1\n  var row = size - 1\n  var bitIndex = 7\n  var byteIndex = 0\n\n  for (var col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          var dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  var buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (var i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  var blocksInGroup2 = totalCodewords % ecTotalBlocks\n  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  var rs = new ReedSolomonEncoder(ecCount)\n\n  var offset = 0\n  var dcData = new Array(ecTotalBlocks)\n  var ecData = new Array(ecTotalBlocks)\n  var maxDataSize = 0\n  var buffer = new Buffer(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (var b = 0; b < ecTotalBlocks; b++) {\n    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  var data = new Buffer(totalCodewords)\n  var index = 0\n  var i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  var segments\n\n  if (isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    var estimatedVersion = version\n\n    if (!estimatedVersion) {\n      var rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments,\n        errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  var bestVersion = Version.getBestVersionForData(segments,\n      errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  var dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  var moduleCount = Utils.getSymbolSize(version)\n  var modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  var errorCorrectionLevel = ECLevel.M\n  var version\n  var mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","var Buffer = require('../utils/buffer')\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Buffer(size * size)\n  this.data.fill(0)\n  this.reservedBit = new Buffer(size * size)\n  this.reservedBit.fill(0)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nvar getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  var posCount = Math.floor(version / 7) + 2\n  var size = getSymbolSize(version)\n  var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  var positions = [size - 7] // Last coord is always (size - 7)\n\n  for (var i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * var pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var coords = []\n  var pos = exports.getRowColCoords(version)\n  var posLength = pos.length\n\n  for (var i = 0; i < posLength; i++) {\n    for (var j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) ||             // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","var getSymbolSize = require('./utils').getSymbolSize\nvar FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nvar PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  var size = data.size\n  var points = 0\n  var sameCountCol = 0\n  var sameCountRow = 0\n  var lastCol = null\n  var lastRow = null\n\n  for (var row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (var col = 0; col < size; col++) {\n      var module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  var size = data.size\n  var points = 0\n\n  for (var row = 0; row < size - 1; row++) {\n    for (var col = 0; col < size - 1; col++) {\n      var last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  var size = data.size\n  var points = 0\n  var bitsCol = 0\n  var bitsRow = 0\n\n  for (var row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (var col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  var darkCount = 0\n  var modulesCount = data.data.length\n\n  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  var size = data.size\n\n  for (var col = 0; col < size; col++) {\n    for (var row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  var numPatterns = Object.keys(exports.Patterns).length\n  var bestPattern = 0\n  var lowerPenalty = Infinity\n\n  for (var p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    var penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","var Buffer = require('../utils/buffer')\nvar Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  var pad = new Buffer(this.degree)\n  pad.fill(0)\n  var paddedData = Buffer.concat([data, pad], data.length + this.degree)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  var remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  var start = this.degree - remainder.length\n  if (start > 0) {\n    var buff = new Buffer(this.degree)\n    buff.fill(0)\n    remainder.copy(buff, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","var Buffer = require('../utils/buffer')\nvar GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Buffer} p1 Polynomial\n * @param  {Buffer} p2 Polynomial\n * @return {Buffer}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  var coeff = new Buffer(p1.length + p2.length - 1)\n  coeff.fill(0)\n\n  for (var i = 0; i < p1.length; i++) {\n    for (var j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Buffer} divident Polynomial\n * @param  {Buffer} divisor  Polynomial\n * @return {Buffer}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  var result = new Buffer(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    var coeff = result[0]\n\n    for (var i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    var offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Buffer}        Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  var poly = new Buffer([1])\n  for (var i = 0; i < degree; i++) {\n    poly = exports.mul(poly, [1, GF.exp(i)])\n  }\n\n  return poly\n}\n","var Buffer = require('../utils/buffer')\n\nif(Buffer.alloc) { \n  var EXP_TABLE = Buffer.alloc(512)\n  var LOG_TABLE = Buffer.alloc(256)\n} else {\n  var EXP_TABLE = new Buffer(512)\n  var LOG_TABLE = new Buffer(256)\n}\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  var x = 1\n  for (var i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","var Utils = require('./utils')\nvar ECCode = require('./error-correction-code')\nvar ECLevel = require('./error-correction-level')\nvar Mode = require('./mode')\nvar VersionCheck = require('./version-check')\nvar isArray = require('isarray')\n\n// Generator polynomial used to encode version information\nvar G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nvar G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  var totalBits = 0\n\n  segments.forEach(function (data) {\n    var reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    var length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  var seg\n\n  var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  var d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","var Utils = require('./utils')\n\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nvar G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  var data = ((errorCorrectionLevel.bit << 3) | mask)\n  var d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","var Mode = require('./mode')\nvar NumericData = require('./numeric-data')\nvar AlphanumericData = require('./alphanumeric-data')\nvar ByteData = require('./byte-data')\nvar KanjiData = require('./kanji-data')\nvar Regex = require('./regex')\nvar Utils = require('./utils')\nvar dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  var segments = []\n  var result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  var byteSegs\n  var kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  var nodes = []\n  for (var i = 0; i < segs.length; i++) {\n    var seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  var table = {}\n  var graph = {'start': {}}\n  var prevNodeIds = ['start']\n\n  for (var i = 0; i < nodes.length; i++) {\n    var nodeGroup = nodes[i]\n    var currentNodeIds = []\n\n    for (var j = 0; j < nodeGroup.length; j++) {\n      var node = nodeGroup[j]\n      var key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (var n = 0; n < prevNodeIds.length; n++) {\n        var prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]]['end'] = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  var mode\n  var bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  var nodes = buildNodes(segs)\n  var graph = buildGraph(nodes, version)\n  var path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  var optimizedSegs = []\n  for (var i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","var Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  var i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  var remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","var Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  var i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","var Buffer = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = new Buffer(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","var Mode = require('./mode')\nvar Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","var Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  var opts = options\n  var canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  var size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  var ctx = canvasEl.getContext('2d')\n  var image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  var opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  var canvasEl = exports.render(qrData, canvas, opts)\n\n  var type = opts.type || 'image/png'\n  var rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","var Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  var alpha = color.a / 255\n  var str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  var str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  var path = ''\n  var moveBy = 0\n  var newRow = false\n  var lineLength = 0\n\n  for (var i = 0; i < data.length; i++) {\n    var col = Math.floor(i % size)\n    var row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  var opts = Utils.getOptions(options)\n  var size = qrData.modules.size\n  var data = qrData.modules.data\n  var qrcodesize = size + opts.margin * 2\n\n  var bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  var path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n"],"sourceRoot":""}