{"version":3,"sources":["webpack:///./src/app-widget.js","webpack:///./src/signing-ui.js","webpack:///./src/view/tx-result-view.js","webpack:///./src/tamper.js","webpack:///./src/app.js","webpack:///./src/app-interface.js","webpack:///./src/helpers.js"],"names":["html","require","load","authenticators","the","parseQuery","query","params","substr","split","forEach","keyval","key","val","length","decodeURIComponent","async","referrer","document","join","hash","location","csp","grab","content","replace","handler","byId","authenticator","console","error","qrcode","qrCode","log","Object","keys","loading","css","push","Promise","all","then","show","body","main","exports","cosmicLib","CosmicLink","dom","env","QrCode","timeout","TxResultView","enableButton","disableButton","readWriteBox","readOnlyBox","disableBox","display","showIf","init","rewrite","cosmiclink_description","nodes","entry","append","value","name","redirect","redirectionCheckbox","checked","qrCodeUI","enable","localStorage","id","passphrase","resolve","networkPassphrase","config","setupNetwork","refresh","cosmicLink","tdesc","authenticatorUI","redirectionUI","transactionUI","needSource","accountId","needNetwork","customNetwork","horizon","network","source","saveTransaction","transaction","handle","status","getAccountId","accountMsgbox","accountUI","disable","networkUI","hide","accountDiv","undefined","accountIdBox","message","placeholder","networkDiv","customNetworkSetup","networkSelector","publicNetwork","scrollLeft","testNetwork","onscroll","customPassphrase","customHorizon","lock","disabled","selector","onchange","onExit","style","textOverflow","networkName","redirection","redirectionForm","textarea","textareaForm","qrForm","redirectionButton","xdrBox","loadingAnim","url","buttonText","href","click","contextIsWidget","onclick","clear","action","isEmbedded","target","open","window","parent","postMessage","redirectionMsgbox","sendTransaction","response","history","replaceState","textContent","scrollTo","scrollHeight","send","result","fromResponse","validated","back","type","create","canvas","title","scale","Math","max","floor","sqrt","toCanvas","margin","QR","qrButton","className","Gui","TxResult","txResult","assign","state","obj","msg","module","tamper","src","myHash","alphabet","i","charAt","random","signingUI","signingPage","Page","copyContent","add","sign","onSelect","pathname","search","origin","websiteUrl","header","about","sep7Utils","isWebHandlerSupported","registerSep7Handler","registerWebHandler","current","select","helpers","button","box","readOnly","cursor","element","classname","messageNode","flag","switchPage","from","to","activeElement","prevNode","destroy","copiedNode","parentNode","insertBefore","setTimeout","hidden"],"mappings":"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","file":"app.js","sourcesContent":["\"use strict\"\n/**\n * Widget interface initialization.\n */\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\nconst load = require(\"@cosmic-plus/domutils/es5/load\")\n\nconst authenticators = require(\"./authenticators\")\nconst the = require(\"./shared\")\n\n/* Functions */\n\nasync function initWidget () {\n  const referrer = document.referrer.split(\"/\", 3).join(\"/\")\n  const hash = location.hash\n  const params = parseQuery(hash)\n\n  // Strengthen Content-Security-Policy.\n  const csp = html.grab(\"meta[http-equiv='Content-Security-Policy']\")\n  csp.content = csp.content.replace(\n    \"style-src *  ;\",\n    `\n    style-src 'self'\n      'sha256-UpnKee22eAiBMULu1lvaV7de7xOzTjdN7K/WZDBil10='\n      ${referrer};\n  `\n  )\n\n  // Interface control.\n  if (params.handler) {\n    const handler = authenticators.byId[params.handler]\n    if (handler) {\n      the.authenticator = handler\n    } else {\n      console.error(`Unknown handler: ${params.handler}`)\n    }\n  }\n  if (params.qrcode) {\n    the.qrCode = params.qrcode !== \"false\"\n  }\n  // eslint-disable-next-line no-console\n  console.log(\"Valid handlers: \", Object.keys(authenticators.byId))\n\n  // Style control (asynchronous).\n  let loading = []\n  if (params.css) {\n    loading.push(load.css(`${referrer}/${params.css}`).catch(console.error))\n  } else {\n    loading.push(load.css(\"widget.css\").catch(console.error))\n    if (params[\"css+\"]) {\n      loading.push(\n        load.css(`${referrer}/${params[\"css+\"]}`).catch(console.error)\n      )\n    }\n  }\n  Promise.all(loading).then(() => html.show(document.body))\n\n  // Interface initialization.\n  require(\"./app-interface\")\n\n  // Consistent reload (app-interface mess with location.hash)\n  location.hash = hash\n}\n\n/* Helpers */\nfunction parseQuery (query) {\n  const params = {}\n\n  query\n    .substr(1)\n    .split(\"&\")\n    .forEach(keyval => {\n      const key = keyval.split(\"=\", 1)[0]\n      const val = keyval.substr(key.length + 1)\n      params[key] = decodeURIComponent(val)\n    })\n\n  return params\n}\n\n/* Initialization */\ninitWidget()\n","\"use strict\"\nconst main = exports\n\nconst cosmicLib = require(\"cosmic-lib\")\nconst CosmicLink = cosmicLib.CosmicLink\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst env = require(\"@cosmic-plus/jsutils/es5/env\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\nconst QrCode = require(\"qrcode\")\nconst { timeout } = require(\"@cosmic-plus/jsutils/es5/misc\")\n\nconst TxResultView = require(\"./view/tx-result-view\")\n\nconst authenticators = require(\"./authenticators\")\nconst the = require(\"./shared\")\n\nconst {\n  enableButton,\n  disableButton,\n  readWriteBox,\n  readOnlyBox,\n  disableBox,\n  display,\n  showIf\n} = require(\"./helpers\")\n\n// Run once page is fully loaded\nmain.init = function () {\n  // Step 1: Transaction\n  if (!the.query) html.rewrite(dom.cosmiclink_description, \"No transaction\")\n\n  // Step 2: Authenticator\n  authenticators.nodes.forEach(entry => html.append(dom.authenticators, entry))\n  dom.authenticators.value = the.authenticator.name\n\n  // Step 3: Signing\n  if (the.redirect) dom.redirectionCheckbox.checked = true\n  if (the.qrCode) qrCodeUI.enable()\n\n  // CosmicLib network setup\n  for (let key in localStorage) {\n    if (key.substr(0, 8) === \"network:\") {\n      const id = key.substr(8)\n      const passphrase = cosmicLib.resolve.networkPassphrase(id)\n      cosmicLib.config.setupNetwork(id, localStorage[key], passphrase)\n    }\n  }\n}\n\nmain.refresh = async function () {\n  if (the.query) the.cosmicLink = new CosmicLink(the.query)\n  else the.cosmicLink = { tdesc: {} }\n  authenticatorUI.init()\n  redirectionUI.init()\n  if (the.cosmicLink.query) transactionUI.refresh()\n}\n\n/*******************************************************************************\n * Step 1: Transaction UI\n */\n\nconst transactionUI = {}\n\ntransactionUI.refresh = function () {\n  if (the.authenticator.needSource && !the.accountId) {\n    if (!the.authenticator.getAccountId) {\n      redirectionUI.error(\"Please set a source account\")\n    }\n    return\n  }\n  if (the.authenticator.needNetwork) {\n    if (dom.customNetwork.checked && (!the.horizon || !the.network)) {\n      redirectionUI.error(\"Please fill custom network fields\")\n      return\n    }\n  }\n\n  cosmicLib.config.source = the.accountId\n  cosmicLib.config.network = the.network\n\n  const saveTransaction = the.transaction = the.authenticator.handle(\n    the.cosmicLink\n  )\n\n  the.transaction\n    .then(function (value) {\n      if (the.transaction === saveTransaction) redirectionUI.refresh(value)\n    })\n    .catch(function () {\n      if (the.transaction === saveTransaction)\n        redirectionUI.error(the.cosmicLink.status)\n    })\n}\n\n/*******************************************************************************\n * Step 2: Authenticator UI\n */\n\nconst authenticatorUI = {}\n\nauthenticatorUI.init = function () {\n  display(dom.accountMsgbox, \"\")\n  the.authenticator = authenticators[dom.authenticators.value]\n  localStorage.authenticator = the.authenticator.name\n\n  if (the.authenticator.needSource) accountUI.init()\n  else accountUI.disable()\n  if (the.authenticator.needNetwork) networkUI.init()\n  else networkUI.disable()\n\n  if (the.authenticator.refresh) the.authenticator.refresh(main.refresh)\n}\n\n/**\n * AccountID box UI\n */\nconst accountUI = {}\n\naccountUI.disable = function () {\n  html.hide(dom.accountDiv)\n  the.accountId = undefined\n}\n\naccountUI.init = async function () {\n  html.show(dom.accountDiv)\n\n  if (!the.authenticator.getAccountId) {\n    if (the.cosmicLink.tdesc.source) {\n      if (the.cosmicLink.tdesc.source.error) {\n        disableBox(dom.accountIdBox, the.cosmicLink.tdesc.source.error.message)\n      } else {\n        the.accountId = true\n        readOnlyBox(dom.accountIdBox, the.cosmicLink.tdesc.source)\n      }\n    } else {\n      the.accountId = localStorage.accountId\n      readWriteBox(\n        dom.accountIdBox,\n        \"Federated Address or Public Key\",\n        the.accountId\n      )\n    }\n  } else {\n    the.accountId = undefined\n    disableBox(dom.accountIdBox, \"Connecting...\")\n\n    const authenticator = the.authenticator\n    try {\n      const accountId = await the.authenticator.getAccountId()\n      if (the.authenticator !== authenticator) return\n      the.accountId = accountId\n      readOnlyBox(dom.accountIdBox, accountId)\n      transactionUI.refresh()\n    } catch (error) {\n      if (the.authenticator !== authenticator) return\n      dom.accountIdBox.placeholder = \"Error\"\n      display(dom.accountMsgbox, \"error\", error.message + \".\")\n      console.error(error)\n    }\n  }\n}\n\n/**\n * Network selection UI\n */\nconst networkUI = {}\n\nnetworkUI.disable = function () {\n  html.hide(dom.networkDiv)\n  the.network = \"public\"\n  the.horizon = undefined\n}\n\nnetworkUI.init = function () {\n  html.show(dom.networkDiv)\n  html.hide(dom.customNetworkSetup)\n  the.network = the.cosmicLink.tdesc.network || localStorage.networkSelector\n  the.horizon = undefined\n\n  switch (the.network) {\n  case undefined:\n  case \"public\":\n    dom.publicNetwork.checked = true\n    dom.networkSelector.scrollLeft = 0\n    break\n  case \"test\":\n    dom.testNetwork.checked = true\n    break\n  default:\n    if (dom.networkSelector.onscroll) dom.networkSelector.onscroll()\n    // Doesn't works when called synchronously.\n    timeout(1).then(() => dom.networkSelector.scrollLeft = 999)\n    dom.customNetwork.checked = true\n\n    html.show(dom.customNetworkSetup)\n    if (!the.network) the.network = localStorage.customPassphrase\n    the.horizon =\n        cosmicLib.resolve.horizon(the.network || \"\")\n        || the.cosmicLink.tdesc.horizon\n    dom.customPassphrase.value = the.network || \"\"\n    dom.customHorizon.value = the.horizon || \"\"\n  }\n\n  if (the.cosmicLink.tdesc.network) networkUI.lock()\n}\n\nnetworkUI.lock = function () {\n  readOnlyBox(dom.customPassphrase)\n  dom.publicNetwork.disabled = true\n  dom.testNetwork.disabled = true\n  dom.customNetwork.disabled = true\n}\n\nnetworkUI.switch = function (selector) {\n  localStorage.networkSelector = selector\n  main.refresh()\n}\n\n/**\n * HTML Elements Events\n */\n\ndom.authenticators.onchange = function () {\n  if (the.authenticator && the.authenticator.onExit) the.authenticator.onExit()\n  the.redirect = localStorage.redirect = false\n  dom.redirectionCheckbox.checked = false\n  main.refresh()\n}\n\ndom.accountIdBox.onchange = function () {\n  the.accountId = localStorage.accountId = dom.accountIdBox.value\n  main.refresh()\n}\n\ndom.networkSelector.onscroll = function () {\n  dom.networkSelector.style.textOverflow = \"initial\"\n  dom.networkSelector.onscroll = undefined\n}\n\ndom.publicNetwork.onchange = () => networkUI.switch(\"public\")\ndom.testNetwork.onchange = () => networkUI.switch(\"test\")\ndom.customNetwork.onchange = () => networkUI.switch(\"\")\n\ndom.customPassphrase.onchange = function () {\n  const networkName = cosmicLib.resolve.networkName(dom.customPassphrase.value)\n  localStorage.customPassphrase = networkName\n  networkUI.switch(\"\")\n}\n\ndom.customHorizon.onchange = function () {\n  the.horizon = dom.customHorizon.value\n  if (the.horizon && the.horizon.substr(0, 4) !== \"http\") {\n    the.horizon = \"https://\" + the.horizon\n  }\n  if (the.network && the.horizon) {\n    const passphrase = cosmicLib.resolve.networkPassphrase(the.network)\n    cosmicLib.config.setupNetwork(the.network, the.horizon, passphrase)\n    localStorage[\"network:\" + passphrase] = the.horizon\n  }\n  if (the.network) main.refresh()\n}\n\n/*******************************************************************************\n * Step 3: Signing/Redirection UI\n */\n\nconst redirectionUI = {}\n\nredirectionUI.init = function () {\n  redirectionUI.display(\"\")\n  showIf(the.authenticator.redirection, dom.redirectionForm)\n  showIf(the.authenticator.textarea, dom.textareaForm)\n  showIf(the.query && the.authenticator.qrCode, dom.qrForm)\n\n  if (!the.query) {\n    if (the.authenticator.url) {\n      const onclick = () => location.href = the.authenticator.url\n      enableButton(dom.redirectionButton, the.authenticator.buttonText, onclick)\n    } else {\n      redirectionUI.error(\"No transaction\")\n    }\n  } else {\n    if (the.authenticator.redirection) disableButton(dom.redirectionButton, \"…\")\n    if (the.authenticator.textarea) disableBox(dom.xdrBox, \"Computing...\")\n    if (the.authenticator.qrCode) qrCodeUI.loadingAnim()\n  }\n}\n\nredirectionUI.refresh = function (value) {\n  if (the.authenticator.redirection) {\n    const onclick = () => redirectionUI.click(value)\n    enableButton(dom.redirectionButton, the.authenticator.buttonText, onclick)\n  }\n\n  if (the.redirect && !the.contextIsWidget) {\n    dom.redirectionButton.onclick()\n  }\n\n  if (the.authenticator.textarea) readOnlyBox(dom.xdrBox, value)\n  if (the.authenticator.qrCode) qrCodeUI.refresh(value)\n}\n\nredirectionUI.error = function (error) {\n  disableButton(dom.redirectionButton, error)\n  disableBox(dom.xdrBox, error)\n  html.clear(dom.qrCode)\n}\n\nredirectionUI.click = async function (action) {\n  if (typeof action === \"string\") {\n    if (\n      the.contextIsWidget\n      || env.isEmbedded && the.authenticator.target === \"new\"\n    ) {\n      open(action, \"_blank\")\n      window.parent.postMessage(\"close\", \"*\")\n    } else if (env.isEmbedded && the.authenticator.target === \"external\") {\n      open(action)\n      window.parent.postMessage(\"close\", \"*\")\n    } else {\n      location.replace(action)\n    }\n  } else if (typeof action === \"function\") {\n    display(dom.redirectionMsgbox, \"info\", \"Waiting for confirmation...\")\n    dom.redirectionButton.disabled = true\n\n    try {\n      const transaction = await action()\n      await redirectionUI.sendTransaction(transaction)\n    } catch (error) {\n      console.error(error.response || error)\n      redirectionUI.display(\"error\", error.message.replace(/\\.$/, \"\"))\n      dom.redirectionButton.disabled = false\n    }\n  }\n}\n\nredirectionUI.sendTransaction = async function () {\n  redirectionUI.display(\"info\", \"Sending to the network...\")\n  history.replaceState({}, \"\", the.cosmicLink.query)\n  dom.query.textContent = the.cosmicLink.query\n  networkUI.lock()\n\n  window.scrollTo(0, document.body.scrollHeight)\n  const response = await the.cosmicLink.send().catch(error => error)\n  const result = TxResultView.fromResponse(response)\n  redirectionUI.display(\"\", result)\n\n  if (result.validated && env.isEmbedded) {\n    parent.postMessage(\"close\", \"*\")\n  }\n  if (document.referrer) {\n    enableButton(dom.redirectionButton, \"Close\", () => history.back())\n  } else {\n    dom.redirectionButton.value = \"Done\"\n  }\n}\n\nredirectionUI.display = function (type, message) {\n  display(dom.redirectionMsgbox, type, message)\n}\n\nconst qrCodeUI = {}\n\nqrCodeUI.loadingAnim = function () {\n  html.rewrite(dom.qrCode, html.create(\"span\", \".cosmiclib_loadingAnim\"))\n}\n\nqrCodeUI.refresh = async function (value) {\n  // Makes that fuction non-blocking.\n  await timeout(0)\n\n  if (!the.authenticator.qrCode || !value) return\n\n  const canvas = html.create(\"canvas\", { title: value })\n  const scale = Math.max(3, 6 - Math.floor(Math.sqrt(value) / 10))\n  QrCode.toCanvas(canvas, value, { margin: 0, scale })\n\n  html.rewrite(dom.qrCode, canvas)\n}\n\nqrCodeUI.switch = function () {\n  the.qrCode = localStorage.QR = !the.qrCode\n  if (the.qrCode) qrCodeUI.enable()\n  else qrCodeUI.disable()\n}\n\nqrCodeUI.enable = function () {\n  dom.qrButton.className = \"enabled\"\n  html.show(dom.qrCode)\n}\n\nqrCodeUI.disable = function () {\n  dom.qrButton.className = undefined\n  html.hide(dom.qrCode)\n}\n\n/**\n * HTML Elements Events\n */\n\ndom.redirectionButton.onclick = redirectionUI.click\ndom.qrButton.onclick = qrCodeUI.switch\n\ndom.redirectionCheckbox.onchange = function () {\n  the.redirect = localStorage.redirect = !the.redirect\n}\n","\"use strict\"\n/**\n * TxResultView - Displays TxResult instances\n */\nconst Gui = require(\"@cosmic-plus/domutils/es5/gui\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\n\nconst TxResult = require(\"@cosmic-plus/tx-result\")\n\n/* Definition */\nclass TxResultView extends Gui {\n  static fromResponse (response) {\n    const result = new TxResult(response)\n    return new TxResultView(result)\n  }\n\n  constructor (txResult) {\n    super(`\n<div class=\"cosmiclink_description\">\n\n  <span class=%state>%title</span>\n\n  <ul class=\"error\" hidden=%validated>\n    %{toLi:errors...}\n  </ul>\n\n</div>\n    `)\n\n    Object.assign(this, txResult)\n    this.state = this.validated ? \"info\" : \"error\"\n  }\n\n  has (obj) {\n    return !!obj\n  }\n  toLi (msg) {\n    return html.create(\"li\", null, msg)\n  }\n}\n\n/* Exports */\nmodule.exports = TxResultView\n","\"use strict\"\n/**\n * Robot tamper.\n */\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\n\nfunction myHash () {\n  if (localStorage.myHash) return localStorage.myHash\n\n  var alphabet =\n    \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  var size = 32\n\n  var hash = \"\"\n  for (var i = 0; i < size; i++) {\n    hash += alphabet.charAt(Math.floor(Math.random() * alphabet.length))\n  }\n\n  localStorage.myHash = hash\n  return hash\n}\n\ndom.tamper.src = \"https://robohash.org/\" + myHash()\n","\"use strict\"\n/**\n * Cosmic.Link Graphical User Interface\n */\nconst the = require(\"./shared\")\n\nif (the.contextIsWidget) {\n  require(\"./app-widget\")\n} else {\n  require(\"./app-interface\")\n}\n","\"use strict\"\n/**\n * App interface initialization.\n */\nconst cosmicLib = require(\"cosmic-lib\")\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\nconst Page = require(\"@cosmic-plus/domutils/es5/page\")\n\nconst the = require(\"./shared\")\nconst { copyContent } = require(\"./helpers\")\n\n/* Functions */\n\nfunction initInterface () {\n  // Signing interface\n  const signingUI = require(\"./signing-ui\")\n  const signingPage = Page.add(\"Sign\", dom.sign)\n  signingPage.onSelect = function () {\n    history.replaceState(\"\", null, location.pathname + location.search)\n    signingUI.refresh()\n  }\n  signingUI.init()\n\n  // Non-widget components\n  if (!the.contextIsWidget) {\n    initNonWidgetInterface()\n  }\n\n  // Default page\n  if (Page.current === signingPage) signingPage.onSelect()\n  else if (!Page.current) Page.select(\"#sign\")\n}\n\nfunction initNonWidgetInterface () {\n  // Header\n  if (location.origin === \"null\") {\n    dom.websiteUrl.textContent = location.pathname\n  } else {\n    dom.websiteUrl.textContent = location.origin + location.pathname\n  }\n  dom.query.textContent = location.search\n  dom.header.onclick = () => copyContent(dom.header)\n\n  // About page\n  Page.add(\"About\", dom.about)\n\n  // SEP-0007\n  if (cosmicLib.sep7Utils.isWebHandlerSupported()) {\n    dom.registerSep7Handler.onclick = () => {\n      cosmicLib.sep7Utils.registerWebHandler(\n        location.href.split(/[?#]/, 1)[0],\n        \"Cosmic.link\"\n      )\n    }\n  } else {\n    // (hack) Keep the collapsed bottom margin.\n    dom.registerSep7Handler.textContent = \"\"\n  }\n  html.show(dom.registerSep7Handler)\n\n  // Robot tamper\n  require(\"./tamper\")\n}\n\n/* Init */\ninitInterface()\n","\"use strict\"\n/**\n * Generic helpers\n */\nconst helpers = exports\n\nconst dom = require(\"@cosmic-plus/domutils/es5/dom\")\nconst html = require(\"@cosmic-plus/domutils/es5/html\")\n\n/*******************************************************************************\n * Form Elements Helpers\n */\n\nhelpers.enableButton = function (button, value, onclick) {\n  if (typeof value === \"string\") button.value = value\n  button.onclick = onclick\n  button.disabled = false\n}\n\nhelpers.disableButton = function (button, value) {\n  if (typeof value === \"string\") button.value = value\n  button.disabled = true\n}\n\nhelpers.readWriteBox = function (box, placeholder, value) {\n  if (typeof value === \"string\") box.value = value\n  if (typeof placeholder === \"string\") box.placeholder = placeholder\n  box.disabled = false\n  box.readOnly = false\n  box.onclick = undefined\n  box.style.cursor = \"initial\"\n}\n\nhelpers.readOnlyBox = function (box, value) {\n  if (typeof value === \"string\") box.value = value\n  box.disabled = false\n  box.readOnly = true\n  box.onclick = () => helpers.copyContent(box)\n  box.style.cursor = \"pointer\"\n}\n\nhelpers.disableBox = function (box, placeholder) {\n  helpers.readWriteBox(box, placeholder, \"\")\n  box.disabled = true\n}\n\n/*******************************************************************************\n * Other Helpers\n */\n\nhelpers.display = function (element, type = \"\", message = \"\") {\n  const classname = type ? \".\" + type : null\n  const messageNode = classname\n    ? html.create(\"span\", classname, message)\n    : message\n  html.rewrite(element, html.create(\"span\", classname, messageNode))\n}\n\nhelpers.showIf = function (flag, element) {\n  flag ? html.show(element) : html.hide(element)\n}\n\nhelpers.switchPage = function (from, to) {\n  html.append(dom.body, from)\n  html.append(dom.main, to)\n}\n\nhelpers.copyContent = function (element) {\n  if (html.copyContent(element) && document.activeElement.value) {\n    const prevNode = html.grab(\"#copied\")\n    if (prevNode) html.destroy(prevNode)\n    const copiedNode = html.create(\"span\", \"#copied\", \"Copied\")\n    element.parentNode.insertBefore(copiedNode, element)\n    setTimeout(() => {\n      copiedNode.hidden = true\n    }, 3000)\n  }\n}\n"],"sourceRoot":""}